//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 12 2015 14:15:46).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "FBReachabilityListener-Protocol.h"
#import "FBRtmpSocketDelegate-Protocol.h"
#import "FBVideoStreamingErrorProcessor-Protocol.h"
#import "NSStreamDelegate-Protocol.h"

@class FBRtmpSocket, NSInputStream, NSOutputStream, NSString, NSThread, NSURL;
@protocol FBRtmpSessionDelegate, FBThroughputMonitor;

@interface FBRtmpSession : NSObject <NSStreamDelegate, FBReachabilityListener, FBRtmpSocketDelegate, FBVideoStreamingErrorProcessor>
{
    NSOutputStream *_outputStream;
    NSInputStream *_inputStream;
    NSURL *_url;
    id <FBRtmpSessionDelegate> _delegate;
    FBRtmpSocket *_rtmpClient;
    struct FBAudioStreamingConfig _audioConfig;
    struct FBVideoStreamingConfig _videoConfig;
    CDStruct_61cba922 _networkConfig;
    deque_873eb9f0 _videoQueue;
    deque_873eb9f0 _audioQueue;
    // Error parsing type: {atomic<long long>="__a_"Aq}, name: _hadConnection
    // Error parsing type: {atomic<long long>="__a_"Aq}, name: _queuedFramesCount
    // Error parsing type: {atomic<long long>="__a_"Aq}, name: _queueSizeInBytes
    // Error parsing type: {atomic<double>="__a_"Ad}, name: _videoQueueSizeInSeconds
    // Error parsing type: {atomic<double>="__a_"Ad}, name: _audioQueueSizeInSeconds
    struct Stats _audioStats;
    struct Stats _videoStats;
    struct mutex _frameQueuesMutex;
    struct mutex _runLoopMutex;
    NSThread *_networkThread;
    struct __CFRunLoop *_networkRunLoop;
    struct __CFRunLoopSource *_newFrameAvailableSignal;
    struct __CFRunLoopSource *_reconnectSignal;
    // Error parsing type: {atomic<FBRtmpSessionState>="__a_"Ai}, name: _state
    // Error parsing type: {atomic<int>="__a_"Ai}, name: _retryCount
    // Error parsing type: {atomic<CMTime>="__a_"A{?}}, name: _lastSentVideoPacketPts
    // Error parsing type: {atomic<CMTime>="__a_"A{?}}, name: _lastSentAudioPacketPts
    // Error parsing type: {atomic<int>="__a_"Ai}, name: _connectionCounter
    // Error parsing type: {atomic<CMTime>="__a_"A{?}}, name: _baseTimestamp
    id <FBThroughputMonitor> _throughputMonitor;
}

@property(retain, nonatomic) id <FBThroughputMonitor> throughputMonitor; // @synthesize throughputMonitor=_throughputMonitor;
@property(nonatomic) __weak id <FBRtmpSessionDelegate> delegate; // @synthesize delegate=_delegate;
- (id).cxx_construct;
- (void).cxx_destruct;
- (deque_873eb9f0 *)audioQueue;
- (deque_873eb9f0 *)videoQueue;
- (void)rtmpSocketOnError:(id)arg1;
- (void)rtmpSocketRequireReconnect;
- (void)rtmpSocketOnConnect;
- (void)_reconnect;
- (void)tryReconnect;
- (void)reachabilityStateChangedTo:(unsigned int)arg1 from:(unsigned int)arg2;
- (BOOL)writeFLVPacket:(const vector_a3426c4e *)arg1 packetType:(int)arg2 timestamp:(unsigned int)arg3;
- (void)write:(const struct FBFLVFrame *)arg1 type:(unsigned char)arg2;
- (void)setupRtmpWithExternalSocket:(int)arg1;
- (void)prepareToReconnect;
- (void)closeRtmpClient;
- (void)stream:(id)arg1 handleEvent:(unsigned int)arg2;
- (void)failWithError:(id)arg1;
- (void)failWithErrorCode:(int)arg1 withErrno:(int)arg2;
- (void)closeStreams;
- (void)_flushFrameQueue;
- (void)_networkThreadMain:(id)arg1;
- (void)reconnectImpl;
- (void)disconnect;
- (void)connect;
- (void)droppedPackets:(shared_ptr_896bc00e)arg1 withReason:(id)arg2;
- (void)processError:(id)arg1;
- (void)dropOldFramesIfNeeded;
- (void)sendFLVFrame:(struct FBFLVFrame *)arg1 frameType:(unsigned char)arg2;
- (double)audioQueueSizeInSeconds;
- (double)videoQueueSizeInSeconds;
- (unsigned long long)queueSizeInBytes;
- (CDStruct_1b6d18a9)lastSentAudioPacketPts;
- (CDStruct_1b6d18a9)lastSentVideoPacketPts;
- (void)dealloc;
- (void)setBaseTimestamp:(CDStruct_1b6d18a9)arg1;
- (id)initWithURL:(id)arg1 audioConfig:(struct FBAudioStreamingConfig)arg2 videoConfig:(struct FBVideoStreamingConfig)arg3 networkConfig:(CDStruct_61cba922)arg4 delegate:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end


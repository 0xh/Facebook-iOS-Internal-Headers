//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 12 2015 14:15:46).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "FBAnnotatedBlockController.h"

#import "FBHTMLEmbedNodeDelegate-Protocol.h"
#import "FBReuseInstanceProvider-Protocol.h"
#import "FBReusePoolBlockController-Protocol.h"
#import "FBTransitioningBlockController-Protocol.h"

@class FBHTMLEmbedNode, FBHTMLEmbedSize, FBNetworkerRequest, FBUserSession, NSDictionary, NSMutableDictionary, NSString, NSURL;
@protocol FBIntentHandler, FBReuseInstanceProvider;

@interface FBHTMLEmbedBlockController : FBAnnotatedBlockController <FBHTMLEmbedNodeDelegate, FBReuseInstanceProvider, FBTransitioningBlockController, FBReusePoolBlockController>
{
    FBUserSession *_session;
    struct Mutex _lock;
    BOOL _isAdElement;
    FBHTMLEmbedNode *_webViewNode;
    NSURL *_baseURL;
    NSString *_htmlString;
    int _pendingRequestCount;
    BOOL _isPreloading;
    BOOL _hasLoggedPerfEvent;
    BOOL _hasLoadedContent;
    struct CGSize _loadedContentSize;
    BOOL _didDequeueInstance;
    FBNetworkerRequest *_pendingHTMLDownloadRequest;
    NSString *_analyticsID;
    NSDictionary *_analyticsInfo;
    NSMutableDictionary *_perfAnalyticsInfo;
    double _contentLoadingStartTime;
    id <FBIntentHandler> intentHandler;
    NSString *_reuseIdentifier;
    id <FBReuseInstanceProvider> reuseProvider;
    FBHTMLEmbedSize *_embedSize;
}

+ (unsigned int)initialCapacity;
+ (void)prepareInstanceForReuse:(id)arg1;
+ (id)generateReuseInstance;
+ (unsigned int)maximumCapacity;
+ (Class)reuseClass;
+ (void)setWKWebViewEnabled:(BOOL)arg1;
+ (BOOL)_suppressIncrementalRenderingForEmbeds;
+ (BOOL)_useWKWebViewForEmbeds;
+ (id)blockRenderableLayoutForStoryBlock:(id)arg1 constrainingSize:(struct CGSize)arg2 presentationAttributes:(id)arg3 displayContext:(id)arg4;
+ (BOOL)blockControllerCanRenderStoryBlock:(id)arg1 presentationAttributes:(id)arg2;
@property(retain, nonatomic) FBHTMLEmbedSize *embedSize; // @synthesize embedSize=_embedSize;
@property(nonatomic) __weak id <FBReuseInstanceProvider> reuseProvider; // @synthesize reuseProvider;
@property(readonly, copy, nonatomic) NSString *reuseIdentifier; // @synthesize reuseIdentifier=_reuseIdentifier;
- (void)setIntentHandler:(id)arg1;
- (id)intentHandler;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)enqueueInstanceIfNecessary;
- (void)enqueueInstance:(id)arg1;
- (void)dequeueInstanceIfNecessary;
- (id)dequeueInstance:(id)arg1;
- (void)didReclaimInstance;
- (BOOL)blockCanRespondToGestureInDirection:(int)arg1 atPoint:(struct CGPoint)arg2;
- (void)handleIntent:(id)arg1;
- (void)htmlEmbedNode:(id)arg1 didUpdateContentSize:(struct CGSize)arg2;
- (void)htmlEmbedNode:(id)arg1 didFailNavigationRequest:(id)arg2 withError:(id)arg3;
- (void)htmlEmbedNode:(id)arg1 didFinishNavigationRequest:(id)arg2;
- (void)htmlEmbedNode:(id)arg1 didStartNavigationRequest:(id)arg2;
- (BOOL)htmlEmbedNode:(id)arg1 shouldStartNavigationRequest:(id)arg2 navigationType:(int)arg3;
- (void)didLoseFocus;
- (void)didReceiveFocus;
- (void)didEnterPreloadViewport;
- (void)didBeginTransitionToPresentationAttributes:(id)arg1 withGestureAtPoint:(struct CGPoint)arg2 originLayout:(id)arg3 destinationLayout:(id)arg4;
- (BOOL)blockControllerCanTransitionToPresentationAttributes:(id)arg1;
- (void)_cleanupWebViewLoadingAnalyticValues;
- (void)_logWebViewLoadingAnalytics;
- (void)_logWebAnalyticsIfLastRequest;
- (void)_updateLayoutIfNecessary;
- (void)_loadContent;
- (void)_triggerHTMLDownloadIfNecessary;
- (id)blockRenderable;
- (void)dealloc;
- (void)cleanup;
- (id)initWithStoryBlock:(id)arg1 presentationAttributes:(id)arg2 session:(id)arg3 displayContext:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end


//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 12 2015 14:15:46).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

@class AVAssetReader, AVAssetReaderOutput, AVAssetTrack, AVAssetWriter, AVAssetWriterInput, CKComponent, CKComponentScopeRoot, FBAACEncoder, FBAACPacketizer, FBComposerScopeSingletonProvider, FBDisplayableMediaViewProviderContext, FBGlobalScopeLookupOrCreateProvider, FBGlobalScopeSingletonProvider, FBH264Packetizer, FBHScrollOffsetStore, FBImageDownloader, FBRtmpSession, FBScenePath, FBVerveNode, FBVervePackage, FBVerveSlide, FBVerveSlideLayout, FBVerveTransition, FBVerveView, FBVideoExportConfig, FBWebViewResponse, NSArray, NSAttributedString, NSError, NSMutableDictionary, NSNumber, NSString, NSURL, UIColor, UIFont, UIImage;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AMFObject {
    int _field1;
    struct AMFObjectProperty *_field2;
};

struct AMFObjectProperty;

struct AVCFrame;

struct AVCFrameSplitter {
    unsigned int m_nalucount;
    unsigned int m_framecount;
    unsigned int m_bytecount;
    struct shared_ptr<H264SPS> m_sps;
    struct shared_ptr<AVCFrame> m_currframe;
};

struct AVal {
    char *_field1;
    int _field2;
};

struct AudioBuffer {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioClassDescription {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AudioQueueBuffer;

struct AudioStreamBasicDescription {
    double _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
};

struct AuthenticationCompletedInformation {
    char _field1;
    char _field2;
};

struct BackgroundExceptionLogger;

struct BandwidthMonitor;

struct BinaryBitmap;

struct BoxBlur1DShader {
    unsigned int program;
    struct {
        unsigned int texture;
        unsigned int texOffsetStep;
    } uniform;
};

struct BriefDescriptor {
    CDStruct_dff5684f _field1;
    struct bitset<256> _field2;
};

struct BuilderImpl;

struct CATransform3D {
    float m11;
    float m12;
    float m13;
    float m14;
    float m21;
    float m22;
    float m23;
    float m24;
    float m31;
    float m32;
    float m33;
    float m34;
    float m41;
    float m42;
    float m43;
    float m44;
};

struct CGAffineTransform {
    float a;
    float b;
    float c;
    float d;
    float tx;
    float ty;
};

struct CGColor;

struct CGColorSpace;

struct CGPoint {
    float x;
    float y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    float width;
    float height;
};

struct CKAppliedComponentAnimation;

struct CKBuildComponentResult {
    id _field1;
    id _field2;
    struct CKComponentBoundsAnimation _field3;
};

struct CKButtonComponentAccessibilityConfiguration {
    id _field1;
    id _field2;
};

struct CKComponentAccessibilityActionContext {
    CKComponent *sender;
    struct CKComponentAccessibilityContext accessibilityContext;
};

struct CKComponentAccessibilityAggregationItem {
    struct CKComponentAccessibilityActionContext actionContext;
    struct vector<CKComponentAccessibilityAggregationItem, std::__1::allocator<CKComponentAccessibilityAggregationItem>> children;
};

struct CKComponentAccessibilityContext {
    NSNumber *isAccessibilityElement;
    NSString *accessibilityIdentifier;
    struct CKComponentAccessibilityTextAttribute accessibilityLabel;
    SEL accessibilityComponentAction;
};

struct CKComponentAccessibilityTextAttribute {
    CDUnknownBlockType accessibilityLazyTextBlock;
};

struct CKComponentAnimation;

struct CKComponentBoundsAnimation {
    double duration;
    double delay;
    unsigned int mode;
    float springDampingRatio;
    float springInitialVelocity;
};

struct CKComponentHostingViewInputs {
    CKComponentScopeRoot *scopeRoot;
    id model;
    id context;
    unordered_multimap_0bf43592 stateUpdates;
};

struct CKComponentLayout {
    CKComponent *component;
    struct CGSize size;
    shared_ptr_6a94d7a4 children;
};

struct CKComponentLayoutChild {
    struct CGPoint _field1;
    struct CKComponentLayout _field2;
};

struct CKComponentLifecycleManagerState {
    id model;
    id context;
    struct CKSizeRange constrainedSize;
    struct CKComponentLayout layout;
    CKComponentScopeRoot *root;
    id memoizerState;
    struct CKComponentBoundsAnimation boundsAnimation;
};

struct CKComponentMountInfo;

struct CKComponentPreparationInputBatch {
    unsigned long long ID;
    struct Sections sections;
    struct vector<CKComponentPreparationInputItem *, std::__1::allocator<CKComponentPreparationInputItem *>> items;
    char isContiguousTailInsertion;
};

struct CKComponentScopeFramePair {
    id _field1;
    id _field2;
};

struct CKComponentSize {
    struct CKRelativeDimension width;
    struct CKRelativeDimension height;
    struct CKRelativeDimension minWidth;
    struct CKRelativeDimension minHeight;
    struct CKRelativeDimension maxWidth;
    struct CKRelativeDimension maxHeight;
};

struct CKComponentViewAttribute {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field1;
    CDUnknownBlockType _field2;
    CDUnknownBlockType _field3;
    CDUnknownBlockType _field4;
};

struct CKComponentViewConfiguration {
    struct shared_ptr<const CKComponentViewConfiguration::Repr> rep;
};

struct CKComponentViewContext {
    id _field1;
    struct CGRect _field2;
};

struct CKMemoizationKey {
    unsigned int _field1;
    struct shared_ptr<const void> _field2;
    CDUnknownFunctionPointerType _field3;
};

struct CKNetworkImageComponentOptions {
    id _field1;
    struct CGRect _field2;
};

struct CKPendingComponentAnimation;

struct CKRelativeDimension {
    int _type;
    float _value;
};

struct CKSizeRange {
    struct CGSize min;
    struct CGSize max;
};

struct CKStackLayoutComponentChild {
    id _field1;
    float _field2;
    float _field3;
    char _field4;
    char _field5;
    struct CKRelativeDimension _field6;
    unsigned int _field7;
};

struct CKStackLayoutComponentStyle {
    unsigned int direction;
    float spacing;
    unsigned int justifyContent;
    unsigned int alignItems;
};

struct CKStateConfiguration {
    NSString *title;
    UIColor *titleColor;
    UIImage *image;
    UIImage *backgroundImage;
};

struct CKStatefulViewComponentAccessibility {
    id _field1;
    id _field2;
};

struct CKStaticLayoutComponentChild;

struct CKSuspensionControllerChangesetContainer;

struct CLCImpl;

struct Cache<NSObject *, NSObject *, std::__1::hash<NSObject *>, std::__1::equal_to<NSObject *>> {
    CDUnknownFunctionPointerType *_field1;
    struct unordered_map<NSObject *, NSObject *, std::__1::hash<NSObject *>, std::__1::equal_to<NSObject *>, std::__1::allocator<std::__1::pair<NSObject *const, NSObject *>>> _field2;
    unsigned long _field3;
    unsigned long _field4;
    unsigned long _field5;
    double _field6;
};

struct Callback<std::__1::pair<FBWebViewResponse *, NSError *>>;

struct Change;

struct ClassMetadata {
    unsigned int _field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
    struct FieldMetadata _field5[1];
};

struct Client;

struct CollectionViewMutations {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
};

struct ConfigInfo {
    id _field1;
    id _field2;
    id _field3;
};

struct Configuration;

struct DefaultBandwidthMonitor;

struct DenseStorage<double, 9, 3, 3, 1> {
    struct plain_array<double, 9, 1, 0> _field1;
};

struct DetectorImpl {
    struct vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> _field1;
    int _field2;
    struct _opaque_pthread_mutex_t _field3;
    struct vector<std::__1::vector<TagDescriptor, std::__1::allocator<TagDescriptor>>, std::__1::allocator<std::__1::vector<TagDescriptor, std::__1::allocator<TagDescriptor>>>> _field4;
    struct vector<TagDescriptor, std::__1::allocator<TagDescriptor>> _field5;
    struct wfs *_field6;
    struct StageIIDataT *_field7;
    struct PointsClassifier *_field8;
    float _field9;
    char _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    float _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    int _field21;
    int _field22;
    int _field23;
    unsigned int *_field24;
    char *_field25;
    short *_field26;
    struct Resizer *_field27;
    struct OrientedDetector *_field28;
    struct SaliencyCalcData _field29;
};

struct DiskCache;

struct EncodedObjectRecord;

struct EventBase;

struct ExtendedMetadata;

struct FBActionListItem;

struct FBActionableCellComponentConfiguration {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    unsigned int _field5;
    unsigned int _field6;
    id _field7;
    id _field8;
    id _field9;
};

struct FBActionableCellComponentLayoutConfiguration {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct FBAdInterfacesActionButtonConfiguration {
    id _field1;
    unsigned int _field2;
    SEL _field3;
    char _field4;
    float _field5;
};

struct FBAdInterfacesActiveCampaignStatData;

struct FBAdInterfacesInsightsBarSectionConfiguration;

struct FBAdInterfacesInsightsComponentConfiguration {
    vector_3f6a2b61 _field1;
    vector_0461997d _field2;
};

struct FBAdInterfacesInsightsDescriptionSectionConfiguration;

struct FBAdInterfacesScheduleSuggestion;

struct FBAnalyticsModuleStack {
    struct vector<FBAnalyticsModuleStackItem, std::__1::allocator<FBAnalyticsModuleStackItem>> items;
};

struct FBAnalyticsModuleStackItem;

struct FBAnimationPerformanceTrackerConfig {
    int smallDropEventFrameNumber;
    int largeDropEventFrameNumber;
    int maxFrameDropAccount;
    char reportStackTraces;
};

struct FBAnnouncingNetworkImageComponentOptions {
    id _field1;
    id _field2;
    SEL _field3;
};

struct FBAppActionTriggerOptions {
    unsigned int _field1;
    unsigned int _field2;
};

struct FBAppInviteCellComponentActions {
    SEL chevronMenuAction;
    SEL deleteInviteAction;
    SEL blockSenderAction;
    SEL blockAppAction;
    SEL reportAction;
    SEL senderAction;
    SEL senderMessageAction;
    SEL previewImageAction;
    SEL installAction;
    SEL visibilityChangedAction;
};

struct FBAppInviteChevronMenuComponentActions {
    SEL menuAction;
    SEL deleteAction;
    SEL blockSenderAction;
    SEL blockAppAction;
    SEL reportAction;
};

struct FBAppInvitePopoverComponentActions {
    SEL chevronMenuAction;
    SEL deleteInviteAction;
    SEL blockSenderAction;
    SEL blockAppAction;
    SEL reportInviteAction;
    SEL installButtonAction;
    SEL senderAction;
    SEL previewImageAction;
};

struct FBAppInviteSenderContentCellComponentActions {
    SEL senderAction;
    SEL senderMessageAction;
    SEL previewImageAction;
    SEL fullyVisibleAction;
};

struct FBAppInviteSenderContentComponentActions {
    SEL senderAction;
    SEL senderMessageAction;
    SEL previewImageAction;
    SEL visibleInviteChangedAction;
};

struct FBAppTitleBarConfiguration {
    id _field1;
    id _field2;
    unsigned int _field3;
    float _field4;
};

struct FBAttachmentCoverLayoutSpecMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    struct CGSize coverSize;
    float topAndBottomBorderHeight;
    float leftAndRightBorderWidth;
    float barOffset;
    float barDividerHeight;
    float descriptionPadding;
    float coverBorderHeight;
};

struct FBAudioStreamingConfig {
    int sampleRate;
    int bitRate;
    int channels;
};

struct FBAuthenticationAccountListViewMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    float facebookLogoOffsetLandscape;
    float facebookLogoOffsetPortrait;
    float facebookLogoHeight;
    float dblAccountTileInterItemSpacing;
    float dblAccountScrollViewOffset;
    float dblAccountScrollViewOffsetLandscape;
    float dblAccountScrollViewOffsetPortrait;
    float dblAccountScrollViewHeight;
    float dblAccountScrollViewInsetLeft;
    float dblAccountScrollViewInsetLeftLandscape;
    float dblAccountScrollViewInsetLeftPortrait;
    float dblAccountScrollViewInsetTop;
    float activityIndicatorVerticalOffset;
    float buttonFontSize;
    float buttonHeight;
    float buttonsBottomOffset;
    float footerViewInset;
};

struct FBAuthenticationAccountTileViewMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    float imageSize;
    float imageCornerRadius;
    float imageInnerHighlightHeight;
    float imageInnerHighlightTopInset;
    float imageInnerHighlightLeftRightInset;
    float shadowRadius;
    struct CGSize shadowOffset;
    float shadowOpacity;
    float highlightAlpha;
    float labelHeight;
    unsigned int labelStyle;
    unsigned int labelFontWeight;
};

struct FBAuthenticationEnterPasscodeKeyboardMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    float keypadHeight;
    float keypadHorizontalSeparator;
    float underlineHeight;
    float minimumFontScale;
    float deleteButtonOffset;
    NSString *keyFontName;
    float keyFontSize;
};

struct FBAuthenticationEnterPasscodeMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    float contentSidePadding;
    float contentTopOffset;
    float contentLoginSettingsTopOffset;
    float maximumInstructionsHeight;
    float instructionsLineHeight;
    float fontSize;
    float pinInputOffset;
    float pinInputHeight;
    float pinInputPaddingBetweenFields;
    float secondaryActionSeparatorOffset;
    float secondaryActionSeparatorHeight;
    float secondaryActionButtonHeight;
    float warningAnimationDuration;
    float warningVisibilityTime;
};

struct FBAuthenticationEnterPasswordMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    float backButtonTopPadding;
    float backButtonSideLength;
    float contentSidePadding;
    float contentMaximumTopOffset;
    struct CGSize imageSize;
    float imageBorderSize;
    float imageCornerRadius;
    float instructionsFontSize;
    float instructionsOffset;
    float fieldsHeight;
    float buttonOffset;
    float secondaryButtonOffset;
    float secondaryButtonInset;
    float buttonHeight;
    float buttonSeparator;
    float activityIndicatorLeftOffset;
};

struct FBAuthenticationHeaderMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    float headerTopAndButtonPadding;
};

struct FBAuthenticationLoginEnterPasscodeMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    float contentPadding;
    float contentTopOffset;
    struct CGSize imageSize;
    float imageBorderSize;
    float imageCornerRadius;
    float instructionsOffset;
    float instructionsHeight;
    float instructionsFontSize;
    float pinIndicatorOffset;
    struct CGSize pinIndicatorSize;
    float pinIndicatorSeparator;
};

struct FBAuthenticationLoginSSODBLWarningMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    float backButtonTopPadding;
    float backButtonSideLength;
    float contentSidePadding;
    float contentTopOffset;
    struct CGSize imageSize;
    float imageBorderSize;
    float imageCornerRadius;
    float instructionsFontSize;
    float instructionsOffset;
    float buttonHeight;
    float buttonSeparator;
    float buttonBottomPadding;
    float activityIndicatorLeftOffset;
};

struct FBAutoFillButtonBarComponentButton;

struct FBBackgroundFetchMinimumInterval {
    double _field1;
    double _field2;
};

struct FBBorderMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    struct FBLineMetrics top;
    struct FBLineMetrics left;
    struct FBLineMetrics bottom;
    struct FBLineMetrics right;
};

struct FBBroadcastStateCounts {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct FBCTAButtonConfig {
    char _field1;
    double _field2;
};

struct FBCollageItemOrigin {
    unsigned int x;
    unsigned int y;
};

struct FBCollageItemRect {
    struct FBCollageItemOrigin origin;
    struct FBCollageItemSize size;
};

struct FBCollageItemSize {
    unsigned int width;
    unsigned int height;
};

struct FBCollageLayoutComponentChild;

struct FBColorMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    union {
        unsigned char red;
        unsigned char r;
    } ;
    union {
        unsigned char green;
        unsigned char g;
    } ;
    union {
        unsigned char blue;
        unsigned char b;
    } ;
    union {
        float alpha;
        float a;
    } ;
};

struct FBComponentCollectionViewDataSourceCellConfig {
    id _field1;
    id _field2;
};

struct FBComponentTableViewDataSourceAnimationContext {
    int _field1;
    int _field2;
};

struct FBComponentTableViewDataSourceCellConfig {
    id _field1;
    int _field2;
    id _field3;
    char _field4;
    char _field5;
    float _field6;
    struct UIEdgeInsets _field7;
    struct UIEdgeInsets _field8;
    char _field9;
};

struct FBComposerAudienceTagExpansionUIState {
    int _field1;
    char _field2;
    char _field3;
    char _field4;
    int _field5;
};

struct FBComposerPostCompositionItemComponentStyle {
    char _field1;
};

struct FBComposerViewDelegateFlags {
    unsigned int delegateDidTouchPlaceLabel:1;
    unsigned int delegateDidChangeLowerView:1;
    unsigned int delegateLinkViewTapped:1;
    unsigned int delegateDidTapMagicStoryAttachement:1;
};

struct FBConsistencyConfig {
    struct unordered_map<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>, FB::HashFunctor<NSObject *>, FB::EqualFunctor<NSObject *>, std::__1::allocator<std::__1::pair<NSString *const, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>>> _field1;
};

struct FBConsistentFieldDescription {
    id _field1;
    id _field2;
    SEL _field3[5];
    int _field4;
    char *_field5[5];
    int _field6;
    char _field7;
    char _field8;
    char _field9;
    unsigned char _field10;
};

struct FBCoverImageComponentOptions {
    id _field1;
    id _field2;
    SEL _field3;
};

struct FBCoverImageMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    struct CGSize expectedAttachmentSize;
    struct CGSize halfCoverImageSize;
    struct CGSize videoCoverImageSize;
    struct CGSize fullCoverImageSize;
    struct CGSize minimumDisplayableImageSize;
    struct CGSize minimumFullCoverDisplayableImageSize;
};

struct FBCustomizedStoryAttachmentsComponentStyle {
    struct UIEdgeInsets _field1;
};

struct FBCustomizedStoryContentComponentStyle {
    struct UIEdgeInsets _field1;
};

struct FBCustomizedStoryFooterComponentStyle {
    struct UIEdgeInsets _field1;
};

struct FBDBLEnterPasswordMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    float contentSidePadding;
    float contentMinimumTopOffset;
    float contentMaximumTopOffset;
    float instructionsFontSize;
    float instructionsOffset;
    float fieldsHeight;
    float buttonOffset;
    float secondaryButtonOffset;
    float secondaryButtonInset;
    float buttonHeight;
    float buttonSeparator;
    float activityIndicatorLeftOffset;
};

struct FBDBLPreviewViewMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    UIColor *previewDeviceColor;
    float previewRatioDeviceWidthToHeight;
    float previewRatioDeviceHeightToWidth;
    float previewRatioDeviceBorderWidth;
    float previewRatioDeviceCornerRadius;
    float previewRatioDeviceHeightToDisplayHeight;
    float previewRatioDeviceWidthToDisplayWidth;
    float previewRatioLogoCenterOffset;
    float previewRatioLogoWidth;
    float previewRatioProfile;
    float previewProfileCornerRadius;
    float ratioHomebuttonSize;
};

struct FBDBLSettingsMainHeaderMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    float imageTopOffset;
    struct CGSize imageSize;
    float nameTopPadding;
    float nameHeight;
    float imageCornerRadius;
    unsigned int nameLabelStyle;
    unsigned int nameLabelFontWeight;
};

struct FBDBLSettingsMainMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    float rowHeight;
    float headerViewHeight;
    float textLabelFontSize;
    float sectionHeaderFooterHeight;
    float removeAccountRowHeight;
};

struct FBDBLSettingsSSOAccountMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    struct CGSize imageSize;
    float imageBorderSize;
    float imageCornerRadius;
    float instructionsTitleFontSize;
    float instructionsFontSize;
    float instructionsOffset;
    float instructionsTopPadding;
    float instructionsButtonPadding;
    float instructionsSeparator;
    float imageTopOffset;
    float nameTopPadding;
    float nameHeight;
    float contentSidePadding;
    float lineWrapIndent;
    float instructionsTitleLineHeight;
    float instructionsLineHeight;
    float borderLength;
};

struct FBDBLUserListMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    float nameFontSize;
    float textThumbnailOffset;
};

struct FBDeviceBatteryInfo {
    int state;
    float level;
};

struct FBDotConfiguration {
    id _field1;
    float _field2;
    float _field3;
    id _field4;
};

struct FBDotsConfiguration {
    unsigned int _field1;
    unsigned int _field2;
    id _field3;
    id _field4;
    id _field5;
    float _field6;
    float _field7;
    id _field8;
    float _field9;
};

struct FBDoubleLinkedList {
    struct FBDoubleLinkedList *flink;
    struct FBDoubleLinkedList *blink;
};

struct FBEditActionLayoutParams {
    float _field1;
    float _field2;
    float _field3;
    int _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
};

struct FBEntityCardLayoutParams {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    float _field21;
    float _field22;
    float _field23;
    float _field24;
    float _field25;
    float _field26;
    float _field27;
    float _field28;
    float _field29;
    float _field30;
    float _field31;
    float _field32;
    float _field33;
    float _field34;
    float _field35;
    float _field36;
    float _field37;
    float _field38;
    float _field39;
    float _field40;
    float _field41;
    float _field42;
    float _field43;
    float _field44;
    float _field45;
    float _field46;
    float _field47;
    float _field48;
    float _field49;
    float _field50;
    float _field51;
    float _field52;
    float _field53;
    float _field54;
    float _field55;
    float _field56;
    float _field57;
    unsigned int _field58;
    unsigned int _field59;
    unsigned int _field60;
    unsigned int _field61;
    float _field62;
    float _field63;
    float _field64;
    float _field65;
};

struct FBEntityHeaderComponentOptions {
    int _field1;
    id _field2;
    id _field3;
    SEL _field4;
};

struct FBEntityHeaderImageComponentOptions {
    char _field1;
};

struct FBEntityHeaderProfileImageComponentOptions {
    char _field1;
    char _field2;
};

struct FBEntityHeaderSubtitleIconComponentOptions {
    char _field1;
};

struct FBEntityHeaderTitleSubtitleComponentOptions {
    int _field1;
    char _field2;
    id _field3;
    SEL _field4;
};

struct FBEntityHeaderWithTitleSubtitleComponentOptions {
    int _field1;
    id _field2;
    id _field3;
    SEL _field4;
};

struct FBErrorMetadataConfig {
    char *preamble;
    unsigned int preambleLen;
    char *errorParams;
    unsigned int errorParamsLen;
    char *userAgent;
    unsigned int userAgentLen;
};

struct FBFLVFrame {
    vector_a3426c4e _field1;
    CDStruct_1b6d18a9 _field2;
    CDStruct_1b6d18a9 _field3;
    int _field4;
};

struct FBFXConfettiEffectFragment {
    tvec3_440bf033 _field1;
    tvec3_440bf033 _field2;
    struct tquat<float> _field3;
    tvec3_440bf033 _field4;
    float _field5;
    float _field6;
};

struct FBFXConfettiEffectUpdate {
    tvec3_440bf033 _field1;
    tvec3_440bf033 _field2;
    float _field3;
    float _field4;
};

struct FBFXGeometryEffectShader {
    unsigned int program;
    CDStruct_f1931e0c uniform;
};

struct FBFXGeometryEffectVertex {
    struct tvec4<float> _field1;
    tvec3_440bf033 _field2;
    tvec3_440bf033 _field3;
    struct tvec2<float> _field4;
};

struct FBFXPixellateEffectShader {
    unsigned int program;
    CDStruct_4d491bc7 uniform;
};

struct FBFallbackAttachmentComponentText {
    id _field1;
    id _field2;
    id _field3;
};

struct FBFeedAccessibilityComponentAction;

struct FBFeedAttachmentCoverImageComponentOptions {
    unsigned int _field1;
};

struct FBFeedAwesomizerProfileListCardProfileButtonUIComponentSelectionStyle {
    char useCircle;
    UIImage *badgeIcon;
};

struct FBFeedBannerFlags {
    unsigned int viewDidAppear:1;
};

struct FBFeedExplanationContentComponentStyle {
    unsigned int _field1;
    unsigned int _field2;
};

struct FBFeedFacepileComponentStyle {
    unsigned int _field1;
    unsigned int _field2;
    float _field3;
    struct CGSize _field4;
    id _field5;
    id _field6;
};

struct FBFeedGutteredComponentAttributes {
    CDUnknownBlockType _field1;
    id _field2;
    id _field3;
};

struct FBFeedHScrollComponentOffScreenAutoScrollConfig {
    char shouldOffScreenAutoScroll;
    double delayBeforeAutoScroll;
    NSString *hscrollOffsetKey;
};

struct FBFeedHScrollComponentScrollToPreviewConfig {
    char shouldScrollToPreview;
    double delayBeforeScrollToPreview;
    double delayBeforeScrollBackFromPreview;
    double scrollToPreviewPeriod;
    NSString *scrollToPreviewKey;
};

struct FBFeedHScrollOptions {
    int _field1;
    SEL _field2;
    SEL _field3;
    SEL _field4;
    struct FBFeedHScrollComponentOffScreenAutoScrollConfig _field5;
    SEL _field6;
    struct FBFeedHScrollComponentScrollToPreviewConfig _field7;
    unsigned int _field8;
};

struct FBFeedHScrollPaginatorDotConfiguration {
    id _field1;
    id _field2;
    float _field3;
    float _field4;
    id _field5;
    unsigned int _field6;
};

struct FBFeedHScrollPaginatorDotsConfiguration {
    unsigned int totalDots;
    UIColor *deselectedColor;
    UIColor *selectedColor;
    UIColor *borderColor;
    float borderWidth;
    float dotsSize;
    UIColor *backgroundColor;
    float dotSpacing;
};

struct FBFeedHeaderAccessibilityOverrides {
    CDUnknownBlockType _field1;
    CDUnknownBlockType _field2;
};

struct FBFeedHeaderComponentStyle {
    unsigned int _field1;
    unsigned int _field2;
    id _field3;
};

struct FBFeedHeaderSubtitle {
    id _field1;
    id _field2;
};

struct FBFeedHeaderTitleComponentStyle {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    id _field4;
};

struct FBFeedHscrollPaginatorConfiguration {
    unsigned int numDotsPerPage;
    unsigned int numTotalStories;
    char useFixedDotsPerPage;
    UIColor *deselectedColor;
    UIColor *selectedColor;
    UIColor *borderColor;
    float borderWidth;
    float dotsSize;
    float dotSpacing;
    float arrowSpacing;
    char isPaginatorOnTop;
    struct UIEdgeInsets paginatorMargins;
    struct UIEdgeInsets paginatorPaddings;
    unsigned int backgroundStyle;
    SEL didTapPaginatorAction;
    SEL didHorizontallySwipePaginatorAction;
};

struct FBFeedInfiniteHScrollComponentConnectionConfig {
    CDUnknownBlockType _field1;
    CDUnknownBlockType _field2;
    CDUnknownBlockType _field3;
    struct FBGraphQLFieldSet *_field4;
    id _field5;
    id _field6;
    CDUnknownBlockType _field7;
    CDUnknownBlockType _field8;
    CDUnknownBlockType _field9;
    unsigned int _field10;
    char _field11;
};

struct FBFeedInfiniteHScrollEdge;

struct FBFeedInfiniteHScrollOptions {
    int _field1;
    SEL _field2;
    SEL _field3;
    id _field4;
    id _field5;
    struct FBFeedHScrollComponentOffScreenAutoScrollConfig _field6;
    SEL _field7;
    struct FBFeedHScrollComponentScrollToPreviewConfig _field8;
    unsigned int _field9;
};

struct FBFeedNegativeFeedbackButtonItem {
    id _field1;
    SEL _field2;
    char _field3;
};

struct FBFeedPYMKHScrollComponentConnectionConfig {
    CDUnknownBlockType _field1;
    id _field2;
    id _field3;
};

struct FBFeedPageViewHorizontalPadding {
    float left;
    float right;
};

struct FBFeedPageViewPageLayout {
    float _field1;
    float _field2;
    float _field3;
};

struct FBFeedStoryAttachedContentComponentStyle {
    id _field1;
    unsigned int _field2;
    struct UIEdgeInsets _field3;
    id _field4;
    unsigned int _field5;
};

struct FBFeedStoryContentComponentStyle {
    unsigned int _field1;
    struct UIEdgeInsets _field2;
    struct UIEdgeInsets _field3;
    id _field4;
    struct FBFeedStoryMessageComponentStyle _field5;
    id _field6;
    SEL _field7;
    SEL _field8;
    SEL _field9;
    id _field10;
    id _field11;
    id _field12;
};

struct FBFeedStoryExplanationComponentStyle {
    id _field1;
    id _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct FBFeedStoryHeaderComponentStyle {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    id _field6;
    struct UIEdgeInsets _field7;
    id _field8;
};

struct FBFeedStoryMessageComponentStyle {
    struct FBFeedStoryMessageLineLimits _field1;
    unsigned int _field2;
    char _field3;
};

struct FBFeedStoryMessageLineLimits {
    unsigned int _field1;
    unsigned int _field2;
};

struct FBFeedStoryPreviewComponentStyle {
    id _field1;
    unsigned int _field2;
};

struct FBFeedStoryUFIStyle {
    unsigned int _field1;
    id _field2;
    struct UIEdgeInsets _field3;
    id _field4;
};

struct FBFeedTextAndButtonComponentButtonAttributes {
    unordered_map_f26381cc _field1;
    char _field2;
    char _field3;
    SEL _field4;
    id _field5;
    id _field6;
};

struct FBFeedVideoPlayerLayoutConfig {
    float _field1;
    float _field2;
};

struct FBFlattenedArrayControllerChange;

struct FBFollowSheetFeedAwesomizerPromotionComponentConfiguration {
    int cardIdentifier;
    NSString *message;
    NSString *buttonText;
};

struct FBFourPartBorderLayoutChildren {
    CKComponent *top;
    CKComponent *left;
    CKComponent *bottom;
    CKComponent *right;
};

struct FBFramedImageViewConstraint {
    float borderWidth;
    struct CGSize borderImageSize;
};

struct FBFriendingNonPersonCellConfiguration {
    int foldedCountInSeeMore;
    SEL cellAction;
    UIImage *headerImage;
    NSString *headerTitle;
    char headerHasTopSeparator;
    char shouldShowTextInstruction;
};

struct FBGraphQLFetchRequestManager {
    struct unordered_map<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>, FB::HashFunctor<RequestMapKey>, FB::EqualFunctor<RequestMapKey>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>>> _requestsInFlight;
};

struct FBGraphQLField {
    char *_field1;
    char *_field2;
    char *_field3;
    struct FBGraphQLFieldSet *_field4;
    char *_field5;
};

struct FBGraphQLFieldSet {
    int _field1;
    struct FBGraphQLField _field2[0];
};

struct FBGraphQLInputField {
    id _field1;
    char *_field2;
    char _field3;
    char _field4;
};

struct FBGraphSearchCollapisbleListComponentStyle {
    unsigned int maxNumberOfRows;
    NSString *customSeeMoreText;
    NSString *customSeeAllText;
    char fadeInLastRowBeforeSeeMore;
    char fadeInLastRowBeforeSeeAll;
    char callToAction;
    char showChevron;
    char hideBottomSeparator;
};

struct FBGraphSearchLiveFeedStoryComponentStyle {
    char _field1;
    id _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct FBGraphSearchResultsBigFadingOutPhotoPandoraComponentStyle {
    char _field1;
    char _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct FBGraphSearchResultsPhotoGridComponentStyle {
    int _field1;
    char _field2;
    char _field3;
};

struct FBGraphSearchResultsPhotoHScrollComponentStyle {
    int _field1;
    struct FBGraphSearchResultsPhotoModuleComponentStyle _field2;
};

struct FBGraphSearchResultsPhotoModuleComponentStyle {
    int _field1;
    int _field2;
};

struct FBGridViewItemSpans {
    unsigned int colSpan;
    unsigned int rowSpan;
};

struct FBGroupCommerceCompactViewPostTapData {
    NSString *referrer;
    NSString *groupID;
};

struct FBGroupSellProductIslandConfiguration {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    struct UIEdgeInsets _field5;
};

struct FBGroupSellProductItemSummaryStyle {
    unsigned int _field1;
};

struct FBHScrollComponentAlpha {
    float alpha;
};

struct FBHScrollComponentChild;

struct FBHScrollComponentStyle {
    float spacing;
    unsigned int alignItems;
    struct FBHScrollComponentAlpha alpha;
    struct CKRelativeDimension width;
    unsigned int clippingStyle;
    unsigned int decelerationRate;
    Class targetComponentClass;
    char hscrollResizingEnabled;
    id currentChildScopeFrameID;
};

struct FBHScrollOptions {
    Class expandToTargetClass;
    float hExpansionLeftAndRightInset;
    int nearingEndOffset;
    SEL endDraggingScrollViewAction;
    FBHScrollOffsetStore *hscrollOffsetStore;
    NSString *accessibilityIdentifier;
    unsigned int delaysContentTouchesOption;
    char disableBounce;
    SEL didScrollAction;
    SEL nearingEndAction;
    SEL scrollToComponentAction;
    unsigned int touchThroughOption;
};

struct FBHighlightingImageButtonComponentOptions {
    struct UIEdgeInsets _field1;
};

struct FBHorizontalLineItem;

struct FBImageContentListItemOptions {
    id _field1;
    char _field2;
};

struct FBImpressionContentOffsetTrigger {
    float minimumContentOffset;
    float maximumContentOffset;
};

struct FBIntermediatePositionDescriptor {
    NSString *directive;
    NSString *argument;
    NSString *offset;
};

struct FBJewelBarConfiguration {
    char shouldShowFriendRequestJewel;
    char shouldShowMessengerJewel;
    char shouldShowNotificationJewel;
    char shouldUseMessengerIcon;
    NSString *friendRequestNormalImageName;
    NSString *friendRequestActiveImageName;
    struct CGPoint friendRequestBadgeCountOffset;
    NSString *messengerNormalImageName;
    NSString *messengerActiveImageName;
    struct CGPoint messengerBadgeCountOffset;
    NSString *notificationNormalImageName;
    NSString *notificationActiveImageName;
    struct CGPoint notificationBadgeCountOffset;
    NSString *guideNormalImageName;
    NSString *guideActiveImageName;
    struct CGPoint guideBadgeCountOffset;
};

struct FBLayout {
    struct CGSize size;
    struct UIEdgeInsets margins;
};

struct FBLigerHTTPCallbacks;

struct FBLineMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    unsigned int alignment;
    struct FBColorMetrics color;
    float thickness;
    float spanPercentage;
};

struct FBLinkCoverDescriptionConstraintDescriptor {
    int constraint;
    struct FBIntermediatePositionDescriptor intermediate;
};

struct FBLinkCoverPositionDescriptor {
    int horizontalPosition;
    float horizontalOffset;
    int horizontalGridUnit;
    NSString *horizontalDependsOnID;
    int verticalPosition;
    float verticalOffset;
    int verticalGridUnit;
    NSString *verticalDependsOnID;
    char horizontallyConstrained;
    struct FBLinkCoverDescriptionConstraintDescriptor horizontalConstraint;
    char verticallyConstrained;
    struct FBLinkCoverDescriptionConstraintDescriptor verticalConstraint;
};

struct FBMPCDecodingObjectContext;

struct FBMPCEncodingObjectContext {
    struct vector<FBMPCEncodingObjectContext::EncodedObjectRecord, std::__1::allocator<FBMPCEncodingObjectContext::EncodedObjectRecord>> _encodedObjects;
};

struct FBMUploadBandwidthMeasurement {
    double _field1;
    unsigned int _field2;
};

struct FBMUploadConnectionQualityMeasurement {
    unsigned int _field1;
    unsigned int _field2;
};

struct FBMapRouteDrawnEndpoints {
    struct CGPoint _field1;
    struct CGPoint _field2;
};

struct FBMediaViewControllerTransitionDismissingContext {
    unsigned int dismissalType;
    FBDisplayableMediaViewProviderContext *mediaViewProviderContext;
    id mediaViewOrLayer;
    unsigned int slideAwayType;
    id transitionContext;
    struct CGPoint velocity;
};

struct FBMemModelPropertyHandle {
    unsigned int _field1;
};

struct FBMemModelVisitor {
    CDUnknownFunctionPointerType *_field1;
};

struct FBNSStringCache {
    struct FBNSStringCacheItem *items;
    unsigned int prng_lfsr;
    unsigned char age[1024];
};

struct FBNSStringCacheItem;

struct FBNativeArticleAttachmentCoverLayoutSpecMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    struct CGSize coverSize;
    float topAndBottomBorderHeight;
    float leftAndRightBorderWidth;
    float barOffset;
    float barDividerHeight;
    float descriptionPadding;
    float coverBorderHeight;
};

struct FBNotificationsDataSourceLastLoadResult {
    char _field1;
    unsigned int _field2;
};

struct FBNotificationsListenerEvents {
    NSString *jewelCountChanged;
    NSString *shouldShowBeeper;
    NSString *notificationTapped;
    NSString *streamUpdated;
    NSString *viewDidAppear;
    NSString *viewDidDisappear;
};

struct FBOrderedDictionaryDynamicKeyComparator {
    CDUnknownBlockType _f;
};

struct FBPJPEGEncodingInfo {
    short _version;
    int _fileSize;
    NSArray *_scanOffsets;
};

struct FBPhotoTaggingViewOptions {
    char _field1;
    char _field2;
    char _field3;
    char _field4;
    char _field5;
    char _field6;
    int _field7;
    int _field8;
};

struct FBPrivacyCheckupModalNoticeComponentActions {
    struct FBPrivacyCheckupModalNoticeComponentButton _field1;
    struct FBPrivacyCheckupModalNoticeComponentButton _field2;
    struct FBPrivacyCheckupModalNoticeComponentButton _field3;
};

struct FBPrivacyCheckupModalNoticeComponentButton {
    id _field1;
    SEL _field2;
};

struct FBPrivacyCheckupToolboxActions {
    SEL changePrivacyAction;
    SEL deleteAppAction;
    SEL deleteAppAndPostsAction;
};

struct FBProfileScrollingBehavior {
    char shouldScrollToTopStory;
    char shouldScrollToOutbox;
    char isStoyRemovedFromOutbox;
    char shouldDisableScrollPositionRestoring;
};

struct FBProfileYoloFactoidComponentStyle {
    struct CGSize _field1;
    float _field2;
    id _field3;
};

struct FBProgressiveJPEGErrorManager {
    struct jpeg_error_mgr pub;
    int setjmp_buffer[28];
};

struct FBQualityEstimate {
    double _field1;
    char _field2;
};

struct FBQuickButtonComponentAccessibilityConfiguration {
    id _field1;
    id _field2;
};

struct FBQuickButtonComponentOptions {
    struct UIEdgeInsets _field1;
};

struct FBQuickButtonStateConfiguration {
    NSString *title;
    UIColor *titleColor;
    UIImage *image;
    UIImage *backgroundImage;
};

struct FBQuickPromotionLargeImageButtonConfig {
    id _field1;
    id _field2;
};

struct FBQuickPromotionLargeImageComponentConfiguration {
    id _field1;
    SEL _field2;
    id _field3;
    id _field4;
    id _field5;
    struct UIEdgeInsets _field6;
    char _field7;
};

struct FBRangeAttributes;

struct FBReuseIdentifierCellClassPair {
    id _field1;
    Class _field2;
};

struct FBRichTextComponentAccessibilityContext {
    id _field1;
    id _field2;
    id _field3;
    struct CKComponentAccessibilityTextAttribute _field4;
};

struct FBRichTextComponentStyle {
    UIFont *font;
    UIColor *color;
    FBImageDownloader *imageDownloader;
    struct CGSize textShadowOffset;
    unsigned int maximumNumberOfLines;
    unsigned int truncationMode;
    NSAttributedString *truncationAttributedString;
    int horizontalAlignmentMode;
    NSArray *menuItems;
};

struct FBRichTextImageAttachmentInsets {
    float top;
    float left;
    float bottom;
    float right;
};

struct FBRichTextWithEntitiesStyle {
    id _field1;
    id _field2;
    struct CGSize _field3;
    unsigned int _field4;
    unsigned int _field5;
    id _field6;
    int _field7;
    id _field8;
};

struct FBRichTextWithEntityTruncationComponentStyle {
    id _field1;
    id _field2;
};

struct FBRocketSpeedLogger;

struct FBScrollViewInteractionState {
    char _field1;
    char _field2;
    char _field3;
    char _field4;
};

struct FBScrollViewState {
    struct CGRect _field1;
    struct CGPoint _field2;
    struct CGSize _field3;
    struct UIEdgeInsets _field4;
    float _field5;
    float _field6;
    struct FBScrollViewInteractionState _field7;
};

struct FBSearchPhotoPivotComponentStyle {
    char _field1;
    char _field2;
};

struct FBSearchResultsCoverPhotoGradientComponentStyle {
    unsigned int _field1;
};

struct FBSearchResultsListItemComponentStyle {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    char _field5;
    char _field6;
};

struct FBSearchResultsModuleFooterComponentStyle {
    unsigned int _field1;
    char _field2;
    char _field3;
};

struct FBShadowMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    struct CGSize offset;
    float blur;
    struct FBColorMetrics color;
};

struct FBShareAttachmentTextComponentTextAttributes {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct FBStoryPromotionFooterInsightsDescriptionSectionConfiguration;

struct FBStreamingFlagsManager {
    struct unordered_map<NSString *, unsigned int, FB::HashFunctor<NSObject *>, FB::EqualFunctor<NSObject *>, std::__1::allocator<std::__1::pair<NSString *const, unsigned int>>> _maxImageFlagPerUrlKey;
    struct Mutex _lock;
};

struct FBTabBarOptions {
    char _field1;
    char _field2;
    char _field3;
    id _field4;
};

struct FBTagViewMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    float tagVerticalOffset;
    float tagHorizontalOffset;
    float tagMaximumVerticalDownRatio;
    float tagMaximumHorizontalDownRatio;
    float tagRectOuterMargin;
    float tagFrameWidthPadding;
    float tagBorderPadding;
    float tagFrameTextBoxVerticalPadding;
    float removeButtonWidth;
    float tagRoundedCornerRadius;
    float tagArrowHeight;
    float tagHalfArrowWidth;
    float tagStrokeLineWidth;
    float tagOverlapThreshold;
    float tagOutOfScreenSizeThreshold;
    float leftPaddingForRemoveImage;
    float rightPaddingForRemoveImage;
    struct CGSize textShadowOffsetSize;
    unsigned int textFontSize;
    UIColor *textColor;
    UIImage *removeImage;
    int removeImageContentMode;
    UIColor *strokeColor;
    struct FBShadowMetrics shadowMetrics;
    UIColor *fillColor;
    char shouldShowTagShadow;
    char shouldFillBackgroundForRemoveImage;
    char shouldBounceWhenTapped;
    char shouldStrokePath;
};

struct FBTextFieldViewConfiguration {
    UIColor *backgroundColor;
    int borderStyle;
    UIFont *font;
    int keyboardType;
    NSString *placeholder;
    NSString *text;
    UIColor *textColor;
    int returnKeyType;
};

struct FBTextMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    NSString *fontName;
    float size;
    float lineHeight;
    float wordKerning;
    struct FBColorMetrics color;
    struct FBShadowMetrics shadow;
    unsigned int capitalizationStyle;
    unsigned int underlineStyle;
    struct FBColorMetrics backgroundColor;
};

struct FBThrowbackFeedStoryUFIBarComponentStyle {
    char _field1;
    id _field2;
    struct UIEdgeInsets _field3;
};

struct FBThrowbackScatteredPhotosComponentChild;

struct FBThrowbackScatteredPhotosComponentConfiguration {
    unsigned int entryAnimation;
    char noTreeAppearanceCallbacks;
    struct _NSRange imageSizeRange;
    float contentYOffset;
    float contentPadding;
};

struct FBTimelineHeaderViewCellLayout {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    float _field21;
    float _field22;
    float _field23;
};

struct FBTraceEvent {
    int _field1;
    struct __CFString *_field2;
    struct __CFDictionary *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    struct FBDoubleLinkedList _field6;
    struct FBDoubleLinkedList _field7;
    struct FBDoubleLinkedList _field8;
    void *_field9;
    struct __CFString *_field10;
};

struct FBTrackedVideoContainer;

struct FBUFIActivityComponentStyle {
    struct UIEdgeInsets _field1;
};

struct FBUFIButtonRowItem {
    id _field1;
    SEL _field2;
    SEL _field3;
    char _field4;
    id _field5;
    id _field6;
    id _field7;
    id _field8;
    id _field9;
};

struct FBUFIButtonsStyle {
    struct UIEdgeInsets _field1;
    unsigned int _field2;
    unsigned int _field3;
    id _field4;
    SEL _field5;
    SEL _field6;
};

struct FBUFICommentBodyComponenStyle {
    char _field1;
    float _field2;
    unsigned int _field3;
    id _field4;
    id _field5;
    id _field6;
};

struct FBUFIComponentStyle {
    unsigned int _field1;
    vector_0c920a62 _field2;
    unsigned int _field3;
    struct UIEdgeInsets _field4;
    SEL _field5;
    id _field6;
    SEL _field7;
    SEL _field8;
};

struct FBUFIFeedbackSummaryContainerComponentStyle {
    unsigned int _field1;
    vector_0c920a62 _field2;
    unsigned int _field3;
    struct UIEdgeInsets _field4;
    SEL _field5;
    id _field6;
};

struct FBVideoAssetExportParams {
    AVAssetReader *assetReader;
    AVAssetTrack *audioTrack;
    AVAssetTrack *videoTrack;
    AVAssetReaderOutput *audioOutput;
    AVAssetReaderOutput *videoOutput;
    AVAssetWriterInput *audioInput;
    AVAssetWriterInput *videoInput;
    AVAssetWriter *assetWriter;
    NSURL *outputURL;
};

struct FBVideoBroadcastPipelineHolder {
    FBRtmpSession *rtmpSession;
    FBAACEncoder *audioEncoder;
    id videoEncoder;
    FBAACPacketizer *audioPacketizer;
    FBH264Packetizer *videoPacketizer;
};

struct FBVideoPlayerEventBusConfig {
    id _field1;
    unsigned int _field2;
};

struct FBVideoStreamingConfig {
    int width;
    int height;
    int bitRate;
    int fps;
    int numberOfFramesInOneSegment;
    char useVideoToolboxIfPossible;
};

struct FBWebImageComponentOptions {
    UIImage *defaultImage;
    unsigned int transitionType;
    FBScenePath *scenePath;
    NSString *analyticsModule;
    NSArray *trackingCodes;
    unsigned int loggingSamplingRate;
};

struct FBWebPivotsToolbarViewMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    float toolbarHeight;
    float toolbarShadowHeight;
    float toolbarEdgePadding;
    float toolbarInterButtonSpacing;
    float toolbarButtonWidth;
};

struct FancyString {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field1;
};

struct FieldMetadata {
    char *_field1;
    unsigned int _field2;
    char _field3;
};

struct FilterConfig {
    float vibranceValue;
    float equalizationWeight;
    float minimumFaceBrightness;
    float minSlope;
    float maxSlope;
    float bilateralDetailScale;
    float denoising;
    float bilateralDefaultDetailScale;
    float bilateralMaxDetailScale;
    float bilateralLumSigma;
    float bilateralSpaceSigmaFactor;
    _Bool useBilateralGridApproximation;
    float noiseMaskScale;
    int noiseMaskRadius;
    float kneeDenoising;
    float maxDenoising;
};

struct FilteredImage;

struct FlowLayoutDelegateRespondsTo {
    char sizeForItemAtIndexPath;
    char insetForSectionAtIndex;
    char minimumLineSpacingForSectionAtIndex;
    char minimumInteritemSpacingForSectionAtIndex;
    char referenceSizeForHeaderInSection;
    char referenceSizeForFooterInSection;
};

struct GraphQLFieldDescriptionish {
    CDUnknownFunctionPointerType *_field1;
};

struct GraphStore;

struct GutterComponentLayout {
    struct CKComponentLayout _field1;
    float _field2;
};

struct H264SPS;

struct HTTPClientSettings {
    struct EventBase *_field1;
    struct unique_ptr<proxygen::httpclient::RequestHandlerFactory, std::__1::default_delete<proxygen::httpclient::RequestHandlerFactory>> _field2;
    struct HTTPTransactionAdaptorFactory *_field3;
};

struct HTTPHeaders {
    struct fbvector<proxygen::HTTPHeaderCode, std::__1::allocator<proxygen::HTTPHeaderCode>> _field1;
    struct fbvector<const std::__1::basic_string<char>*, std::__1::allocator<const std::__1::basic_string<char>*>> _field2;
    struct fbvector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field3;
    unsigned int _field4;
};

struct HTTPRequest;

struct HTTPResponse {
    unsigned short _field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    struct HTTPHeaders _field3;
};

struct HTTPTransactionAdaptorFactory;

struct IVarArray {
    unsigned int _field1;
    struct unique_ptr<id [], std::__1::default_delete<id []>> _field2;
};

struct Image<facebook::image_processing::RGBA8Pixel> {
    struct shared_ptr<facebook::image_processing::RGBA8Pixel> data_;
    unsigned int widthInPixels;
    unsigned int heightInPixels;
    unsigned int bytesPerPixel;
};

struct ImageMetadata;

struct IndexPath {
    int _field1;
    int _field2;
};

struct ItemChangeset {
    struct Items {
        struct map<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>>> _field1;
        struct map<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>>> _field2;
        struct map<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>>> _field3;
    } _field1;
};

struct ItemUpdateHandler<FBComposerCompositionState *, FBComposerAttachmentsBarItem *>;

struct ItemUpdateHandler<FBComposerCompositionState *, FBComposerPostCompositionItem *>;

struct JKConstBuffer {
    struct JKConstPtrRange _field1;
};

struct JKConstPtrRange {
    char *_field1;
    unsigned int _field2;
};

struct JKEncodeCache {
    id _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct JKEncodeState {
    struct JKManagedBuffer _field1;
    struct JKManagedBuffer _field2;
    unsigned int _field3;
    struct JKFastClassLookup _field4;
    struct JKEncodeCache _field5[1024];
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct JKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct JKHashTableEntry {
    unsigned int _field1;
    id _field2;
    id _field3;
};

struct JKManagedBuffer {
    struct JKPtrRange _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct JKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct JKObjectStack {
    void **_field1;
    void **_field2;
    unsigned int *_field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct JKParseState {
    unsigned int _field1;
    struct JKConstBuffer _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    struct JKParseToken _field9;
    struct JKObjectStack _field10;
    struct JKTokenCache _field11;
    struct JKObjCImpCache _field12;
    id _field13;
    int _field14;
    char _field15;
};

struct JKParseToken {
    struct JKConstPtrRange _field1;
    unsigned int _field2;
    struct JKTokenValue _field3;
    struct JKManagedBuffer _field4;
};

struct JKPtrRange {
    char *_field1;
    unsigned int _field2;
};

struct JKTokenCache {
    struct JKTokenCacheItem *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct JKTokenCacheItem;

struct JKTokenValue {
    struct JKConstPtrRange _field1;
    unsigned int _field2;
    unsigned int _field3;
    union {
        long long _field1;
        unsigned long long _field2;
        double _field3;
    } _field4;
    struct JKTokenCacheItem *_field5;
};

struct MNBubbleViewAttributes {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    char _field6;
};

struct MNCollectionViewLayoutAttributesTransformContext {
    struct CGSize _field1;
    struct CGRect _field2;
    struct UIEdgeInsets _field3;
};

struct MNRichMediaChunkedUploadJobBlueprint {
    long long eachChunkSize;
    long long remainderChunkSize;
    unsigned int totalNumberOfChunks;
    long long maximumNumberFailedBytesAllowed;
    unsigned int maximumNumberFailedChunksAllowed;
};

struct MNRichMediaChunkedUploadStatus {
    unsigned int jobStatus;
    unsigned int chunksInFlight;
    char uploadHasFinishedFailedOrCancelled;
    char uploadWasResumed;
    long long bytesUploaded;
    unsigned int chunksUploaded;
    unsigned int totalChunksFailed;
    long long totalBytesFailed;
};

struct MNRichMediaUploadJobMetadata {
    long long totalNumberOfBytes;
};

struct MNRichMediaUploadJobProgressInformation {
    long long _field1;
    double _field2;
};

struct MNTokenFieldViewMetrics {
    CDUnknownFunctionPointerType *_vptr$FBMetrics;
    _Bool _initialized;
    char showLabel;
    char centerPlaceholder;
    char toolbarBackground;
    char solidBackground;
    char showShadow;
    char removeDividerWhenSearching;
    char roundedCorner;
    struct FBColorMetrics backgroundColor;
    struct FBColorMetrics dividerColor;
    float dividerPadding;
    float leftPaddingAdjust;
    float textLabelFontSize;
    float scrollViewHorizontalPadding;
    float scrollViewVerticalPadding;
    char allowHalfPointSeparator;
};

struct MQTTClient;

struct MQTTClientGlue;

struct MQTTClientSettings;

struct MQTTMessage;

struct ManipulationParams {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    struct CGRect _field5;
};

struct Matrix<double, 3, 3, 1, 3, 3> {
    struct DenseStorage<double, 9, 3, 3, 1> _field1;
};

struct MemModelObjectFieldCache {
    struct vector<void *, std::__1::allocator<void *>> _field1;
};

struct MergingNodeSourceBuilder {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct map<std::__1::pair<unsigned int, facebook::mobile::graphstore::FancyString>, std::__1::shared_ptr<const facebook::mobile::graphstore::Record>, std::__1::less<std::__1::pair<unsigned int, facebook::mobile::graphstore::FancyString>>, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, facebook::mobile::graphstore::FancyString>, std::__1::shared_ptr<const facebook::mobile::graphstore::Record>>>> _field3;
};

struct MessagePackParseState {
    struct FBNSStringCache cache;
};

struct MountContext {
    struct shared_ptr<CK::Component::ViewManager> _field1;
    struct CGPoint _field2;
    struct UIEdgeInsets _field3;
    char _field4;
};

struct MountResult {
    char _field1;
    struct MountContext _field2;
};

struct Mutex {
    struct _opaque_pthread_mutex_t _m;
};

struct NSArray {
    Class _field1;
};

struct NSDictionary {
    Class _field1;
};

struct NSMutableArray {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NSURL {
    Class _field1;
    id _field2;
    id _field3;
    void *_field4;
    void *_field5;
};

struct NodeSource;

struct OpaqueAudioQueue;

struct Optional<FBPJPEGEncodingInfo> {
    union {
        struct FBPJPEGEncodingInfo value_;
    } ;
    _Bool hasValue_;
};

struct OrderedList<unsigned long long>;

struct OrientedDetector;

struct POPAnimatorItem;

struct Persistence;

struct PersistentKeyValueStore;

struct PingPongFilter {
    int pingPong;
    int width;
    int height;
    unsigned int bitmapInfo;
    struct CGColorSpace *colorSpace;
    struct __CVBuffer *cv_pixelBuffers[2];
    struct __CVOpenGLESTextureCache *cv_textureCache;
    struct __CVBuffer *cv_textures[2];
    unsigned int gl_framebuffers[2];
    unsigned int gl_fallback_textures[2];
};

struct Pipe<FB::LoggingContext<FBDependencyManager *>, FB::LoggingContext<FBDependencyManager *>> {
    CDUnknownBlockType _field1;
};

struct PointsClassifier;

struct PositionTexCoordQuad {
    unsigned int buffers[2];
};

struct Promise<AuthenticationCompletedInformation>;

struct Promise<SessionBeganInformation>;

struct Promise<std::__1::pair<FBWebViewResponse *, NSError *>> {
    unsigned int ResolutionState;
    struct pair<FBWebViewResponse *, NSError *> _result;
    struct vector<FB::Functional::Callback<std::__1::pair<FBWebViewResponse *, NSError *>>, std::__1::allocator<FB::Functional::Callback<std::__1::pair<FBWebViewResponse *, NSError *>>>> _resolutionHandlers;
    unsigned int _resolutionState;
    struct mutex _mutex;
};

struct RGBA8Pixel;

struct RTMP {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    unsigned int _field9;
    unsigned int _field10;
    int _field11;
    int _field12;
    int _field13;
    unsigned char _field14;
    unsigned char _field15;
    unsigned char _field16;
    unsigned char _field17;
    int _field18;
    int _field19;
    struct RTMP_METHOD *_field20;
    int _field21;
    int _field22;
    struct RTMPPacket **_field23;
    struct RTMPPacket **_field24;
    int *_field25;
    double _field26;
    double _field27;
    double _field28;
    double _field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    struct AVal _field34;
    struct RTMP_READ _field35;
    struct RTMPPacket _field36;
    struct RTMPSockBuf _field37;
    struct RTMP_LNK _field38;
};

struct RTMPChunk;

struct RTMPPacket {
    unsigned char m_headerType;
    unsigned char m_packetType;
    unsigned char m_hasAbsTimestamp;
    int m_nChannel;
    unsigned int m_nTimeStamp;
    int m_nInfoField2;
    unsigned int m_nBodySize;
    unsigned int m_nBytesRead;
    struct RTMPChunk *m_chunk;
    char *m_body;
};

struct RTMPSockBuf {
    int _field1;
    int _field2;
    char *_field3;
    char _field4[16384];
    int _field5;
    void *_field6;
};

struct RTMP_LNK {
    struct AVal _field1;
    struct AVal _field2;
    struct AVal _field3;
    struct AVal _field4;
    struct AVal _field5;
    struct AVal _field6;
    struct AVal _field7;
    struct AVal _field8;
    struct AVal _field9;
    struct AVal _field10;
    struct AVal _field11;
    struct AVal _field12;
    struct AVal _field13;
    struct AVal _field14;
    struct AVal _field15;
    struct AMFObject _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    unsigned short _field25;
    unsigned short _field26;
    void *_field27;
    void *_field28;
    void *_field29;
    unsigned int _field30;
    unsigned char _field31[32];
    char _field32[42];
};

struct RTMP_METHOD;

struct RTMP_READ {
    char *_field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned char _field5;
    unsigned char _field6;
    char _field7;
    unsigned char _field8;
    unsigned int _field9;
    char *_field10;
    char *_field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
};

struct ReadWriteLock {
    struct _opaque_pthread_rwlock_t {
        long __sig;
        char __opaque[124];
    } _rwlock;
};

struct Reader {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
};

struct Record;

struct RecordAndSnapshot {
    shared_ptr_d8dd3219 _field1;
    shared_ptr_4b749c87 _field2;
    struct MemModelObjectFieldCache _field3;
};

struct RecursiveMutex {
    struct _opaque_pthread_mutex_t _m;
};

struct Ref<zxing::BinaryBitmap> {
    struct BinaryBitmap *_field1;
};

struct Ref<zxing::Result> {
    struct Result *_field1;
};

struct Ref<zxing::ResultPointCallback> {
    struct ResultPointCallback *_field1;
};

struct RepFriendsConnection;

struct RepFriendsEdge;

struct RepPage;

struct RepPerson;

struct RepPhone;

struct RepPhoneNumber;

struct RepPhoto;

struct RepStreetAddress;

struct Repr;

struct RequestHandlerFactory;

struct RequestStats {
    vector_31c84f95 _field1;
};

struct Resizer;

struct Result;

struct ResultPointCallback;

struct SRHistogram {
    unsigned long _field1[256];
    unsigned long _field2[256];
    unsigned long _field3[256];
    unsigned long _field4[256];
    unsigned long *_field5[4];
};

struct SSState<POP::Vector4<double>> {
    struct Vector4<double> _field1;
    struct Vector4<double> _field2;
};

struct SaliencyCalcData {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    unsigned short _field6[4];
    short *_field7;
    short _field8[20];
    int _field9;
};

struct SaturationShader {
    unsigned int program;
    struct {
        unsigned int texture;
        unsigned int saturation;
        unsigned int blendWithColor;
    } uniform;
};

struct Sections {
    struct set<int, std::__1::less<int>, std::__1::allocator<int>> _insertions;
    struct set<int, std::__1::less<int>, std::__1::allocator<int>> _removals;
};

struct SessionBeganInformation {
    id _field1;
    char _field2;
};

struct SimpleIndex {
    struct map<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>>> _field1;
};

struct Snapshot {
    unsigned int gl_target;
    unsigned int gl_texture;
    struct TexCoordExtent texCoordExtent;
    unsigned int bitmapWidth;
    unsigned int bitmapHeight;
    struct __CVOpenGLESTextureCache *cv_textureCache;
    struct __CVBuffer *cv_pixelBuffer;
    struct __CVBuffer *cv_texture;
};

struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
};

struct StageIIDataT;

struct Stats {
    unsigned long long framesSent;
    unsigned long long totalFrames;
    unsigned long long timestamp;
};

struct Store;

struct StoreManager;

struct StoreManagerFactory;

struct SubPageInfo;

struct SubscriptionHandle;

struct TableViewMutations {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
};

struct TagDescriptor;

struct TexCoordExtent {
    float left;
    float right;
    float bottom;
    float top;
};

struct TextureShader {
    unsigned int program;
    CDStruct_f1931e0c uniform;
};

struct TraceEvent;

struct TypeHelper {
    CDUnknownFunctionPointerType *_field1;
};

struct UIEdgeInsets {
    float top;
    float left;
    float bottom;
    float right;
};

struct UIOffset {
    float horizontal;
    float vertical;
};

struct UserSession;

struct Vector4<double> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct ViewManager;

struct ViewReusePoolMap {
    struct unordered_map<CK::Component::ViewKey, CK::Component::ViewReusePool, std::__1::hash<CK::Component::ViewKey>, std::__1::equal_to<CK::Component::ViewKey>, std::__1::allocator<std::__1::pair<const CK::Component::ViewKey, CK::Component::ViewReusePool>>> map;
    struct vector<UIView *, std::__1::allocator<UIView *>> vendedViews;
};

struct ViolatingLayout;

struct Writer {
    AVAssetWriterInput *input;
    AVAssetWriter *writer;
    NSString *filePath;
};

struct ZZCentralFileHeader {
    unsigned int _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned short _field7;
    unsigned short _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned short _field12;
    unsigned short _field13;
    unsigned short _field14;
    unsigned short _field15;
    unsigned short _field16;
    unsigned int _field17;
    unsigned int _field18;
};

struct ZZLocalFileHeader {
    unsigned int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned short _field10;
    unsigned short _field11;
};

struct ZZStandardCryptoEngine {
    int keys[3];
};

struct _ASDisplayNodeExtraIvars {
    unsigned int _minimorphType;
    struct _FBMinimorphFactor _minimorphFactor;
    struct _FBMinimorphInfo _lastKnownInfo;
    struct CGSize _miniConstrainedSize;
    struct CGSize _maxConstrainedSize;
    struct CGSize _miniSize;
    struct CGSize _maxSize;
    struct {
        unsigned int subtreeNeedsMinimorphUpdate:1;
        unsigned int subtreeDisableMinimorph:1;
        unsigned int hasHadMinimorphContentsScaleApplied:1;
        unsigned int miniSizeCalculated:1;
        unsigned int maxSizeCalculated:1;
    } _flags;
};

struct _FBBoxViewLayout {
    struct CGRect _field1;
    struct CGRect _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    struct CGRect _field5;
};

struct _FBCLLocationCollectionConfig {
    double mergeWithTimeAndDistance;
    double staleAge;
    double similarIfWithin;
    unsigned int limitLength;
    unsigned int amountToPurgeIfFull;
};

struct _FBFIGMetricsCount {
    int numberOfFIGViews;
    int numberOfCaspianViews;
    int numberOfOtherViews;
};

struct _FBFXPremultipliedColor {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct _FBFacepileViewLayout {
    struct CGSize _field1;
    unsigned int _field2;
};

struct _FBFloatRange {
    float min;
    float max;
};

struct _FBItemContentViewLayout {
    struct CGRect _field1;
    struct CGRect _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    struct CGRect _field5;
};

struct _FBItemViewLayout {
    struct CGRect _field1;
    struct CGRect _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    struct CGRect _field5;
    struct CGRect _field6;
};

struct _FBMinimorphFactor {
    float minimorphFactor;
    float contentsScaleFactor;
};

struct _FBMinimorphInfo {
    struct _FBFloatRange contentsScaleRange;
    struct _FBFloatRange redrawThresholdRange;
};

struct _FBPickUpVelocity {
    struct CGPoint _field1;
    float _field2;
    float _field3;
};

struct _NSRange {
    unsigned int location;
    unsigned int length;
};

struct _OriginalUnfoldableComponentLayerState {
    struct CGPoint _field1;
    float _field2;
};

struct _PACardsScrollViewMetrics {
    struct CGSize cardSize;
    float widthBetweenCards;
};

struct _PAScalableMetric {
    char *_field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct _PAViewportGeometry {
    float _field1;
    struct UIEdgeInsets _field2;
    struct CGPoint _field3;
};

struct _POPAnimationState {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    int _field3;
    id _field4;
    unsigned int _field5;
    double _field6;
    double _field7;
    double _field8;
    id _field9;
    CDUnknownBlockType _field10;
    CDUnknownBlockType _field11;
    CDUnknownBlockType _field12;
    CDUnknownBlockType _field13;
    id _field14;
    id _field15;
    float _field16;
    int _field17;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct __CFString;

struct __CVBuffer;

struct __CVOpenGLESTextureCache;

struct __hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *>;

struct __hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *>;

struct __hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>;

struct __hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *>;

struct __hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *>;

struct __hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *>;

struct __hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *>;

struct __hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *>;

struct __hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *>;

struct __hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *>;

struct __hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *>;

struct __hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *>;

struct __hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *>;

struct __hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *>;

struct __hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Id>>, void *>;

struct __hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *>;

struct __hash_node<std::__1::__hash_value_type<NSString *, std::__1::vector<FBFeedAccessibilityComponentAction, std::__1::allocator<FBFeedAccessibilityComponentAction>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>;

struct __hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *>;

struct __hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *>;

struct __hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *>;

struct __hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *>;

struct __hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>;

struct __hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *>;

struct __hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>;

struct __hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *>;

struct __hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *>;

struct __hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *>;

struct __hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *>;

struct __hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long, FBVerveFactoryView *>, void *>;

struct __list_node<(anonymous namespace)::FBGLogLogSink *, void *>;

struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>;

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct __tree_node<std::__1::__value_type<id, id>, void *>;

struct _mosquitto_packet {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned short _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    char *_field10;
    struct _mosquitto_packet *_field11;
};

struct _opaque_pthread_mutex_t {
    long __sig;
    char __opaque[40];
};

struct animation;

struct animation_group {
    double begin;
    double speed;
    double duration;
    double time;
    double rendered_time;
    struct vector<(anonymous namespace)::animation, std::__1::allocator<(anonymous namespace)::animation>> animations;
    _Bool ignore_timing;
};

struct array<CKStateConfiguration, 8> {
    struct CKStateConfiguration __elems_[8];
};

struct array<FBQuickButtonStateConfiguration, 8> {
    struct FBQuickButtonStateConfiguration __elems_[8];
};

struct array<float, 256> {
    float __elems_[256];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned int __cap_;
                    unsigned int __size_;
                    char *__data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[11];
                } __s;
                struct __raw {
                    unsigned long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct bitset<256> {
    unsigned long _field1[8];
};

struct card_page;

struct composerAudiencePickerFlags {
    unsigned int delegateSelectedPrivacyOrPersonsDidChange:1;
    unsigned int delegateDidChangeAudienceFieldHeight:1;
};

struct css_node {
    struct {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        int _field5;
        int _field6;
        float _field7;
        float _field8[4];
        float _field9[4];
        float _field10[4];
        float _field11[4];
        float _field12[2];
    } _field1;
    struct {
        float _field1[2];
        float _field2[2];
        _Bool _field3;
        float _field4[2];
        float _field5;
        float _field6[2];
        float _field7[2];
    } _field2;
    int _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    void *_field8;
};

struct currentViewAttributes {
    int state;
    int resultType;
};

struct delegateFlag {
    unsigned int delegateHandleLikeButtonTap:1;
    unsigned int delegateHandleCommentButtonTap:1;
    unsigned int delegateHandleFeedbackSentenceTap:1;
    unsigned int delegateHandleTagButtonTap:1;
    unsigned int delegateHandleMoreButtonTap:1;
    unsigned int delegateHandleInterestingResultTap:1;
    unsigned int delegateHandleDoneButtonTap:1;
    unsigned int delegateHandleCaptionExpansion:1;
    unsigned int delegateHandleInstagramButtonTap:1;
    unsigned int delegateHandleAddLocationButtonTap:1;
    unsigned int delegateHandleShareButtonTap:1;
    unsigned int delegateHandleRemixButtonTap:1;
};

struct delegateOptionalProtocolResponseFlags {
    unsigned int delegateCollectionViewSizeForBackgroundHeaderViewInSection:1;
    unsigned int delegateCollectionViewHeightForRowCellInSection:1;
    unsigned int delegateCollectionViewSpacingBetweenRowsInSection:1;
    unsigned int delegateCollectionViewSectionInsetsForSection:1;
};

struct deque<CKSuspensionControllerChangesetContainer, std::__1::allocator<CKSuspensionControllerChangesetContainer>> {
    struct __split_buffer<CKSuspensionControllerChangesetContainer *, std::__1::allocator<CKSuspensionControllerChangesetContainer *>> {
        struct CKSuspensionControllerChangesetContainer **__first_;
        struct CKSuspensionControllerChangesetContainer **__begin_;
        struct CKSuspensionControllerChangesetContainer **__end_;
        struct __compressed_pair<CKSuspensionControllerChangesetContainer **, std::__1::allocator<CKSuspensionControllerChangesetContainer *>> {
            struct CKSuspensionControllerChangesetContainer **__first_;
        } __end_cap_;
    } __map_;
    unsigned int __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<CKSuspensionControllerChangesetContainer>> {
        unsigned long __first_;
    } __size_;
};

struct deque<FBFLVFrame, std::__1::allocator<FBFLVFrame>> {
    struct __split_buffer<FBFLVFrame *, std::__1::allocator<FBFLVFrame *>> {
        struct FBFLVFrame **__first_;
        struct FBFLVFrame **__begin_;
        struct FBFLVFrame **__end_;
        struct __compressed_pair<FBFLVFrame **, std::__1::allocator<FBFLVFrame *>> {
            struct FBFLVFrame **__first_;
        } __end_cap_;
    } __map_;
    unsigned int __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<FBFLVFrame>> {
        unsigned long __first_;
    } __size_;
};

struct deque<NSInvocation *, std::__1::allocator<NSInvocation *>> {
    struct __split_buffer<NSInvocation *__strong *, std::__1::allocator<NSInvocation *__strong *>> {
        id **__first_;
        id **__begin_;
        id **__end_;
        struct __compressed_pair<NSInvocation *__strong **, std::__1::allocator<NSInvocation *__strong *>> {
            id **__first_;
        } __end_cap_;
    } __map_;
    unsigned int __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<NSInvocation *>> {
        unsigned long __first_;
    } __size_;
};

struct deque<NSValue *, std::__1::allocator<NSValue *>> {
    struct __split_buffer<NSValue *__strong *, std::__1::allocator<NSValue *__strong *>> {
        id **__first_;
        id **__begin_;
        id **__end_;
        struct __compressed_pair<NSValue *__strong **, std::__1::allocator<NSValue *__strong *>> {
            id **__first_;
        } __end_cap_;
    } __map_;
    unsigned int __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<NSValue *>> {
        unsigned long __first_;
    } __size_;
};

struct deque<std::__1::pair<CMTime, CMTime>, std::__1::allocator<std::__1::pair<CMTime, CMTime>>> {
    struct __split_buffer<std::__1::pair<CMTime, CMTime>*, std::__1::allocator<std::__1::pair<CMTime, CMTime>*>> {
        struct pair<CMTime, CMTime> **__first_;
        struct pair<CMTime, CMTime> **__begin_;
        struct pair<CMTime, CMTime> **__end_;
        struct __compressed_pair<std::__1::pair<CMTime, CMTime>**, std::__1::allocator<std::__1::pair<CMTime, CMTime>*>> {
            struct pair<CMTime, CMTime> **__first_;
        } __end_cap_;
    } __map_;
    unsigned int __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::pair<CMTime, CMTime>>> {
        unsigned long __first_;
    } __size_;
};

struct deque<unsigned long long, std::__1::allocator<unsigned long long>> {
    struct __split_buffer<unsigned long long *, std::__1::allocator<unsigned long long *>> {
        unsigned long long **__first_;
        unsigned long long **__begin_;
        unsigned long long **__end_;
        struct __compressed_pair<unsigned long long **, std::__1::allocator<unsigned long long *>> {
            unsigned long long **__first_;
        } __end_cap_;
    } __map_;
    unsigned int __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long long>> {
        unsigned long __first_;
    } __size_;
};

struct duration<long long, std::__1::ratio<1, 1>> {
    long long __rep_;
};

struct fbvector<const std::__1::basic_string<char>*, std::__1::allocator<const std::__1::basic_string<char>*>> {
    struct Impl {
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> **_field1;
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> **_field2;
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> **_field3;
    } _field1;
};

struct fbvector<proxygen::HTTPHeaderCode, std::__1::allocator<proxygen::HTTPHeaderCode>> {
    struct Impl {
        unsigned char *_field1;
        unsigned char *_field2;
        unsigned char *_field3;
    } _field1;
};

struct fbvector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct Impl {
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field2;
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field3;
    } _field1;
};

struct function<NSString *()>;

struct function<std::__1::shared_ptr<facebook::mobile::graphstore::GraphStore>()> {
    struct type _field1;
    struct __base<std::__1::shared_ptr<facebook::mobile::graphstore::GraphStore>()> *_field2;
};

struct future<std::__1::unique_ptr<FB::DiskStorage::PersistentKeyValueStore::FetchResult, std::__1::default_delete<FB::DiskStorage::PersistentKeyValueStore::FetchResult>>> {
    struct __assoc_state<std::__1::unique_ptr<FB::DiskStorage::PersistentKeyValueStore::FetchResult, std::__1::default_delete<FB::DiskStorage::PersistentKeyValueStore::FetchResult>>> *_field1;
};

struct future<void> {
    struct __assoc_sub_state *_field1;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct jpeg_color_deconverter;

struct jpeg_color_quantizer;

struct jpeg_d_coef_controller;

struct jpeg_d_main_controller;

struct jpeg_d_post_controller;

struct jpeg_decomp_master;

struct jpeg_decompress_struct {
    struct jpeg_error_mgr *err;
    struct jpeg_memory_mgr *mem;
    struct jpeg_progress_mgr *progress;
    void *client_data;
    int is_decompressor;
    int global_state;
    struct jpeg_source_mgr *src;
    unsigned int image_width;
    unsigned int image_height;
    int num_components;
    int jpeg_color_space;
    int out_color_space;
    unsigned int scale_num;
    unsigned int scale_denom;
    double output_gamma;
    int buffered_image;
    int raw_data_out;
    int dct_method;
    int do_fancy_upsampling;
    int do_block_smoothing;
    int quantize_colors;
    int dither_mode;
    int two_pass_quantize;
    int desired_number_of_colors;
    int enable_1pass_quant;
    int enable_external_quant;
    int enable_2pass_quant;
    unsigned int output_width;
    unsigned int output_height;
    int out_color_components;
    int output_components;
    int rec_outbuf_height;
    int actual_number_of_colors;
    char **colormap;
    unsigned int output_scanline;
    int input_scan_number;
    unsigned int input_iMCU_row;
    int output_scan_number;
    unsigned int output_iMCU_row;
    int (*coef_bits)[64];
    CDStruct_183601bc *quant_tbl_ptrs[4];
    CDStruct_183601bc *dc_huff_tbl_ptrs[4];
    CDStruct_183601bc *ac_huff_tbl_ptrs[4];
    int data_precision;
    CDStruct_183601bc *comp_info;
    int is_baseline;
    int progressive_mode;
    int arith_code;
    unsigned char arith_dc_L[16];
    unsigned char arith_dc_U[16];
    unsigned char arith_ac_K[16];
    unsigned int restart_interval;
    int saw_JFIF_marker;
    unsigned char JFIF_major_version;
    unsigned char JFIF_minor_version;
    unsigned char density_unit;
    unsigned short X_density;
    unsigned short Y_density;
    int saw_Adobe_marker;
    unsigned char Adobe_transform;
    int CCIR601_sampling;
    struct jpeg_marker_struct *marker_list;
    int max_h_samp_factor;
    int max_v_samp_factor;
    int min_DCT_h_scaled_size;
    int min_DCT_v_scaled_size;
    unsigned int total_iMCU_rows;
    char *sample_range_limit;
    int comps_in_scan;
    CDStruct_183601bc *cur_comp_info[4];
    unsigned int MCUs_per_row;
    unsigned int MCU_rows_in_scan;
    int blocks_in_MCU;
    int MCU_membership[10];
    int Ss;
    int Se;
    int Ah;
    int Al;
    int block_size;
    int *natural_order;
    int lim_Se;
    int unread_marker;
    struct jpeg_decomp_master *master;
    struct jpeg_d_main_controller *main;
    struct jpeg_d_coef_controller *coef;
    struct jpeg_d_post_controller *post;
    struct jpeg_input_controller *inputctl;
    struct jpeg_marker_reader *marker;
    struct jpeg_entropy_decoder *entropy;
    struct jpeg_inverse_dct *idct;
    struct jpeg_upsampler *upsample;
    struct jpeg_color_deconverter *cconvert;
    struct jpeg_color_quantizer *cquantize;
};

struct jpeg_entropy_decoder;

struct jpeg_error_mgr {
    CDUnknownFunctionPointerType error_exit;
    CDUnknownFunctionPointerType emit_message;
    CDUnknownFunctionPointerType output_message;
    CDUnknownFunctionPointerType format_message;
    CDUnknownFunctionPointerType reset_error_mgr;
    int msg_code;
    union {
        int i[8];
        char s[80];
    } msg_parm;
    int trace_level;
    long num_warnings;
    char **jpeg_message_table;
    int last_jpeg_message;
    char **addon_message_table;
    int first_addon_message;
    int last_addon_message;
};

struct jpeg_input_controller;

struct jpeg_inverse_dct;

struct jpeg_marker_reader;

struct jpeg_marker_struct;

struct jpeg_memory_mgr;

struct jpeg_progress_mgr;

struct jpeg_source_mgr;

struct jpeg_upsampler;

struct lazy_provider<FBComposerScopeSingletonProvider, FBActivitySuggestionManager *> {
    struct mutex _mutex;
    FBComposerScopeSingletonProvider *_provider;
    char _invalidated;
};

struct lazy_provider<FBComposerScopeSingletonProvider, FBAudienceEducationEligibilityController *> {
    struct mutex _mutex;
    FBComposerScopeSingletonProvider *_provider;
    char _invalidated;
};

struct lazy_provider<FBComposerScopeSingletonProvider, FBAutoTaggingController *> {
    struct mutex _mutex;
    FBComposerScopeSingletonProvider *_provider;
    char _invalidated;
};

struct lazy_provider<FBComposerScopeSingletonProvider, FBCollageToolLogger *> {
    struct mutex _mutex;
    FBComposerScopeSingletonProvider *_provider;
    char _invalidated;
};

struct lazy_provider<FBComposerScopeSingletonProvider, FBComposerActivityTagPickerController *> {
    struct mutex _mutex;
    FBComposerScopeSingletonProvider *_provider;
    char _invalidated;
};

struct lazy_provider<FBComposerScopeSingletonProvider, FBComposerAlbumPickerController *> {
    struct mutex _mutex;
    FBComposerScopeSingletonProvider *_provider;
    char _invalidated;
};

struct lazy_provider<FBComposerScopeSingletonProvider, FBComposerAudienceSelectionFlowController *> {
    struct mutex _mutex;
    FBComposerScopeSingletonProvider *_provider;
    char _invalidated;
};

struct lazy_provider<FBComposerScopeSingletonProvider, FBComposerCompositionTextChangeHandler *> {
    struct mutex _mutex;
    FBComposerScopeSingletonProvider *_provider;
    char _invalidated;
};

struct lazy_provider<FBComposerScopeSingletonProvider, FBComposerDataUpdateManager *> {
    struct mutex _mutex;
    FBComposerScopeSingletonProvider *_provider;
    char _invalidated;
};

struct lazy_provider<FBComposerScopeSingletonProvider, FBComposerDatePickerController *> {
    struct mutex _mutex;
    FBComposerScopeSingletonProvider *_provider;
    char _invalidated;
};

struct lazy_provider<FBComposerScopeSingletonProvider, FBComposerDestinationController *> {
    struct mutex _mutex;
    FBComposerScopeSingletonProvider *_provider;
    char _invalidated;
};

struct lazy_provider<FBComposerScopeSingletonProvider, FBComposerLocationPickerController *> {
    struct mutex _mutex;
    FBComposerScopeSingletonProvider *_provider;
    char _invalidated;
};

struct lazy_provider<FBComposerScopeSingletonProvider, FBComposerLogger *> {
    struct mutex _mutex;
    FBComposerScopeSingletonProvider *_provider;
    char _invalidated;
};

struct lazy_provider<FBComposerScopeSingletonProvider, FBComposerLoopsLogger *> {
    struct mutex _mutex;
    FBComposerScopeSingletonProvider *_provider;
    char _invalidated;
};

struct lazy_provider<FBComposerScopeSingletonProvider, FBComposerMediaPickerController *> {
    struct mutex _mutex;
    FBComposerScopeSingletonProvider *_provider;
    char _invalidated;
};

struct lazy_provider<FBComposerScopeSingletonProvider, FBComposerMutableTaggableCollectionProvider *> {
    struct mutex _mutex;
    FBComposerScopeSingletonProvider *_provider;
    char _invalidated;
};

struct lazy_provider<FBComposerScopeSingletonProvider, FBComposerPostCompositionViewController *> {
    struct mutex _mutex;
    FBComposerScopeSingletonProvider *_provider;
    char _invalidated;
};

struct lazy_provider<FBComposerScopeSingletonProvider, FBComposerSharedLinkPickerController *> {
    struct mutex _mutex;
    FBComposerScopeSingletonProvider *_provider;
    char _invalidated;
};

struct lazy_provider<FBComposerScopeSingletonProvider, FBCompositionLinkShareController *> {
    struct mutex _mutex;
    FBComposerScopeSingletonProvider *_provider;
    char _invalidated;
};

struct lazy_provider<FBComposerScopeSingletonProvider, FBMLETitleIconController *> {
    struct mutex _mutex;
    FBComposerScopeSingletonProvider *_provider;
    char _invalidated;
};

struct lazy_provider<FBComposerScopeSingletonProvider, FBMediaPickerDataSourceManager *> {
    struct mutex _mutex;
    FBComposerScopeSingletonProvider *_provider;
    char _invalidated;
};

struct lazy_provider<FBComposerScopeSingletonProvider, FBMediaTraitsObserver *> {
    struct mutex _mutex;
    FBComposerScopeSingletonProvider *_provider;
    char _invalidated;
};

struct lazy_provider<FBComposerScopeSingletonProvider, FBMediaUploadItemManager *> {
    struct mutex _mutex;
    FBComposerScopeSingletonProvider *_provider;
    char _invalidated;
};

struct lazy_provider<FBComposerScopeSingletonProvider, FBPlacePickerV2NearbyFetcher *> {
    struct mutex _mutex;
    FBComposerScopeSingletonProvider *_provider;
    char _invalidated;
};

struct lazy_provider<FBComposerScopeSingletonProvider, id<FBPhotoTaggingAssetObserver>> {
    struct mutex _mutex;
    FBComposerScopeSingletonProvider *_provider;
    char _invalidated;
};

struct lazy_provider<FBGlobalScopeLookupOrCreateProvider, FBApplicationScope *, FBApplicationDefinition *> {
    struct mutex _mutex;
    FBGlobalScopeLookupOrCreateProvider *_provider;
};

struct lazy_provider<FBGlobalScopeSingletonProvider, FBApplicationKeySource *> {
    struct mutex _mutex;
    FBGlobalScopeSingletonProvider *_provider;
};

struct lazy_provider<FBGlobalScopeSingletonProvider, FBExceptionHandler *> {
    struct mutex _mutex;
    FBGlobalScopeSingletonProvider *_provider;
};

struct lazy_provider<FBGlobalScopeSingletonProvider, FBSafeModeChecker *> {
    struct mutex _mutex;
    FBGlobalScopeSingletonProvider *_provider;
};

struct list<(anonymous namespace)::FBGLogLogSink *, std::__1::allocator<(anonymous namespace)::FBGLogLogSink *>> {
    struct __list_node_base<(anonymous namespace)::FBGLogLogSink *, void *> {
        struct __list_node<(anonymous namespace)::FBGLogLogSink *, void *> *__prev_;
        struct __list_node<(anonymous namespace)::FBGLogLogSink *, void *> *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<(anonymous namespace)::FBGLogLogSink *, void *>>> {
        unsigned long __first_;
    } __size_alloc_;
};

struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
        struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> *__prev_;
        struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long __first_;
    } __size_alloc_;
};

struct listener;

struct map<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *, std::__1::less<FBConsistentLookasideCacheObservationHandle *>, std::__1::allocator<std::__1::pair<FBConsistentLookasideCacheObservationHandle *const, FBMemModelObject *>>> {
    struct __tree<std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *>, std::__1::__map_value_compare<FBConsistentLookasideCacheObservationHandle *, std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *>, std::__1::less<FBConsistentLookasideCacheObservationHandle *>, true>, std::__1::allocator<std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *>>> {
        struct __tree_node<std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<FBConsistentLookasideCacheObservationHandle *, std::__1::__value_type<FBConsistentLookasideCacheObservationHandle *, FBMemModelObject *>, std::__1::less<FBConsistentLookasideCacheObservationHandle *>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct map<FBMemModelObject *, FBMemModelObject *, std::__1::less<FBMemModelObject *>, std::__1::allocator<std::__1::pair<FBMemModelObject *const, FBMemModelObject *>>> {
    struct __tree<std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, std::__1::__map_value_compare<FBMemModelObject *, std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, std::__1::less<FBMemModelObject *>, true>, std::__1::allocator<std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>>> {
        struct __tree_node<std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<FBMemModelObject *, std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, std::__1::less<FBMemModelObject *>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct map<FBNotificationsDataSourceLoadLocation, FBNotificationsDataSourceLoadResult, std::__1::less<FBNotificationsDataSourceLoadLocation>, std::__1::allocator<std::__1::pair<const FBNotificationsDataSourceLoadLocation, FBNotificationsDataSourceLoadResult>>> {
    struct __tree<std::__1::__value_type<FBNotificationsDataSourceLoadLocation, FBNotificationsDataSourceLoadResult>, std::__1::__map_value_compare<FBNotificationsDataSourceLoadLocation, std::__1::__value_type<FBNotificationsDataSourceLoadLocation, FBNotificationsDataSourceLoadResult>, std::__1::less<FBNotificationsDataSourceLoadLocation>, true>, std::__1::allocator<std::__1::__value_type<FBNotificationsDataSourceLoadLocation, FBNotificationsDataSourceLoadResult>>> {
        struct __tree_node<std::__1::__value_type<FBNotificationsDataSourceLoadLocation, FBNotificationsDataSourceLoadResult>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FBNotificationsDataSourceLoadLocation, FBNotificationsDataSourceLoadResult>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<FBNotificationsDataSourceLoadLocation, std::__1::__value_type<FBNotificationsDataSourceLoadLocation, FBNotificationsDataSourceLoadResult>, std::__1::less<FBNotificationsDataSourceLoadLocation>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct map<FBNotificationsSilentPushBackgroundRequestExecutor *, FBBackgroundFetchRequest *, std::__1::less<FBNotificationsSilentPushBackgroundRequestExecutor *>, std::__1::allocator<std::__1::pair<FBNotificationsSilentPushBackgroundRequestExecutor *const, FBBackgroundFetchRequest *>>> {
    struct __tree<std::__1::__value_type<FBNotificationsSilentPushBackgroundRequestExecutor *, FBBackgroundFetchRequest *>, std::__1::__map_value_compare<FBNotificationsSilentPushBackgroundRequestExecutor *, std::__1::__value_type<FBNotificationsSilentPushBackgroundRequestExecutor *, FBBackgroundFetchRequest *>, std::__1::less<FBNotificationsSilentPushBackgroundRequestExecutor *>, true>, std::__1::allocator<std::__1::__value_type<FBNotificationsSilentPushBackgroundRequestExecutor *, FBBackgroundFetchRequest *>>> {
        struct __tree_node<std::__1::__value_type<FBNotificationsSilentPushBackgroundRequestExecutor *, FBBackgroundFetchRequest *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FBNotificationsSilentPushBackgroundRequestExecutor *, FBBackgroundFetchRequest *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<FBNotificationsSilentPushBackgroundRequestExecutor *, std::__1::__value_type<FBNotificationsSilentPushBackgroundRequestExecutor *, FBBackgroundFetchRequest *>, std::__1::less<FBNotificationsSilentPushBackgroundRequestExecutor *>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct map<NSString *, FBNotificationsDataSourceLoadLifeCycleAttributes, CompareNSString, std::__1::allocator<std::__1::pair<NSString *const, FBNotificationsDataSourceLoadLifeCycleAttributes>>> {
    struct __tree<std::__1::__value_type<NSString *, FBNotificationsDataSourceLoadLifeCycleAttributes>, std::__1::__map_value_compare<NSString *, std::__1::__value_type<NSString *, FBNotificationsDataSourceLoadLifeCycleAttributes>, CompareNSString, true>, std::__1::allocator<std::__1::__value_type<NSString *, FBNotificationsDataSourceLoadLifeCycleAttributes>>> {
        struct __tree_node<std::__1::__value_type<NSString *, FBNotificationsDataSourceLoadLifeCycleAttributes>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<NSString *, FBNotificationsDataSourceLoadLifeCycleAttributes>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<NSString *, std::__1::__value_type<NSString *, FBNotificationsDataSourceLoadLifeCycleAttributes>, CompareNSString, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct map<UITableViewCell *, id<NSObject>, std::__1::less<UITableViewCell *>, std::__1::allocator<std::__1::pair<UITableViewCell *const, id<NSObject>>>> {
    struct __tree<std::__1::__value_type<UITableViewCell *, id<NSObject>>, std::__1::__map_value_compare<UITableViewCell *, std::__1::__value_type<UITableViewCell *, id<NSObject>>, std::__1::less<UITableViewCell *>, true>, std::__1::allocator<std::__1::__value_type<UITableViewCell *, id<NSObject>>>> {
        struct __tree_node<std::__1::__value_type<UITableViewCell *, id<NSObject>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<UITableViewCell *, id<NSObject>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<UITableViewCell *, std::__1::__value_type<UITableViewCell *, id<NSObject>>, std::__1::less<UITableViewCell *>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct map<UIView *, id<NSObject>, std::__1::less<UIView *>, std::__1::allocator<std::__1::pair<UIView *const, id<NSObject>>>> {
    struct __tree<std::__1::__value_type<UIView *, id<NSObject>>, std::__1::__map_value_compare<UIView *, std::__1::__value_type<UIView *, id<NSObject>>, std::__1::less<UIView *>, true>, std::__1::allocator<std::__1::__value_type<UIView *, id<NSObject>>>> {
        struct __tree_node<std::__1::__value_type<UIView *, id<NSObject>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<UIView *, id<NSObject>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<UIView *, std::__1::__value_type<UIView *, id<NSObject>>, std::__1::less<UIView *>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct map<id, id, FBOrderedDictionaryDynamicKeyComparator, std::__1::allocator<std::__1::pair<const id, id>>> {
    struct __tree<std::__1::__value_type<id, id>, std::__1::__map_value_compare<id, std::__1::__value_type<id, id>, FBOrderedDictionaryDynamicKeyComparator, false>, std::__1::allocator<std::__1::__value_type<id, id>>> {
        struct __tree_node<std::__1::__value_type<id, id>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<id, id>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<id, std::__1::__value_type<id, id>, FBOrderedDictionaryDynamicKeyComparator, false>> {
            unsigned long __first_;
            struct __map_value_compare<id, std::__1::__value_type<id, id>, FBOrderedDictionaryDynamicKeyComparator, false> {
                struct FBOrderedDictionaryDynamicKeyComparator comp;
            } __second_;
        } __pair3_;
    } __tree_;
};

struct map<id<FBCollectionViewSectionDataSource>, FBCollectionViewDelegateRespondsToCache, std::__1::less<id<FBCollectionViewSectionDataSource>>, std::__1::allocator<std::__1::pair<const id<FBCollectionViewSectionDataSource>, FBCollectionViewDelegateRespondsToCache>>> {
    struct __tree<std::__1::__value_type<id<FBCollectionViewSectionDataSource>, FBCollectionViewDelegateRespondsToCache>, std::__1::__map_value_compare<id<FBCollectionViewSectionDataSource>, std::__1::__value_type<id<FBCollectionViewSectionDataSource>, FBCollectionViewDelegateRespondsToCache>, std::__1::less<id<FBCollectionViewSectionDataSource>>, true>, std::__1::allocator<std::__1::__value_type<id<FBCollectionViewSectionDataSource>, FBCollectionViewDelegateRespondsToCache>>> {
        struct __tree_node<std::__1::__value_type<id<FBCollectionViewSectionDataSource>, FBCollectionViewDelegateRespondsToCache>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<id<FBCollectionViewSectionDataSource>, FBCollectionViewDelegateRespondsToCache>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<id<FBCollectionViewSectionDataSource>, std::__1::__value_type<id<FBCollectionViewSectionDataSource>, FBCollectionViewDelegateRespondsToCache>, std::__1::less<id<FBCollectionViewSectionDataSource>>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct map<id<FBPermalinkChildSource>, unsigned int, std::__1::less<id<FBPermalinkChildSource>>, std::__1::allocator<std::__1::pair<const id<FBPermalinkChildSource>, unsigned int>>> {
    struct __tree<std::__1::__value_type<id<FBPermalinkChildSource>, unsigned int>, std::__1::__map_value_compare<id<FBPermalinkChildSource>, std::__1::__value_type<id<FBPermalinkChildSource>, unsigned int>, std::__1::less<id<FBPermalinkChildSource>>, true>, std::__1::allocator<std::__1::__value_type<id<FBPermalinkChildSource>, unsigned int>>> {
        struct __tree_node<std::__1::__value_type<id<FBPermalinkChildSource>, unsigned int>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<id<FBPermalinkChildSource>, unsigned int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<id<FBPermalinkChildSource>, std::__1::__value_type<id<FBPermalinkChildSource>, unsigned int>, std::__1::less<id<FBPermalinkChildSource>>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct map<id<FBTableViewSectionDataSource>, FBTableViewDelegateRespondsToCache, std::__1::less<id<FBTableViewSectionDataSource>>, std::__1::allocator<std::__1::pair<const id<FBTableViewSectionDataSource>, FBTableViewDelegateRespondsToCache>>> {
    struct __tree<std::__1::__value_type<id<FBTableViewSectionDataSource>, FBTableViewDelegateRespondsToCache>, std::__1::__map_value_compare<id<FBTableViewSectionDataSource>, std::__1::__value_type<id<FBTableViewSectionDataSource>, FBTableViewDelegateRespondsToCache>, std::__1::less<id<FBTableViewSectionDataSource>>, true>, std::__1::allocator<std::__1::__value_type<id<FBTableViewSectionDataSource>, FBTableViewDelegateRespondsToCache>>> {
        struct __tree_node<std::__1::__value_type<id<FBTableViewSectionDataSource>, FBTableViewDelegateRespondsToCache>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<id<FBTableViewSectionDataSource>, FBTableViewDelegateRespondsToCache>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<id<FBTableViewSectionDataSource>, std::__1::__value_type<id<FBTableViewSectionDataSource>, FBTableViewDelegateRespondsToCache>, std::__1::less<id<FBTableViewSectionDataSource>>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct map<id<NSObject>, UIView *, std::__1::less<id<NSObject>>, std::__1::allocator<std::__1::pair<const id<NSObject>, UIView *>>> {
    struct __tree<std::__1::__value_type<id<NSObject>, UIView *>, std::__1::__map_value_compare<id<NSObject>, std::__1::__value_type<id<NSObject>, UIView *>, std::__1::less<id<NSObject>>, true>, std::__1::allocator<std::__1::__value_type<id<NSObject>, UIView *>>> {
        struct __tree_node<std::__1::__value_type<id<NSObject>, UIView *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<id<NSObject>, UIView *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<id<NSObject>, std::__1::__value_type<id<NSObject>, UIView *>, std::__1::less<id<NSObject>>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct map<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>>> {
    struct __tree<std::__1::__value_type<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>>> {
        struct __tree_node<std::__1::__value_type<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>, std::__1::less<int>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::pair<__CFHost *, double>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<__CFHost *, double>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::pair<__CFHost *, double>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::pair<__CFHost *, double>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::pair<__CFHost *, double>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::pair<__CFHost *, double>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::pair<__CFHost *, double>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::pair<__CFHost *, double>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<unsigned int, facebook::mobile::graphstore::FancyString>, std::__1::shared_ptr<const facebook::mobile::graphstore::Record>, std::__1::less<std::__1::pair<unsigned int, facebook::mobile::graphstore::FancyString>>, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned int, facebook::mobile::graphstore::FancyString>, std::__1::shared_ptr<const facebook::mobile::graphstore::Record>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<unsigned int, facebook::mobile::graphstore::FancyString>, std::__1::shared_ptr<const facebook::mobile::graphstore::Record>>, std::__1::__map_value_compare<std::__1::pair<unsigned int, facebook::mobile::graphstore::FancyString>, std::__1::__value_type<std::__1::pair<unsigned int, facebook::mobile::graphstore::FancyString>, std::__1::shared_ptr<const facebook::mobile::graphstore::Record>>, std::__1::less<std::__1::pair<unsigned int, facebook::mobile::graphstore::FancyString>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned int, facebook::mobile::graphstore::FancyString>, std::__1::shared_ptr<const facebook::mobile::graphstore::Record>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<unsigned int, facebook::mobile::graphstore::FancyString>, std::__1::shared_ptr<const facebook::mobile::graphstore::Record>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned int, facebook::mobile::graphstore::FancyString>, std::__1::shared_ptr<const facebook::mobile::graphstore::Record>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned int, facebook::mobile::graphstore::FancyString>, std::__1::__value_type<std::__1::pair<unsigned int, facebook::mobile::graphstore::FancyString>, std::__1::shared_ptr<const facebook::mobile::graphstore::Record>>, std::__1::less<std::__1::pair<unsigned int, facebook::mobile::graphstore::FancyString>>, true>> {
            unsigned long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, NSIndexPath *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, NSIndexPath *>>> {
    struct __tree<std::__1::__value_type<unsigned int, NSIndexPath *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, NSIndexPath *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, NSIndexPath *>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, NSIndexPath *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, NSIndexPath *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, NSIndexPath *>, std::__1::less<unsigned int>, true>> {
            unsigned long _field1;
        } _field3;
    } _field1;
};

struct map<xy, FBImageDescriptorState, facebook::image_processing::ComparePoints, std::__1::allocator<std::__1::pair<const xy, FBImageDescriptorState>>> {
    struct __tree<std::__1::__value_type<xy, FBImageDescriptorState>, std::__1::__map_value_compare<xy, std::__1::__value_type<xy, FBImageDescriptorState>, facebook::image_processing::ComparePoints, true>, std::__1::allocator<std::__1::__value_type<xy, FBImageDescriptorState>>> {
        struct __tree_node<std::__1::__value_type<xy, FBImageDescriptorState>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<xy, FBImageDescriptorState>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<xy, std::__1::__value_type<xy, FBImageDescriptorState>, facebook::image_processing::ComparePoints, true>> {
            unsigned long _field1;
        } _field3;
    } _field1;
};

struct mosquitto {
    struct _mosquitto_core {
        int _field1;
        char *_field2;
        char *_field3;
        char *_field4;
        char *_field5;
        unsigned short _field6;
        void *_field7;
        _Bool _field8;
        int _field9;
        int _field10;
        int _field11;
        unsigned short _field12;
        struct _mosquitto_packet _field13;
        struct _mosquitto_packet *_field14;
        struct mosquitto_message *_field15;
        struct mosquitto_callbacks _field16;
        _Bool _field17;
        _Bool _field18;
        void *_field19;
        char *_field20;
        char *_field21;
        int _field22;
    } _field1;
    unsigned int _field2;
    int _field3;
    void *_field4;
    struct mosquitto_message_all *_field5;
    int _field6;
    int _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
};

struct mosquitto_callbacks {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
};

struct mosquitto_message;

struct mosquitto_message_all;

struct msgpack_object {
    int _field1;
    union {
        _Bool _field1;
        unsigned long long _field2;
        long long _field3;
        double _field4;
        struct {
            unsigned int _field1;
            struct msgpack_object *_field2;
        } _field5;
        CDStruct_4802516e _field6;
        struct {
            unsigned int _field1;
            char *_field2;
        } _field7;
    } _field2;
};

struct msgpack_object_kv;

struct msgpack_packer {
    void *_field1;
    CDUnknownFunctionPointerType _field2;
};

struct multimap<int, id<FBFeedSecondaryActionHandler>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<FBFeedSecondaryActionHandler>>>> {
    struct __tree<std::__1::__value_type<int, id<FBFeedSecondaryActionHandler>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, id<FBFeedSecondaryActionHandler>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, id<FBFeedSecondaryActionHandler>>>> {
        struct __tree_node<std::__1::__value_type<int, id<FBFeedSecondaryActionHandler>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, id<FBFeedSecondaryActionHandler>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, id<FBFeedSecondaryActionHandler>>, std::__1::less<int>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct objc_ptr<FBVerveNode<FBVerveSlideContainer>> {
    FBVerveNode *ptr;
};

struct objc_ptr<FBVervePackage> {
    FBVervePackage *ptr;
};

struct objc_ptr<FBVerveSlide> {
    FBVerveSlide *ptr;
};

struct objc_ptr<FBVerveSlideLayout> {
    FBVerveSlideLayout *ptr;
};

struct objc_ptr<FBVerveTransition> {
    FBVerveTransition *ptr;
};

struct objc_ptr<FBVerveView> {
    FBVerveView *ptr;
};

struct objc_ptr<NSArray> {
    NSArray *ptr;
};

struct pair<CKComponent *, FBRichTextComponentTracker *>;

struct pair<CMTime, CMTime>;

struct pair<FBVideoChannelPlaylistItem *, NSIndexPath *> {
    id _field1;
    id _field2;
};

struct pair<FBWebViewResponse *, NSError *> {
    FBWebViewResponse *first;
    NSError *second;
};

struct pair<NSAttributedString *, UIView *>;

struct pair<NSAttributedString *, id<FBReactionUnitComponentAdapter>>;

struct pair<NSObject *const, NSObject *>;

struct pair<id<FBQueriedReactionStoryActionFieldsProtocol>, id<FBReactionActionAdapter>>;

struct pair<id<FBQueriedReactionStoryActionFieldsProtocol>, id<FBReactionSettingsItemAdapter>>;

struct pair<id<NSObject>, NSIndexPath *> {
    id _field1;
    id _field2;
};

struct pair<std::__1::mutex, NSMutableDictionary *> {
    struct mutex first;
    NSMutableDictionary *second;
};

struct pair<std::__1::mutex, id> {
    struct mutex first;
    id second;
};

struct plain_array<double, 9, 1, 0> {
    double _field1[9];
};

struct queue<NSInvocation *, std::__1::deque<NSInvocation *, std::__1::allocator<NSInvocation *>>> {
    struct deque<NSInvocation *, std::__1::allocator<NSInvocation *>> c;
};

struct queue<std::__1::pair<CMTime, CMTime>, std::__1::deque<std::__1::pair<CMTime, CMTime>, std::__1::allocator<std::__1::pair<CMTime, CMTime>>>> {
    struct deque<std::__1::pair<CMTime, CMTime>, std::__1::allocator<std::__1::pair<CMTime, CMTime>>> c;
};

struct queue<unsigned long long, std::__1::deque<unsigned long long, std::__1::allocator<unsigned long long>>> {
    struct deque<unsigned long long, std::__1::allocator<unsigned long long>> c;
};

struct set<const FBGraphQLFieldSet *, std::__1::less<const FBGraphQLFieldSet *>, std::__1::allocator<const FBGraphQLFieldSet *>> {
    struct __tree<const FBGraphQLFieldSet *, std::__1::less<const FBGraphQLFieldSet *>, std::__1::allocator<const FBGraphQLFieldSet *>> {
        struct __tree_node<const FBGraphQLFieldSet *, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<const FBGraphQLFieldSet *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<const FBGraphQLFieldSet *>> {
            unsigned long _field1;
        } _field3;
    } _field1;
};

struct set<int, std::__1::less<int>, std::__1::allocator<int>> {
    struct __tree<int, std::__1::less<int>, std::__1::allocator<int>> {
        struct __tree_node<int, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<int>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct set<std::__1::pair<int, NSObject *>, FBPriorityObjectPairComparator, std::__1::allocator<std::__1::pair<int, NSObject *>>> {
    struct __tree<std::__1::pair<int, NSObject *>, FBPriorityObjectPairComparator, std::__1::allocator<std::__1::pair<int, NSObject *>>> {
        struct __tree_node<std::__1::pair<int, NSObject *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<int, NSObject *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, FBPriorityObjectPairComparator> {
            unsigned long _field1;
        } _field3;
    } _field1;
};

struct shared_ptr<AVCFrame> {
    struct AVCFrame *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<CK::Component::ViewManager> {
    struct ViewManager *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<FB::DiskStorage::BackgroundExceptionLogger> {
    struct BackgroundExceptionLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FB::DiskStorage::DiskCache> {
    struct DiskCache *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FB::DiskStorage::DiskCacheItem::ExtendedMetadata> {
    struct ExtendedMetadata *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<FB::DiskStorage::PersistentKeyValueStore> {
    struct PersistentKeyValueStore *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FB::DiskStorage::Store> {
    struct Store *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FB::DiskStorage::StoreManager> {
    struct StoreManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FB::DiskStorage::StoreManagerFactory> {
    struct StoreManagerFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FB::Promise<AuthenticationCompletedInformation>> {
    struct Promise<AuthenticationCompletedInformation> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FB::Promise<SessionBeganInformation>> {
    struct Promise<SessionBeganInformation> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<H264SPS> {
    struct H264SPS *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<bool> {
    _Bool *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const CKComponentViewConfiguration::Repr> {
    struct Repr *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const facebook::mobile::graphstore::NodeSource> {
    struct NodeSource *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const facebook::mobile::graphstore::Record> {
    struct Record *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const facebook::mobile::graphstore::generated::RepFriendsConnection> {
    struct RepFriendsConnection *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const facebook::mobile::graphstore::generated::RepFriendsEdge> {
    struct RepFriendsEdge *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const facebook::mobile::graphstore::generated::RepPage> {
    struct RepPage *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const facebook::mobile::graphstore::generated::RepPerson> {
    struct RepPerson *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const facebook::mobile::graphstore::generated::RepPhone> {
    struct RepPhone *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const facebook::mobile::graphstore::generated::RepPhoneNumber> {
    struct RepPhoneNumber *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const facebook::mobile::graphstore::generated::RepPhoto> {
    struct RepPhoto *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const facebook::mobile::graphstore::generated::RepStreetAddress> {
    struct RepStreetAddress *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const std::__1::unordered_map<CKComponentViewAttribute, id, std::__1::hash<CKComponentViewAttribute>, std::__1::equal_to<CKComponentViewAttribute>, std::__1::allocator<std::__1::pair<const CKComponentViewAttribute, id>>>> {
    unordered_map_f50c1a1f *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const std::__1::vector<CKComponentLayoutChild, std::__1::allocator<CKComponentLayoutChild>>> {
    vector_7ae51a63 *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const std::__1::vector<__weak id, std::__1::allocator<__weak id>>> {
    struct vector<__weak id, std::__1::allocator<__weak id>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const void> {
    void *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::image_processing::ImageMetadata> {
    struct ImageMetadata *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::image_processing::RGBA8Pixel> {
    struct RGBA8Pixel *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::graphstore::GraphStore> {
    struct GraphStore *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::mobile::xplat::session::UserSession> {
    struct UserSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::rocketspeed::FBRocketSpeedLogger> {
    struct FBRocketSpeedLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::basic_string<char>> {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::unordered_map<unsigned long long, SimpleSearchEntityMetadata, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SimpleSearchEntityMetadata>>>> {
    unordered_map_099fe960 *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<FBDroppedFrame, std::__1::allocator<FBDroppedFrame>>> {
    struct vector<FBDroppedFrame, std::__1::allocator<FBDroppedFrame>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::vector<std::__1::shared_ptr<std::__1::basic_string<char>>, std::__1::allocator<std::__1::shared_ptr<std::__1::basic_string<char>>>>> {
    struct vector<std::__1::shared_ptr<std::__1::basic_string<char>>, std::__1::allocator<std::__1::shared_ptr<std::__1::basic_string<char>>>> *_field1;
    struct __shared_weak_count *_field2;
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct tmat4x4<float> {
    struct tvec4<float> _field1[4];
};

struct tquat<float> {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct tuple<std::__1::mutex, signed char, id> {
    struct __tuple_impl<std::__1::__tuple_indices<0, 1, 2>, std::__1::mutex, signed char, id> {
        struct mutex value;
        char value;
        id value;
    } base_;
};

struct tvec2<float> {
    union {
        CDStruct_b2fbf00d _field1;
        CDStruct_b2fbf00d _field2;
        CDStruct_b2fbf00d _field3;
    } _field1;
};

struct tvec3<float> {
    union {
        CDStruct_869f9c67 _field1;
        CDStruct_869f9c67 _field2;
        CDStruct_869f9c67 _field3;
    } _field1;
};

struct tvec4<float> {
    union {
        CDStruct_225388b8 _field1;
        CDStruct_225388b8 _field2;
        CDStruct_225388b8 _field3;
    } _field1;
};

struct type {
    unsigned char _field1[12];
};

struct unique_ptr<CKComponentMountInfo, std::__1::default_delete<CKComponentMountInfo>> {
    struct __compressed_pair<CKComponentMountInfo *, std::__1::default_delete<CKComponentMountInfo>> {
        struct CKComponentMountInfo *__first_;
    } __ptr_;
};

struct unique_ptr<FB::DataModelInfra::Persistence, std::__1::default_delete<FB::DataModelInfra::Persistence>> {
    struct __compressed_pair<FB::DataModelInfra::Persistence *, std::__1::default_delete<FB::DataModelInfra::Persistence>> {
        struct Persistence *__first_;
    } __ptr_;
};

struct unique_ptr<FBComponentCollectionViewDataSourceCellConfig, std::__1::default_delete<FBComponentCollectionViewDataSourceCellConfig>> {
    struct __compressed_pair<FBComponentCollectionViewDataSourceCellConfig *, std::__1::default_delete<FBComponentCollectionViewDataSourceCellConfig>> {
        struct FBComponentCollectionViewDataSourceCellConfig *__first_;
    } __ptr_;
};

struct unique_ptr<FBComponentTableViewDataSourceCellConfig, std::__1::default_delete<FBComponentTableViewDataSourceCellConfig>> {
    struct __compressed_pair<FBComponentTableViewDataSourceCellConfig *, std::__1::default_delete<FBComponentTableViewDataSourceCellConfig>> {
        struct FBComponentTableViewDataSourceCellConfig *__first_;
    } __ptr_;
};

struct unique_ptr<FBLigerHTTPCallbacks, std::__1::default_delete<FBLigerHTTPCallbacks>> {
    struct __compressed_pair<FBLigerHTTPCallbacks *, std::__1::default_delete<FBLigerHTTPCallbacks>> {
        struct FBLigerHTTPCallbacks *__first_;
    } __ptr_;
};

struct unique_ptr<MQTTClientGlue, std::__1::default_delete<MQTTClientGlue>> {
    struct __compressed_pair<MQTTClientGlue *, std::__1::default_delete<MQTTClientGlue>> {
        struct MQTTClientGlue *__first_;
    } __ptr_;
};

struct unique_ptr<const FB::DiskStorage::Configuration, std::__1::default_delete<const FB::DiskStorage::Configuration>> {
    struct __compressed_pair<const FB::DiskStorage::Configuration *, std::__1::default_delete<const FB::DiskStorage::Configuration>> {
        struct Configuration *_field1;
    } _field1;
};

struct unique_ptr<const facebook::mobile::graphstore::parser::TypeHelper, std::__1::default_delete<const facebook::mobile::graphstore::parser::TypeHelper>> {
    struct __compressed_pair<const facebook::mobile::graphstore::parser::TypeHelper *, std::__1::default_delete<const facebook::mobile::graphstore::parser::TypeHelper>> {
        struct TypeHelper *_field1;
    } _field1;
};

struct unique_ptr<facebook::image_processing::FilteredImage, std::__1::default_delete<facebook::image_processing::FilteredImage>> {
    struct __compressed_pair<facebook::image_processing::FilteredImage *, std::__1::default_delete<facebook::image_processing::FilteredImage>> {
        struct FilteredImage *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::mobile::FBMemModel::detail::BuilderImpl, std::__1::default_delete<facebook::mobile::FBMemModel::detail::BuilderImpl>> {
    struct __compressed_pair<facebook::mobile::FBMemModel::detail::BuilderImpl *, std::__1::default_delete<facebook::mobile::FBMemModel::detail::BuilderImpl>> {
        struct BuilderImpl *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::mobile::FBMemModel::detail::CLCImpl, std::__1::default_delete<facebook::mobile::FBMemModel::detail::CLCImpl>> {
    struct __compressed_pair<facebook::mobile::FBMemModel::detail::CLCImpl *, std::__1::default_delete<facebook::mobile::FBMemModel::detail::CLCImpl>> {
        struct CLCImpl *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::mobile::FBMemModel::detail::IVarArray, std::__1::default_delete<facebook::mobile::FBMemModel::detail::IVarArray>> {
    struct __compressed_pair<facebook::mobile::FBMemModel::detail::IVarArray *, std::__1::default_delete<facebook::mobile::FBMemModel::detail::IVarArray>> {
        struct IVarArray *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::mobile::FBMemModel::detail::RecordAndSnapshot, std::__1::default_delete<facebook::mobile::FBMemModel::detail::RecordAndSnapshot>> {
    struct __compressed_pair<facebook::mobile::FBMemModel::detail::RecordAndSnapshot *, std::__1::default_delete<facebook::mobile::FBMemModel::detail::RecordAndSnapshot>> {
        struct RecordAndSnapshot *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::mobile::graphstore::GraphStore::SubscriptionHandle, std::__1::default_delete<facebook::mobile::graphstore::GraphStore::SubscriptionHandle>> {
    struct __compressed_pair<facebook::mobile::graphstore::GraphStore::SubscriptionHandle *, std::__1::default_delete<facebook::mobile::graphstore::GraphStore::SubscriptionHandle>> {
        struct SubscriptionHandle *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::simplesearch::OrderedList<unsigned long long>, std::__1::default_delete<facebook::simplesearch::OrderedList<unsigned long long>>> {
    struct __compressed_pair<facebook::simplesearch::OrderedList<unsigned long long>*, std::__1::default_delete<facebook::simplesearch::OrderedList<unsigned long long>>> {
        struct OrderedList<unsigned long long> *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::simplesearch::SimpleIndex, std::__1::default_delete<facebook::simplesearch::SimpleIndex>> {
    struct __compressed_pair<facebook::simplesearch::SimpleIndex *, std::__1::default_delete<facebook::simplesearch::SimpleIndex>> {
        struct SimpleIndex *__first_;
    } __ptr_;
};

struct unique_ptr<id [], std::__1::default_delete<id []>> {
    struct __compressed_pair<__strong id *, std::__1::default_delete<id []>> {
        id *_field1;
    } _field1;
};

struct unique_ptr<proxygen::MQTTMessage, std::__1::default_delete<proxygen::MQTTMessage>> {
    struct __compressed_pair<proxygen::MQTTMessage *, std::__1::default_delete<proxygen::MQTTMessage>> {
        struct MQTTMessage *_field1;
    } _field1;
};

struct unique_ptr<proxygen::httpclient::HTTPRequest, std::__1::default_delete<proxygen::httpclient::HTTPRequest>> {
    struct __compressed_pair<proxygen::httpclient::HTTPRequest *, std::__1::default_delete<proxygen::httpclient::HTTPRequest>> {
        struct HTTPRequest *_field1;
    } _field1;
};

struct unique_ptr<proxygen::httpclient::RequestHandlerFactory, std::__1::default_delete<proxygen::httpclient::RequestHandlerFactory>> {
    struct __compressed_pair<proxygen::httpclient::RequestHandlerFactory *, std::__1::default_delete<proxygen::httpclient::RequestHandlerFactory>> {
        struct RequestHandlerFactory *_field1;
    } _field1;
};

struct unique_ptr<proxygen::httpclient::monitor::BandwidthMonitor, std::__1::default_delete<proxygen::httpclient::monitor::BandwidthMonitor>> {
    struct __compressed_pair<proxygen::httpclient::monitor::BandwidthMonitor *, std::__1::default_delete<proxygen::httpclient::monitor::BandwidthMonitor>> {
        struct BandwidthMonitor *__first_;
    } __ptr_;
};

struct unique_ptr<proxygen::httpclient::monitor::DefaultBandwidthMonitor, std::__1::default_delete<proxygen::httpclient::monitor::DefaultBandwidthMonitor>> {
    struct __compressed_pair<proxygen::httpclient::monitor::DefaultBandwidthMonitor *, std::__1::default_delete<proxygen::httpclient::monitor::DefaultBandwidthMonitor>> {
        struct DefaultBandwidthMonitor *_field1;
    } _field1;
};

struct unique_ptr<proxygen::mqttclient::MQTTClient, std::__1::default_delete<proxygen::mqttclient::MQTTClient>> {
    struct __compressed_pair<proxygen::mqttclient::MQTTClient *, std::__1::default_delete<proxygen::mqttclient::MQTTClient>> {
        struct MQTTClient *__first_;
    } __ptr_;
};

struct unique_ptr<proxygen::mqttclient::MQTTClientSettings, std::__1::default_delete<proxygen::mqttclient::MQTTClientSettings>> {
    struct __compressed_pair<proxygen::mqttclient::MQTTClientSettings *, std::__1::default_delete<proxygen::mqttclient::MQTTClientSettings>> {
        struct MQTTClientSettings *_field1;
    } _field1;
};

struct unique_ptr<rocketspeed::Client, std::__1::default_delete<rocketspeed::Client>> {
    struct __compressed_pair<rocketspeed::Client *, std::__1::default_delete<rocketspeed::Client>> {
        struct Client *__first_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*>> {
                unsigned long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *>*>> {
                unsigned long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *>*>> {
                unsigned long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Id>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Id>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Id>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Id>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Id>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Id>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Id>>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::vector<FBFeedAccessibilityComponentAction, std::__1::allocator<FBFeedAccessibilityComponentAction>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::vector<FBFeedAccessibilityComponentAction, std::__1::allocator<FBFeedAccessibilityComponentAction>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::vector<FBFeedAccessibilityComponentAction, std::__1::allocator<FBFeedAccessibilityComponentAction>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::vector<FBFeedAccessibilityComponentAction, std::__1::allocator<FBFeedAccessibilityComponentAction>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<NSString *, std::__1::vector<FBFeedAccessibilityComponentAction, std::__1::allocator<FBFeedAccessibilityComponentAction>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::vector<FBFeedAccessibilityComponentAction, std::__1::allocator<FBFeedAccessibilityComponentAction>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::vector<FBFeedAccessibilityComponentAction, std::__1::allocator<FBFeedAccessibilityComponentAction>>>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<const char *, const char *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>> {
                unsigned long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*>> {
                unsigned long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*>> {
                unsigned long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*>> {
                unsigned long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, FBVerveFactoryView *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, FBVerveFactoryView *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, FBVerveFactoryView *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, FBVerveFactoryView *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long, FBVerveFactoryView *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, FBVerveFactoryView *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, FBVerveFactoryView *>, void *>*>> {
                unsigned long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::unordered_map<FBFeedImpressionEdgeViewState *, std::__1::shared_ptr<std::__1::vector<FBFeedSampledImpressionControllerEdgeTransition, std::__1::allocator<FBFeedSampledImpressionControllerEdgeTransition>>>, EdgeStateHash, EdgeStateEqual, std::__1::allocator<std::__1::pair<FBFeedImpressionEdgeViewState *const, std::__1::shared_ptr<std::__1::vector<FBFeedSampledImpressionControllerEdgeTransition, std::__1::allocator<FBFeedSampledImpressionControllerEdgeTransition>>>>>>, std::__1::default_delete<std::__1::unordered_map<FBFeedImpressionEdgeViewState *, std::__1::shared_ptr<std::__1::vector<FBFeedSampledImpressionControllerEdgeTransition, std::__1::allocator<FBFeedSampledImpressionControllerEdgeTransition>>>, EdgeStateHash, EdgeStateEqual, std::__1::allocator<std::__1::pair<FBFeedImpressionEdgeViewState *const, std::__1::shared_ptr<std::__1::vector<FBFeedSampledImpressionControllerEdgeTransition, std::__1::allocator<FBFeedSampledImpressionControllerEdgeTransition>>>>>>>> {
    struct __compressed_pair<std::__1::unordered_map<FBFeedImpressionEdgeViewState *, std::__1::shared_ptr<std::__1::vector<FBFeedSampledImpressionControllerEdgeTransition, std::__1::allocator<FBFeedSampledImpressionControllerEdgeTransition>>>, EdgeStateHash, EdgeStateEqual, std::__1::allocator<std::__1::pair<FBFeedImpressionEdgeViewState *const, std::__1::shared_ptr<std::__1::vector<FBFeedSampledImpressionControllerEdgeTransition, std::__1::allocator<FBFeedSampledImpressionControllerEdgeTransition>>>>>>*, std::__1::default_delete<std::__1::unordered_map<FBFeedImpressionEdgeViewState *, std::__1::shared_ptr<std::__1::vector<FBFeedSampledImpressionControllerEdgeTransition, std::__1::allocator<FBFeedSampledImpressionControllerEdgeTransition>>>, EdgeStateHash, EdgeStateEqual, std::__1::allocator<std::__1::pair<FBFeedImpressionEdgeViewState *const, std::__1::shared_ptr<std::__1::vector<FBFeedSampledImpressionControllerEdgeTransition, std::__1::allocator<FBFeedSampledImpressionControllerEdgeTransition>>>>>>>> {
        struct unordered_map<FBFeedImpressionEdgeViewState *, std::__1::shared_ptr<std::__1::vector<FBFeedSampledImpressionControllerEdgeTransition, std::__1::allocator<FBFeedSampledImpressionControllerEdgeTransition>>>, EdgeStateHash, EdgeStateEqual, std::__1::allocator<std::__1::pair<FBFeedImpressionEdgeViewState *const, std::__1::shared_ptr<std::__1::vector<FBFeedSampledImpressionControllerEdgeTransition, std::__1::allocator<FBFeedSampledImpressionControllerEdgeTransition>>>>>> *__first_;
    } __ptr_;
};

struct unique_ptr<std::__1::vector<Section, std::__1::allocator<Section>>, std::__1::default_delete<std::__1::vector<Section, std::__1::allocator<Section>>>> {
    struct __compressed_pair<std::__1::vector<Section, std::__1::allocator<Section>>*, std::__1::default_delete<std::__1::vector<Section, std::__1::allocator<Section>>>> {
        struct vector<Section, std::__1::allocator<Section>> *__first_;
    } __ptr_;
};

struct unordered_map<CK::Component::ViewKey, CK::Component::ViewReusePool, std::__1::hash<CK::Component::ViewKey>, std::__1::equal_to<CK::Component::ViewKey>, std::__1::allocator<std::__1::pair<const CK::Component::ViewKey, CK::Component::ViewReusePool>>> {
    struct __hash_table<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, std::__1::__unordered_map_hasher<CK::Component::ViewKey, std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, std::__1::hash<CK::Component::ViewKey>, true>, std::__1::__unordered_map_equal<CK::Component::ViewKey, std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, std::__1::equal_to<CK::Component::ViewKey>, true>, std::__1::allocator<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<CK::Component::ViewKey, std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, std::__1::hash<CK::Component::ViewKey>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<CK::Component::ViewKey, std::__1::__hash_value_type<CK::Component::ViewKey, CK::Component::ViewReusePool>, std::__1::equal_to<CK::Component::ViewKey>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<CKComponentViewAttribute, id, std::__1::hash<CKComponentViewAttribute>, std::__1::equal_to<CKComponentViewAttribute>, std::__1::allocator<std::__1::pair<const CKComponentViewAttribute, id>>> {
    struct __hash_table<std::__1::__hash_value_type<CKComponentViewAttribute, id>, std::__1::__unordered_map_hasher<CKComponentViewAttribute, std::__1::__hash_value_type<CKComponentViewAttribute, id>, std::__1::hash<CKComponentViewAttribute>, true>, std::__1::__unordered_map_equal<CKComponentViewAttribute, std::__1::__hash_value_type<CKComponentViewAttribute, id>, std::__1::equal_to<CKComponentViewAttribute>, true>, std::__1::allocator<std::__1::__hash_value_type<CKComponentViewAttribute, id>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<CKComponentViewAttribute, std::__1::__hash_value_type<CKComponentViewAttribute, id>, std::__1::hash<CKComponentViewAttribute>, true>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<CKComponentViewAttribute, std::__1::__hash_value_type<CKComponentViewAttribute, id>, std::__1::equal_to<CKComponentViewAttribute>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>, std::__1::hash<FBDiskStoreIdentifier>, std::__1::equal_to<FBDiskStoreIdentifier>, std::__1::allocator<std::__1::pair<const FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>>> {
    struct __hash_table<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, std::__1::__unordered_map_hasher<FBDiskStoreIdentifier, std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, std::__1::hash<FBDiskStoreIdentifier>, true>, std::__1::__unordered_map_equal<FBDiskStoreIdentifier, std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, std::__1::equal_to<FBDiskStoreIdentifier>, true>, std::__1::allocator<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBDiskStoreIdentifier, std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, std::__1::hash<FBDiskStoreIdentifier>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<FBDiskStoreIdentifier, std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskCacheWrapper>>, std::__1::equal_to<FBDiskStoreIdentifier>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>, std::__1::hash<FBDiskStoreIdentifier>, std::__1::equal_to<FBDiskStoreIdentifier>, std::__1::allocator<std::__1::pair<const FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>>> {
    struct __hash_table<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, std::__1::__unordered_map_hasher<FBDiskStoreIdentifier, std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, std::__1::hash<FBDiskStoreIdentifier>, true>, std::__1::__unordered_map_equal<FBDiskStoreIdentifier, std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, std::__1::equal_to<FBDiskStoreIdentifier>, true>, std::__1::allocator<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBDiskStoreIdentifier, std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, std::__1::hash<FBDiskStoreIdentifier>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<FBDiskStoreIdentifier, std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBDiskStoreWrapper>>, std::__1::equal_to<FBDiskStoreIdentifier>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>, std::__1::hash<FBDiskStoreIdentifier>, std::__1::equal_to<FBDiskStoreIdentifier>, std::__1::allocator<std::__1::pair<const FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>>> {
    struct __hash_table<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, std::__1::__unordered_map_hasher<FBDiskStoreIdentifier, std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, std::__1::hash<FBDiskStoreIdentifier>, true>, std::__1::__unordered_map_equal<FBDiskStoreIdentifier, std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, std::__1::equal_to<FBDiskStoreIdentifier>, true>, std::__1::allocator<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBDiskStoreIdentifier, std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, std::__1::hash<FBDiskStoreIdentifier>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<FBDiskStoreIdentifier, std::__1::__hash_value_type<FBDiskStoreIdentifier, std::__1::shared_future<FBPersistentKeyValueStoreWrapper>>, std::__1::equal_to<FBDiskStoreIdentifier>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>, std::__1::hash<FBDiskStoreManagerIdentifier>, std::__1::equal_to<FBDiskStoreManagerIdentifier>, std::__1::allocator<std::__1::pair<const FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>>> {
    struct __hash_table<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, std::__1::__unordered_map_hasher<FBDiskStoreManagerIdentifier, std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, std::__1::hash<FBDiskStoreManagerIdentifier>, true>, std::__1::__unordered_map_equal<FBDiskStoreManagerIdentifier, std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, std::__1::equal_to<FBDiskStoreManagerIdentifier>, true>, std::__1::allocator<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBDiskStoreManagerIdentifier, std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, std::__1::hash<FBDiskStoreManagerIdentifier>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<FBDiskStoreManagerIdentifier, std::__1::__hash_value_type<FBDiskStoreManagerIdentifier, std::__1::shared_future<FBDiskStoreManagerWrapper>>, std::__1::equal_to<FBDiskStoreManagerIdentifier>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<FBFeedEventBusFactoryKey, FBFeedEventBus *, std::__1::hash<FBFeedEventBusFactoryKey>, std::__1::equal_to<FBFeedEventBusFactoryKey>, std::__1::allocator<std::__1::pair<const FBFeedEventBusFactoryKey, FBFeedEventBus *>>> {
    struct __hash_table<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, std::__1::__unordered_map_hasher<FBFeedEventBusFactoryKey, std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, std::__1::hash<FBFeedEventBusFactoryKey>, true>, std::__1::__unordered_map_equal<FBFeedEventBusFactoryKey, std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, std::__1::equal_to<FBFeedEventBusFactoryKey>, true>, std::__1::allocator<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBFeedEventBusFactoryKey, std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, std::__1::hash<FBFeedEventBusFactoryKey>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<FBFeedEventBusFactoryKey, std::__1::__hash_value_type<FBFeedEventBusFactoryKey, FBFeedEventBus *>, std::__1::equal_to<FBFeedEventBusFactoryKey>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<FBFeedImpressionEdgeViewState *, std::__1::shared_ptr<std::__1::vector<FBFeedSampledImpressionControllerEdgeTransition, std::__1::allocator<FBFeedSampledImpressionControllerEdgeTransition>>>, EdgeStateHash, EdgeStateEqual, std::__1::allocator<std::__1::pair<FBFeedImpressionEdgeViewState *const, std::__1::shared_ptr<std::__1::vector<FBFeedSampledImpressionControllerEdgeTransition, std::__1::allocator<FBFeedSampledImpressionControllerEdgeTransition>>>>>>;

struct unordered_map<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *, FB::HashFunctor<NSObject *>, FB::EqualFunctor<NSObject *>, std::__1::allocator<std::__1::pair<FBGraphQLFetchConfiguration *const, FBAnalyticsPrefetcherLogger *>>> {
    struct __hash_table<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, std::__1::__unordered_map_hasher<FBGraphQLFetchConfiguration *, std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<FBGraphQLFetchConfiguration *, std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, FB::EqualFunctor<NSObject *>, true>, std::__1::allocator<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBGraphQLFetchConfiguration *, std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, FB::HashFunctor<NSObject *>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<FBGraphQLFetchConfiguration *, std::__1::__hash_value_type<FBGraphQLFetchConfiguration *, FBAnalyticsPrefetcherLogger *>, FB::EqualFunctor<NSObject *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<FBMobileTraceSite, unsigned int, FB::HashFunctor<FBMobileTraceSite>, FB::EqualFunctor<FBMobileTraceSite>, std::__1::allocator<std::__1::pair<const FBMobileTraceSite, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, std::__1::__unordered_map_hasher<FBMobileTraceSite, std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, FB::HashFunctor<FBMobileTraceSite>, true>, std::__1::__unordered_map_equal<FBMobileTraceSite, std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, FB::EqualFunctor<FBMobileTraceSite>, true>, std::__1::allocator<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBMobileTraceSite, std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, FB::HashFunctor<FBMobileTraceSite>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<FBMobileTraceSite, std::__1::__hash_value_type<FBMobileTraceSite, unsigned int>, FB::EqualFunctor<FBMobileTraceSite>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<FBMobileTraceSite, unsigned long long, FB::HashFunctor<FBMobileTraceSite>, FB::EqualFunctor<FBMobileTraceSite>, std::__1::allocator<std::__1::pair<const FBMobileTraceSite, unsigned long long>>> {
    struct __hash_table<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, std::__1::__unordered_map_hasher<FBMobileTraceSite, std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, FB::HashFunctor<FBMobileTraceSite>, true>, std::__1::__unordered_map_equal<FBMobileTraceSite, std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, FB::EqualFunctor<FBMobileTraceSite>, true>, std::__1::allocator<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBMobileTraceSite, std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, FB::HashFunctor<FBMobileTraceSite>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<FBMobileTraceSite, std::__1::__hash_value_type<FBMobileTraceSite, unsigned long long>, FB::EqualFunctor<FBMobileTraceSite>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<FBServiceNetworkerRequest *, FBServiceInternalState *, FB::HashFunctor<NSObject *>, FB::EqualFunctor<NSObject *>, std::__1::allocator<std::__1::pair<FBServiceNetworkerRequest *const, FBServiceInternalState *>>> {
    struct __hash_table<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, std::__1::__unordered_map_hasher<FBServiceNetworkerRequest *, std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<FBServiceNetworkerRequest *, std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, FB::EqualFunctor<NSObject *>, true>, std::__1::allocator<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBServiceNetworkerRequest *, std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, FB::HashFunctor<NSObject *>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<FBServiceNetworkerRequest *, std::__1::__hash_value_type<FBServiceNetworkerRequest *, FBServiceInternalState *>, FB::EqualFunctor<NSObject *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<NSObject *, NSObject *, std::__1::hash<NSObject *>, std::__1::equal_to<NSObject *>, std::__1::allocator<std::__1::pair<NSObject *const, NSObject *>>> {
    struct __hash_table<std::__1::__hash_value_type<NSObject *, NSObject *>, std::__1::__unordered_map_hasher<NSObject *, std::__1::__hash_value_type<NSObject *, NSObject *>, std::__1::hash<NSObject *>, true>, std::__1::__unordered_map_equal<NSObject *, std::__1::__hash_value_type<NSObject *, NSObject *>, std::__1::equal_to<NSObject *>, true>, std::__1::allocator<std::__1::__hash_value_type<NSObject *, NSObject *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<NSObject *, NSObject *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSObject *, std::__1::__hash_value_type<NSObject *, NSObject *>, std::__1::hash<NSObject *>, true>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<NSObject *, std::__1::__hash_value_type<NSObject *, NSObject *>, std::__1::equal_to<NSObject *>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>, FB::HashFunctor<NSObject *>, FB::EqualFunctor<NSObject *>, std::__1::allocator<std::__1::pair<NSString *const, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>>> {
    struct __hash_table<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, FB::EqualFunctor<NSObject *>, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, FB::HashFunctor<NSObject *>, true>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, const std::__1::vector<FBConsistentFieldDescription, std::__1::allocator<FBConsistentFieldDescription>>>, FB::EqualFunctor<NSObject *>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<NSString *, std::__1::shared_future<Id>, FB::HashFunctor<NSObject *>, FB::EqualFunctor<NSObject *>, std::__1::allocator<std::__1::pair<NSString *const, std::__1::shared_future<Id>>>> {
    struct __hash_table<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Id>>, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, std::__1::shared_future<Id>>, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, std::__1::shared_future<Id>>, FB::EqualFunctor<NSObject *>, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Id>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Id>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Id>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Id>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Id>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Id>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Id>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, std::__1::shared_future<Id>>, FB::HashFunctor<NSObject *>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, std::__1::shared_future<Id>>, FB::EqualFunctor<NSObject *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<NSString *, std::__1::shared_future<Value>, FB::HashFunctor<NSObject *>, FB::EqualFunctor<NSObject *>, std::__1::allocator<std::__1::pair<NSString *const, std::__1::shared_future<Value>>>> {
    struct __hash_table<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, FB::EqualFunctor<NSObject *>, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, FB::HashFunctor<NSObject *>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, std::__1::shared_future<Value>>, FB::EqualFunctor<NSObject *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<NSString *, std::__1::vector<FBFeedAccessibilityComponentAction, std::__1::allocator<FBFeedAccessibilityComponentAction>>, FB::HashFunctor<NSObject *>, FB::EqualFunctor<NSObject *>, std::__1::allocator<std::__1::pair<NSString *const, std::__1::vector<FBFeedAccessibilityComponentAction, std::__1::allocator<FBFeedAccessibilityComponentAction>>>>> {
    struct __hash_table<std::__1::__hash_value_type<NSString *, std::__1::vector<FBFeedAccessibilityComponentAction, std::__1::allocator<FBFeedAccessibilityComponentAction>>>, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, std::__1::vector<FBFeedAccessibilityComponentAction, std::__1::allocator<FBFeedAccessibilityComponentAction>>>, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, std::__1::vector<FBFeedAccessibilityComponentAction, std::__1::allocator<FBFeedAccessibilityComponentAction>>>, FB::EqualFunctor<NSObject *>, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, std::__1::vector<FBFeedAccessibilityComponentAction, std::__1::allocator<FBFeedAccessibilityComponentAction>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::vector<FBFeedAccessibilityComponentAction, std::__1::allocator<FBFeedAccessibilityComponentAction>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::vector<FBFeedAccessibilityComponentAction, std::__1::allocator<FBFeedAccessibilityComponentAction>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::vector<FBFeedAccessibilityComponentAction, std::__1::allocator<FBFeedAccessibilityComponentAction>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::vector<FBFeedAccessibilityComponentAction, std::__1::allocator<FBFeedAccessibilityComponentAction>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, std::__1::vector<FBFeedAccessibilityComponentAction, std::__1::allocator<FBFeedAccessibilityComponentAction>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<NSString *, std::__1::vector<FBFeedAccessibilityComponentAction, std::__1::allocator<FBFeedAccessibilityComponentAction>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, std::__1::vector<FBFeedAccessibilityComponentAction, std::__1::allocator<FBFeedAccessibilityComponentAction>>>, FB::HashFunctor<NSObject *>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, std::__1::vector<FBFeedAccessibilityComponentAction, std::__1::allocator<FBFeedAccessibilityComponentAction>>>, FB::EqualFunctor<NSObject *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<NSString *, unsigned int, FB::HashFunctor<NSObject *>, FB::EqualFunctor<NSObject *>, std::__1::allocator<std::__1::pair<NSString *const, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<NSString *, unsigned int>, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, unsigned int>, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, unsigned int>, FB::EqualFunctor<NSObject *>, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<NSString *, unsigned int>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, unsigned int>, FB::HashFunctor<NSObject *>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, unsigned int>, FB::EqualFunctor<NSObject *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<StoreObservationKey, StoreObservationRecord, StoreObservationKeyHasher, std::__1::equal_to<StoreObservationKey>, std::__1::allocator<std::__1::pair<const StoreObservationKey, StoreObservationRecord>>> {
    struct __hash_table<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, std::__1::__unordered_map_hasher<StoreObservationKey, std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, StoreObservationKeyHasher, true>, std::__1::__unordered_map_equal<StoreObservationKey, std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, std::__1::equal_to<StoreObservationKey>, true>, std::__1::allocator<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<StoreObservationKey, std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, StoreObservationKeyHasher, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<StoreObservationKey, std::__1::__hash_value_type<StoreObservationKey, StoreObservationRecord>, std::__1::equal_to<StoreObservationKey>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<UICollectionViewCell *, FBHScrollMountInfo, FB::HashFunctor<NSObject *>, std::__1::equal_to<UICollectionViewCell *>, std::__1::allocator<std::__1::pair<UICollectionViewCell *const, FBHScrollMountInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, std::__1::__unordered_map_hasher<UICollectionViewCell *, std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<UICollectionViewCell *, std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, std::__1::equal_to<UICollectionViewCell *>, true>, std::__1::allocator<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<UICollectionViewCell *, std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, FB::HashFunctor<NSObject *>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<UICollectionViewCell *, std::__1::__hash_value_type<UICollectionViewCell *, FBHScrollMountInfo>, std::__1::equal_to<UICollectionViewCell *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<_CKStateScopeKey, CKComponentScopeFrame *, std::__1::hash<_CKStateScopeKey>, std::__1::equal_to<_CKStateScopeKey>, std::__1::allocator<std::__1::pair<const _CKStateScopeKey, CKComponentScopeFrame *>>> {
    struct __hash_table<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, std::__1::__unordered_map_hasher<_CKStateScopeKey, std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, std::__1::hash<_CKStateScopeKey>, true>, std::__1::__unordered_map_equal<_CKStateScopeKey, std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, std::__1::equal_to<_CKStateScopeKey>, true>, std::__1::allocator<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<_CKStateScopeKey, std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, std::__1::hash<_CKStateScopeKey>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<_CKStateScopeKey, std::__1::__hash_value_type<_CKStateScopeKey, CKComponentScopeFrame *>, std::__1::equal_to<_CKStateScopeKey>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext, FB::HashFunctor<__unsafe_unretained Class>, FB::EqualFunctor<__unsafe_unretained Class>, std::__1::allocator<std::__1::pair<const __unsafe_unretained Class, FBFeedComponentExperimentCacheContext>>> {
    struct __hash_table<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, std::__1::__unordered_map_hasher<__unsafe_unretained Class, std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, FB::HashFunctor<__unsafe_unretained Class>, true>, std::__1::__unordered_map_equal<__unsafe_unretained Class, std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, FB::EqualFunctor<__unsafe_unretained Class>, true>, std::__1::allocator<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<__unsafe_unretained Class, std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, FB::HashFunctor<__unsafe_unretained Class>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<__unsafe_unretained Class, std::__1::__hash_value_type<__unsafe_unretained Class, FBFeedComponentExperimentCacheContext>, FB::EqualFunctor<__unsafe_unretained Class>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<const char *, const char *, FB::CStringHasher, FB::CStringComparer, std::__1::allocator<std::__1::pair<const char *const, const char *>>> {
    struct __hash_table<std::__1::__hash_value_type<const char *, const char *>, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, const char *>, FB::CStringHasher, true>, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, const char *>, FB::CStringComparer, true>, std::__1::allocator<std::__1::__hash_value_type<const char *, const char *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<const char *, const char *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, const char *>, FB::CStringHasher, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, const char *>, FB::CStringComparer, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<id, UICollectionViewCell *, FB::HashFunctor<NSObject *>, std::__1::equal_to<id>, std::__1::allocator<std::__1::pair<const id, UICollectionViewCell *>>> {
    struct __hash_table<std::__1::__hash_value_type<id, UICollectionViewCell *>, std::__1::__unordered_map_hasher<id, std::__1::__hash_value_type<id, UICollectionViewCell *>, FB::HashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<id, std::__1::__hash_value_type<id, UICollectionViewCell *>, std::__1::equal_to<id>, true>, std::__1::allocator<std::__1::__hash_value_type<id, UICollectionViewCell *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<id, UICollectionViewCell *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<id, std::__1::__hash_value_type<id, UICollectionViewCell *>, FB::HashFunctor<NSObject *>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<id, std::__1::__hash_value_type<id, UICollectionViewCell *>, std::__1::equal_to<id>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, std::__1::hash<int>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<long long, ClientProxyVideoStat, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, ClientProxyVideoStat>>> {
    struct __hash_table<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, ClientProxyVideoStat>, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, ClientProxyVideoStat>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, ClientProxyVideoStat>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<long long, ClientProxyVideoStat>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, ClientProxyVideoStat>, std::__1::hash<long long>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, ClientProxyVideoStat>, std::__1::equal_to<long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<long long, FBClientProxyVideoPlayStatsMetaData, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, FBClientProxyVideoPlayStatsMetaData>>> {
    struct __hash_table<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, std::__1::hash<long long>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, FBClientProxyVideoPlayStatsMetaData>, std::__1::equal_to<long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *, (anonymous namespace)::Hasher, (anonymous namespace)::EqualTo, std::__1::allocator<std::__1::pair<const std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, std::__1::__unordered_map_hasher<std::__1::pair<NSString *, NSString *>, std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, (anonymous namespace)::Hasher, true>, std::__1::__unordered_map_equal<std::__1::pair<NSString *, NSString *>, std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, (anonymous namespace)::EqualTo, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::pair<NSString *, NSString *>, std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, (anonymous namespace)::Hasher, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::pair<NSString *, NSString *>, std::__1::__hash_value_type<std::__1::pair<NSString *, NSString *>, FBConsistentLookasideRecord *>, (anonymous namespace)::EqualTo, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem, PoolKeyHasher, std::__1::equal_to<std::__1::pair<__unsafe_unretained Class, id>>, std::__1::allocator<std::__1::pair<const std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, std::__1::__unordered_map_hasher<std::__1::pair<__unsafe_unretained Class, id>, std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, PoolKeyHasher, true>, std::__1::__unordered_map_equal<std::__1::pair<__unsafe_unretained Class, id>, std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, std::__1::equal_to<std::__1::pair<__unsafe_unretained Class, id>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::pair<__unsafe_unretained Class, id>, std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, PoolKeyHasher, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::pair<__unsafe_unretained Class, id>, std::__1::__hash_value_type<std::__1::pair<__unsafe_unretained Class, id>, FBStatefulReusePoolItem>, std::__1::equal_to<std::__1::pair<__unsafe_unretained Class, id>>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>, FB::HashFunctor<RequestMapKey>, FB::EqualFunctor<RequestMapKey>, std::__1::allocator<std::__1::pair<const std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, std::__1::__unordered_map_hasher<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, FB::HashFunctor<RequestMapKey>, true>, std::__1::__unordered_map_equal<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, FB::EqualFunctor<RequestMapKey>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, FB::HashFunctor<RequestMapKey>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::__hash_value_type<std::__1::pair<id<FBGraphQLFetchUnit>, FBGraphQLFetchConfiguration *>, std::__1::vector<FBGraphQLFetchRequest, std::__1::allocator<FBGraphQLFetchRequest>>>, FB::EqualFunctor<RequestMapKey>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, NSString *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, NSString *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, NSString *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::hash<unsigned int>, true>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned int, UIColor *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, UIColor *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, UIColor *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, UIColor *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, UIColor *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, UIColor *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, UIColor *>, std::__1::hash<unsigned int>, true>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, UIColor *>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned int, UIImage *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, UIImage *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, UIImage *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, UIImage *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, UIImage *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, UIImage *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, UIImage *>, std::__1::hash<unsigned int>, true>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, UIImage *>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, SimpleSearchEntityMetadata, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SimpleSearchEntityMetadata>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, std::__1::hash<unsigned long long>, true>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_multimap<CKComponentAnnouncedEvent, CKComponentController *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const CKComponentAnnouncedEvent, CKComponentController *>>> {
    struct __hash_table<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, std::__1::__unordered_map_hasher<CKComponentAnnouncedEvent, std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<CKComponentAnnouncedEvent, std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<CKComponentAnnouncedEvent, std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, std::__1::hash<unsigned int>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<CKComponentAnnouncedEvent, std::__1::__hash_value_type<CKComponentAnnouncedEvent, CKComponentController *>, std::__1::equal_to<unsigned int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_multimap<CKMemoizationKey, CKComponent *, std::__1::hash<CKMemoizationKey>, std::__1::equal_to<CKMemoizationKey>, std::__1::allocator<std::__1::pair<const CKMemoizationKey, CKComponent *>>> {
    struct __hash_table<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, std::__1::__unordered_map_hasher<CKMemoizationKey, std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, std::__1::hash<CKMemoizationKey>, true>, std::__1::__unordered_map_equal<CKMemoizationKey, std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, std::__1::equal_to<CKMemoizationKey>, true>, std::__1::allocator<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<CKMemoizationKey, std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, std::__1::hash<CKMemoizationKey>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<CKMemoizationKey, std::__1::__hash_value_type<CKMemoizationKey, CKComponent *>, std::__1::equal_to<CKMemoizationKey>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>> {
    struct __hash_table<std::__1::__hash_value_type<int, id (^)(id)>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, id (^)(id)>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, id (^)(id)>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, id (^)(id)>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, id (^)(id)>, std::__1::hash<int>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, id (^)(id)>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_multimap<unsigned long, FBVerveFactoryView *, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, FBVerveFactoryView *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long, FBVerveFactoryView *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, FBVerveFactoryView *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, FBVerveFactoryView *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, FBVerveFactoryView *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, FBVerveFactoryView *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, FBVerveFactoryView *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, FBVerveFactoryView *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, FBVerveFactoryView *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, FBVerveFactoryView *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long, FBVerveFactoryView *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, FBVerveFactoryView *>, std::__1::hash<unsigned long>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, FBVerveFactoryView *>, std::__1::equal_to<unsigned long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vector<(anonymous namespace)::animation, std::__1::allocator<(anonymous namespace)::animation>> {
    struct animation *__begin_;
    struct animation *__end_;
    struct __compressed_pair<(anonymous namespace)::animation *, std::__1::allocator<(anonymous namespace)::animation>> {
        struct animation *__first_;
    } __end_cap_;
};

struct vector<(anonymous namespace)::card_page, std::__1::allocator<(anonymous namespace)::card_page>> {
    struct card_page *__begin_;
    struct card_page *__end_;
    struct __compressed_pair<(anonymous namespace)::card_page *, std::__1::allocator<(anonymous namespace)::card_page>> {
        struct card_page *__first_;
    } __end_cap_;
};

struct vector<(anonymous namespace)::listener, std::__1::allocator<(anonymous namespace)::listener>> {
    struct listener *__begin_;
    struct listener *__end_;
    struct __compressed_pair<(anonymous namespace)::listener *, std::__1::allocator<(anonymous namespace)::listener>> {
        struct listener *__first_;
    } __end_cap_;
};

struct vector<CGPoint, std::__1::allocator<CGPoint>> {
    struct CGPoint *__begin_;
    struct CGPoint *__end_;
    struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint>> {
        struct CGPoint *__first_;
    } __end_cap_;
};

struct vector<CK::ArrayController::Input::Items, std::__1::allocator<CK::ArrayController::Input::Items>> {
    struct Items *__begin_;
    struct Items *__end_;
    struct __compressed_pair<CK::ArrayController::Input::Items *, std::__1::allocator<CK::ArrayController::Input::Items>> {
        struct Items *__first_;
    } __end_cap_;
};

struct vector<CK::ArrayController::Output::Change, std::__1::allocator<CK::ArrayController::Output::Change>> {
    struct Change *_field1;
    struct Change *_field2;
    struct __compressed_pair<CK::ArrayController::Output::Change *, std::__1::allocator<CK::ArrayController::Output::Change>> {
        struct Change *_field1;
    } _field3;
};

struct vector<CKAppliedComponentAnimation, std::__1::allocator<CKAppliedComponentAnimation>> {
    struct CKAppliedComponentAnimation *__begin_;
    struct CKAppliedComponentAnimation *__end_;
    struct __compressed_pair<CKAppliedComponentAnimation *, std::__1::allocator<CKAppliedComponentAnimation>> {
        struct CKAppliedComponentAnimation *__first_;
    } __end_cap_;
};

struct vector<CKComponent *, std::__1::allocator<CKComponent *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<CKComponent *__strong *, std::__1::allocator<CKComponent *>> {
        id *__first_;
    } __end_cap_;
};

struct vector<CKComponent<FBHScrollImpressionLogging>*, std::__1::allocator<CKComponent<FBHScrollImpressionLogging>*>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<CKComponent<FBHScrollImpressionLogging>*__strong *, std::__1::allocator<CKComponent<FBHScrollImpressionLogging>*>> {
        id *__first_;
    } __end_cap_;
};

struct vector<CKComponentAccessibilityAggregationItem, std::__1::allocator<CKComponentAccessibilityAggregationItem>> {
    struct CKComponentAccessibilityAggregationItem *__begin_;
    struct CKComponentAccessibilityAggregationItem *__end_;
    struct __compressed_pair<CKComponentAccessibilityAggregationItem *, std::__1::allocator<CKComponentAccessibilityAggregationItem>> {
        struct CKComponentAccessibilityAggregationItem *__first_;
    } __end_cap_;
};

struct vector<CKComponentAnimation, std::__1::allocator<CKComponentAnimation>> {
    struct CKComponentAnimation *_field1;
    struct CKComponentAnimation *_field2;
    struct __compressed_pair<CKComponentAnimation *, std::__1::allocator<CKComponentAnimation>> {
        struct CKComponentAnimation *_field1;
    } _field3;
};

struct vector<CKComponentLayoutChild, std::__1::allocator<CKComponentLayoutChild>> {
    struct CKComponentLayoutChild *_field1;
    struct CKComponentLayoutChild *_field2;
    struct __compressed_pair<CKComponentLayoutChild *, std::__1::allocator<CKComponentLayoutChild>> {
        struct CKComponentLayoutChild *_field1;
    } _field3;
};

struct vector<CKComponentPreparationInputItem *, std::__1::allocator<CKComponentPreparationInputItem *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<CKComponentPreparationInputItem *__strong *, std::__1::allocator<CKComponentPreparationInputItem *>> {
        id *__first_;
    } __end_cap_;
};

struct vector<CKPendingComponentAnimation, std::__1::allocator<CKPendingComponentAnimation>> {
    struct CKPendingComponentAnimation *__begin_;
    struct CKPendingComponentAnimation *__end_;
    struct __compressed_pair<CKPendingComponentAnimation *, std::__1::allocator<CKPendingComponentAnimation>> {
        struct CKPendingComponentAnimation *__first_;
    } __end_cap_;
};

struct vector<CKStackLayoutComponent *, std::__1::allocator<CKStackLayoutComponent *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<CKStackLayoutComponent *__strong *, std::__1::allocator<CKStackLayoutComponent *>> {
        id *__first_;
    } __end_cap_;
};

struct vector<CKStackLayoutComponentChild, std::__1::allocator<CKStackLayoutComponentChild>> {
    struct CKStackLayoutComponentChild *__begin_;
    struct CKStackLayoutComponentChild *__end_;
    struct __compressed_pair<CKStackLayoutComponentChild *, std::__1::allocator<CKStackLayoutComponentChild>> {
        struct CKStackLayoutComponentChild *__first_;
    } __end_cap_;
};

struct vector<CKStaticLayoutComponentChild, std::__1::allocator<CKStaticLayoutComponentChild>> {
    struct CKStaticLayoutComponentChild *__begin_;
    struct CKStaticLayoutComponentChild *__end_;
    struct __compressed_pair<CKStaticLayoutComponentChild *, std::__1::allocator<CKStaticLayoutComponentChild>> {
        struct CKStaticLayoutComponentChild *__first_;
    } __end_cap_;
};

struct vector<Eigen::Matrix<double, 3, 3, 1, 3, 3>, std::__1::allocator<Eigen::Matrix<double, 3, 3, 1, 3, 3>>> {
    Matrix_8a748f46 *__begin_;
    Matrix_8a748f46 *__end_;
    struct __compressed_pair<Eigen::Matrix<double, 3, 3, 1, 3, 3>*, std::__1::allocator<Eigen::Matrix<double, 3, 3, 1, 3, 3>>> {
        Matrix_8a748f46 *__first_;
    } __end_cap_;
};

struct vector<FB::Functional::Callback<std::__1::pair<FBWebViewResponse *, NSError *>>, std::__1::allocator<FB::Functional::Callback<std::__1::pair<FBWebViewResponse *, NSError *>>>> {
    struct Callback<std::__1::pair<FBWebViewResponse *, NSError *>> *__begin_;
    struct Callback<std::__1::pair<FBWebViewResponse *, NSError *>> *__end_;
    struct __compressed_pair<FB::Functional::Callback<std::__1::pair<FBWebViewResponse *, NSError *>>*, std::__1::allocator<FB::Functional::Callback<std::__1::pair<FBWebViewResponse *, NSError *>>>> {
        struct Callback<std::__1::pair<FBWebViewResponse *, NSError *>> *__first_;
    } __end_cap_;
};

struct vector<FBActionListItem, std::__1::allocator<FBActionListItem>> {
    struct FBActionListItem *_field1;
    struct FBActionListItem *_field2;
    struct __compressed_pair<FBActionListItem *, std::__1::allocator<FBActionListItem>> {
        struct FBActionListItem *_field1;
    } _field3;
};

struct vector<FBAdInterfacesActionButtonConfiguration, std::__1::allocator<FBAdInterfacesActionButtonConfiguration>> {
    struct FBAdInterfacesActionButtonConfiguration *_field1;
    struct FBAdInterfacesActionButtonConfiguration *_field2;
    struct __compressed_pair<FBAdInterfacesActionButtonConfiguration *, std::__1::allocator<FBAdInterfacesActionButtonConfiguration>> {
        struct FBAdInterfacesActionButtonConfiguration *_field1;
    } _field3;
};

struct vector<FBAdInterfacesActiveCampaignStatData, std::__1::allocator<FBAdInterfacesActiveCampaignStatData>> {
    struct FBAdInterfacesActiveCampaignStatData *_field1;
    struct FBAdInterfacesActiveCampaignStatData *_field2;
    struct __compressed_pair<FBAdInterfacesActiveCampaignStatData *, std::__1::allocator<FBAdInterfacesActiveCampaignStatData>> {
        struct FBAdInterfacesActiveCampaignStatData *_field1;
    } _field3;
};

struct vector<FBAdInterfacesInsightsBarSectionConfiguration, std::__1::allocator<FBAdInterfacesInsightsBarSectionConfiguration>> {
    struct FBAdInterfacesInsightsBarSectionConfiguration *_field1;
    struct FBAdInterfacesInsightsBarSectionConfiguration *_field2;
    struct __compressed_pair<FBAdInterfacesInsightsBarSectionConfiguration *, std::__1::allocator<FBAdInterfacesInsightsBarSectionConfiguration>> {
        struct FBAdInterfacesInsightsBarSectionConfiguration *_field1;
    } _field3;
};

struct vector<FBAdInterfacesInsightsDescriptionSectionConfiguration, std::__1::allocator<FBAdInterfacesInsightsDescriptionSectionConfiguration>> {
    struct FBAdInterfacesInsightsDescriptionSectionConfiguration *_field1;
    struct FBAdInterfacesInsightsDescriptionSectionConfiguration *_field2;
    struct __compressed_pair<FBAdInterfacesInsightsDescriptionSectionConfiguration *, std::__1::allocator<FBAdInterfacesInsightsDescriptionSectionConfiguration>> {
        struct FBAdInterfacesInsightsDescriptionSectionConfiguration *_field1;
    } _field3;
};

struct vector<FBAdInterfacesScheduleSuggestion, std::__1::allocator<FBAdInterfacesScheduleSuggestion>> {
    struct FBAdInterfacesScheduleSuggestion *_field1;
    struct FBAdInterfacesScheduleSuggestion *_field2;
    struct __compressed_pair<FBAdInterfacesScheduleSuggestion *, std::__1::allocator<FBAdInterfacesScheduleSuggestion>> {
        struct FBAdInterfacesScheduleSuggestion *_field1;
    } _field3;
};

struct vector<FBAnalyticsModuleStackItem, std::__1::allocator<FBAnalyticsModuleStackItem>> {
    struct FBAnalyticsModuleStackItem *__begin_;
    struct FBAnalyticsModuleStackItem *__end_;
    struct __compressed_pair<FBAnalyticsModuleStackItem *, std::__1::allocator<FBAnalyticsModuleStackItem>> {
        struct FBAnalyticsModuleStackItem *__first_;
    } __end_cap_;
};

struct vector<FBAutoFillButtonBarComponentButton, std::__1::allocator<FBAutoFillButtonBarComponentButton>> {
    struct FBAutoFillButtonBarComponentButton *_field1;
    struct FBAutoFillButtonBarComponentButton *_field2;
    struct __compressed_pair<FBAutoFillButtonBarComponentButton *, std::__1::allocator<FBAutoFillButtonBarComponentButton>> {
        struct FBAutoFillButtonBarComponentButton *_field1;
    } _field3;
};

struct vector<FBCollageLayoutComponentChild, std::__1::allocator<FBCollageLayoutComponentChild>> {
    struct FBCollageLayoutComponentChild *__begin_;
    struct FBCollageLayoutComponentChild *__end_;
    struct __compressed_pair<FBCollageLayoutComponentChild *, std::__1::allocator<FBCollageLayoutComponentChild>> {
        struct FBCollageLayoutComponentChild *__first_;
    } __end_cap_;
};

struct vector<FBComposer::CollectionChangeSetUpdating::ItemUpdateHandler<FBComposerCompositionState *, FBComposerAttachmentsBarItem *>, std::__1::allocator<FBComposer::CollectionChangeSetUpdating::ItemUpdateHandler<FBComposerCompositionState *, FBComposerAttachmentsBarItem *>>> {
    struct ItemUpdateHandler<FBComposerCompositionState *, FBComposerAttachmentsBarItem *> *__begin_;
    struct ItemUpdateHandler<FBComposerCompositionState *, FBComposerAttachmentsBarItem *> *__end_;
    struct __compressed_pair<FBComposer::CollectionChangeSetUpdating::ItemUpdateHandler<FBComposerCompositionState *, FBComposerAttachmentsBarItem *>*, std::__1::allocator<FBComposer::CollectionChangeSetUpdating::ItemUpdateHandler<FBComposerCompositionState *, FBComposerAttachmentsBarItem *>>> {
        struct ItemUpdateHandler<FBComposerCompositionState *, FBComposerAttachmentsBarItem *> *__first_;
    } __end_cap_;
};

struct vector<FBComposer::CollectionChangeSetUpdating::ItemUpdateHandler<FBComposerCompositionState *, FBComposerPostCompositionItem *>, std::__1::allocator<FBComposer::CollectionChangeSetUpdating::ItemUpdateHandler<FBComposerCompositionState *, FBComposerPostCompositionItem *>>> {
    struct ItemUpdateHandler<FBComposerCompositionState *, FBComposerPostCompositionItem *> *__begin_;
    struct ItemUpdateHandler<FBComposerCompositionState *, FBComposerPostCompositionItem *> *__end_;
    struct __compressed_pair<FBComposer::CollectionChangeSetUpdating::ItemUpdateHandler<FBComposerCompositionState *, FBComposerPostCompositionItem *>*, std::__1::allocator<FBComposer::CollectionChangeSetUpdating::ItemUpdateHandler<FBComposerCompositionState *, FBComposerPostCompositionItem *>>> {
        struct ItemUpdateHandler<FBComposerCompositionState *, FBComposerPostCompositionItem *> *__first_;
    } __end_cap_;
};

struct vector<FBDroppedFrame, std::__1::allocator<FBDroppedFrame>>;

struct vector<FBEventPermalinkStencilCellType, std::__1::allocator<FBEventPermalinkStencilCellType>> {
    unsigned int *_field1;
    unsigned int *_field2;
    struct __compressed_pair<FBEventPermalinkStencilCellType *, std::__1::allocator<FBEventPermalinkStencilCellType>> {
        unsigned int *_field1;
    } _field3;
};

struct vector<FBFeedAccessibilityComponentAction, std::__1::allocator<FBFeedAccessibilityComponentAction>> {
    struct FBFeedAccessibilityComponentAction *_field1;
    struct FBFeedAccessibilityComponentAction *_field2;
    struct __compressed_pair<FBFeedAccessibilityComponentAction *, std::__1::allocator<FBFeedAccessibilityComponentAction>> {
        struct FBFeedAccessibilityComponentAction *_field1;
    } _field3;
};

struct vector<FBFeedInfiniteHScrollEdge, std::__1::allocator<FBFeedInfiniteHScrollEdge>> {
    struct FBFeedInfiniteHScrollEdge *__begin_;
    struct FBFeedInfiniteHScrollEdge *__end_;
    struct __compressed_pair<FBFeedInfiniteHScrollEdge *, std::__1::allocator<FBFeedInfiniteHScrollEdge>> {
        struct FBFeedInfiniteHScrollEdge *__first_;
    } __end_cap_;
};

struct vector<FBFlattenedArrayControllerChange, std::__1::allocator<FBFlattenedArrayControllerChange>> {
    struct FBFlattenedArrayControllerChange *_field1;
    struct FBFlattenedArrayControllerChange *_field2;
    struct __compressed_pair<FBFlattenedArrayControllerChange *, std::__1::allocator<FBFlattenedArrayControllerChange>> {
        struct FBFlattenedArrayControllerChange *_field1;
    } _field3;
};

struct vector<FBFlexibleButtonCandidate, std::__1::allocator<FBFlexibleButtonCandidate>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<FBFlexibleButtonCandidate *, std::__1::allocator<FBFlexibleButtonCandidate>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<FBHScrollComponentChild, std::__1::allocator<FBHScrollComponentChild>> {
    struct FBHScrollComponentChild *__begin_;
    struct FBHScrollComponentChild *__end_;
    struct __compressed_pair<FBHScrollComponentChild *, std::__1::allocator<FBHScrollComponentChild>> {
        struct FBHScrollComponentChild *__first_;
    } __end_cap_;
};

struct vector<FBHorizontalLineItem, std::__1::allocator<FBHorizontalLineItem>> {
    struct FBHorizontalLineItem *__begin_;
    struct FBHorizontalLineItem *__end_;
    struct __compressed_pair<FBHorizontalLineItem *, std::__1::allocator<FBHorizontalLineItem>> {
        struct FBHorizontalLineItem *__first_;
    } __end_cap_;
};

struct vector<FBMPCDecodingObjectContext, std::__1::allocator<FBMPCDecodingObjectContext>> {
    struct FBMPCDecodingObjectContext *__begin_;
    struct FBMPCDecodingObjectContext *__end_;
    struct __compressed_pair<FBMPCDecodingObjectContext *, std::__1::allocator<FBMPCDecodingObjectContext>> {
        struct FBMPCDecodingObjectContext *__first_;
    } __end_cap_;
};

struct vector<FBMPCEncodingObjectContext *, std::__1::allocator<FBMPCEncodingObjectContext *>> {
    struct FBMPCEncodingObjectContext **__begin_;
    struct FBMPCEncodingObjectContext **__end_;
    struct __compressed_pair<FBMPCEncodingObjectContext **, std::__1::allocator<FBMPCEncodingObjectContext *>> {
        struct FBMPCEncodingObjectContext **__first_;
    } __end_cap_;
};

struct vector<FBMPCEncodingObjectContext::EncodedObjectRecord, std::__1::allocator<FBMPCEncodingObjectContext::EncodedObjectRecord>> {
    struct EncodedObjectRecord *__begin_;
    struct EncodedObjectRecord *__end_;
    struct __compressed_pair<FBMPCEncodingObjectContext::EncodedObjectRecord *, std::__1::allocator<FBMPCEncodingObjectContext::EncodedObjectRecord>> {
        struct EncodedObjectRecord *__first_;
    } __end_cap_;
};

struct vector<FBPYMLFeedUnitPagePhotoContentChildComponent *, std::__1::allocator<FBPYMLFeedUnitPagePhotoContentChildComponent *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<FBPYMLFeedUnitPagePhotoContentChildComponent *__strong *, std::__1::allocator<FBPYMLFeedUnitPagePhotoContentChildComponent *>> {
        id *__first_;
    } __end_cap_;
};

struct vector<FBRangeAttributes, std::__1::allocator<FBRangeAttributes>> {
    struct FBRangeAttributes *__begin_;
    struct FBRangeAttributes *__end_;
    struct __compressed_pair<FBRangeAttributes *, std::__1::allocator<FBRangeAttributes>> {
        struct FBRangeAttributes *__first_;
    } __end_cap_;
};

struct vector<FBStoryPromotionFooterInsightsDescriptionSectionConfiguration, std::__1::allocator<FBStoryPromotionFooterInsightsDescriptionSectionConfiguration>> {
    struct FBStoryPromotionFooterInsightsDescriptionSectionConfiguration *_field1;
    struct FBStoryPromotionFooterInsightsDescriptionSectionConfiguration *_field2;
    struct __compressed_pair<FBStoryPromotionFooterInsightsDescriptionSectionConfiguration *, std::__1::allocator<FBStoryPromotionFooterInsightsDescriptionSectionConfiguration>> {
        struct FBStoryPromotionFooterInsightsDescriptionSectionConfiguration *_field1;
    } _field3;
};

struct vector<FBThrowbackScatteredPhotosComponentChild, std::__1::allocator<FBThrowbackScatteredPhotosComponentChild>> {
    struct FBThrowbackScatteredPhotosComponentChild *__begin_;
    struct FBThrowbackScatteredPhotosComponentChild *__end_;
    struct __compressed_pair<FBThrowbackScatteredPhotosComponentChild *, std::__1::allocator<FBThrowbackScatteredPhotosComponentChild>> {
        struct FBThrowbackScatteredPhotosComponentChild *__first_;
    } __end_cap_;
};

struct vector<FBTrackedVideoContainer, std::__1::allocator<FBTrackedVideoContainer>> {
    struct FBTrackedVideoContainer *__begin_;
    struct FBTrackedVideoContainer *__end_;
    struct __compressed_pair<FBTrackedVideoContainer *, std::__1::allocator<FBTrackedVideoContainer>> {
        struct FBTrackedVideoContainer *__first_;
    } __end_cap_;
};

struct vector<FBUFIButtonRowItem, std::__1::allocator<FBUFIButtonRowItem>> {
    struct FBUFIButtonRowItem *_field1;
    struct FBUFIButtonRowItem *_field2;
    struct __compressed_pair<FBUFIButtonRowItem *, std::__1::allocator<FBUFIButtonRowItem>> {
        struct FBUFIButtonRowItem *_field1;
    } _field3;
};

struct vector<FBUFICountComponent *, std::__1::allocator<FBUFICountComponent *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<FBUFICountComponent *__strong *, std::__1::allocator<FBUFICountComponent *>> {
        id *__first_;
    } __end_cap_;
};

struct vector<NSString *, std::__1::allocator<NSString *>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<NSString *__strong *, std::__1::allocator<NSString *>> {
        id *_field1;
    } _field3;
};

struct vector<SEL *, std::__1::allocator<SEL *>> {
    SEL *__begin_;
    SEL *__end_;
    struct __compressed_pair<SEL **, std::__1::allocator<SEL *>> {
        SEL *__first_;
    } __end_cap_;
};

struct vector<Section, std::__1::allocator<Section>>;

struct vector<SubPageInfo, std::__1::allocator<SubPageInfo>> {
    struct SubPageInfo *__begin_;
    struct SubPageInfo *__end_;
    struct __compressed_pair<SubPageInfo *, std::__1::allocator<SubPageInfo>> {
        struct SubPageInfo *__first_;
    } __end_cap_;
};

struct vector<TagDescriptor, std::__1::allocator<TagDescriptor>> {
    struct TagDescriptor *_field1;
    struct TagDescriptor *_field2;
    struct __compressed_pair<TagDescriptor *, std::__1::allocator<TagDescriptor>> {
        struct TagDescriptor *_field1;
    } _field3;
};

struct vector<UICollectionViewLayoutAttributes *, std::__1::allocator<UICollectionViewLayoutAttributes *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<UICollectionViewLayoutAttributes *__strong *, std::__1::allocator<UICollectionViewLayoutAttributes *>> {
        id *__first_;
    } __end_cap_;
};

struct vector<UIView *, std::__1::allocator<UIView *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<UIView *__strong *, std::__1::allocator<UIView *>> {
        id *__first_;
    } __end_cap_;
};

struct vector<ViolatingLayout, std::__1::allocator<ViolatingLayout>> {
    struct ViolatingLayout *__begin_;
    struct ViolatingLayout *__end_;
    struct __compressed_pair<ViolatingLayout *, std::__1::allocator<ViolatingLayout>> {
        struct ViolatingLayout *__first_;
    } __end_cap_;
};

struct vector<__unsafe_unretained Class, std::__1::allocator<__unsafe_unretained Class>> {
    Class *_field1;
    Class *_field2;
    struct __compressed_pair<__unsafe_unretained Class *, std::__1::allocator<__unsafe_unretained Class>> {
        Class *_field1;
    } _field3;
};

struct vector<__weak id, std::__1::allocator<__weak id>>;

struct vector<const FBConsistentFieldDescription *, std::__1::allocator<const FBConsistentFieldDescription *>> {
    struct FBConsistentFieldDescription **_field1;
    struct FBConsistentFieldDescription **_field2;
    struct __compressed_pair<const FBConsistentFieldDescription **, std::__1::allocator<const FBConsistentFieldDescription *>> {
        struct FBConsistentFieldDescription **_field1;
    } _field3;
};

struct vector<const FBGraphQLField *, std::__1::allocator<const FBGraphQLField *>> {
    struct FBGraphQLField **_field1;
    struct FBGraphQLField **_field2;
    struct __compressed_pair<const FBGraphQLField **, std::__1::allocator<const FBGraphQLField *>> {
        struct FBGraphQLField **_field1;
    } _field3;
};

struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__first_;
    } __end_cap_;
};

struct vector<facebook::image_processing::BriefDescriptor, std::__1::allocator<facebook::image_processing::BriefDescriptor>> {
    struct BriefDescriptor *__begin_;
    struct BriefDescriptor *__end_;
    struct __compressed_pair<facebook::image_processing::BriefDescriptor *, std::__1::allocator<facebook::image_processing::BriefDescriptor>> {
        struct BriefDescriptor *__first_;
    } __end_cap_;
};

struct vector<int, std::__1::allocator<int>>;

struct vector<proxygen::TraceEvent, std::__1::allocator<proxygen::TraceEvent>> {
    struct TraceEvent *_field1;
    struct TraceEvent *_field2;
    struct __compressed_pair<proxygen::TraceEvent *, std::__1::allocator<proxygen::TraceEvent>> {
        struct TraceEvent *_field1;
    } _field3;
};

struct vector<signed char (*)(NSString *, FBComposerPublisherData *, FBUserSession *), std::__1::allocator<signed char (*)(NSString *, FBComposerPublisherData *, FBUserSession *)>> {
    CDUnknownFunctionPointerType *__begin_;
    CDUnknownFunctionPointerType *__end_;
    struct __compressed_pair<signed char (**)(NSString *, FBComposerPublisherData *, FBUserSession *), std::__1::allocator<signed char (*)(NSString *, FBComposerPublisherData *, FBUserSession *)>> {
        CDUnknownFunctionPointerType *__first_;
    } __end_cap_;
};

struct vector<std::__1::function<NSString *()>, std::__1::allocator<std::__1::function<NSString *()>>> {
    struct function<NSString *()> *__begin_;
    struct function<NSString *()> *__end_;
    struct __compressed_pair<std::__1::function<NSString *()>*, std::__1::allocator<std::__1::function<NSString *()>>> {
        struct function<NSString *()> *__first_;
    } __end_cap_;
};

struct vector<std::__1::map<xy, FBImageDescriptorState, facebook::image_processing::ComparePoints, std::__1::allocator<std::__1::pair<const xy, FBImageDescriptorState>>>, std::__1::allocator<std::__1::map<xy, FBImageDescriptorState, facebook::image_processing::ComparePoints, std::__1::allocator<std::__1::pair<const xy, FBImageDescriptorState>>>>> {
    map_7ac08a62 *__begin_;
    map_7ac08a62 *__end_;
    struct __compressed_pair<std::__1::map<xy, FBImageDescriptorState, facebook::image_processing::ComparePoints, std::__1::allocator<std::__1::pair<const xy, FBImageDescriptorState>>>*, std::__1::allocator<std::__1::map<xy, FBImageDescriptorState, facebook::image_processing::ComparePoints, std::__1::allocator<std::__1::pair<const xy, FBImageDescriptorState>>>>> {
        map_7ac08a62 *__first_;
    } __end_cap_;
};

struct vector<std::__1::pair<CKComponent *, FBRichTextComponentTracker *>, std::__1::allocator<std::__1::pair<CKComponent *, FBRichTextComponentTracker *>>> {
    struct pair<CKComponent *, FBRichTextComponentTracker *> *__begin_;
    struct pair<CKComponent *, FBRichTextComponentTracker *> *__end_;
    struct __compressed_pair<std::__1::pair<CKComponent *, FBRichTextComponentTracker *>*, std::__1::allocator<std::__1::pair<CKComponent *, FBRichTextComponentTracker *>>> {
        struct pair<CKComponent *, FBRichTextComponentTracker *> *__first_;
    } __end_cap_;
};

struct vector<std::__1::pair<NSAttributedString *, UIView *>, std::__1::allocator<std::__1::pair<NSAttributedString *, UIView *>>> {
    struct pair<NSAttributedString *, UIView *> *__begin_;
    struct pair<NSAttributedString *, UIView *> *__end_;
    struct __compressed_pair<std::__1::pair<NSAttributedString *, UIView *>*, std::__1::allocator<std::__1::pair<NSAttributedString *, UIView *>>> {
        struct pair<NSAttributedString *, UIView *> *__first_;
    } __end_cap_;
};

struct vector<std::__1::pair<NSAttributedString *, id<FBReactionUnitComponentAdapter>>, std::__1::allocator<std::__1::pair<NSAttributedString *, id<FBReactionUnitComponentAdapter>>>> {
    struct pair<NSAttributedString *, id<FBReactionUnitComponentAdapter>> *__begin_;
    struct pair<NSAttributedString *, id<FBReactionUnitComponentAdapter>> *__end_;
    struct __compressed_pair<std::__1::pair<NSAttributedString *, id<FBReactionUnitComponentAdapter>>*, std::__1::allocator<std::__1::pair<NSAttributedString *, id<FBReactionUnitComponentAdapter>>>> {
        struct pair<NSAttributedString *, id<FBReactionUnitComponentAdapter>> *__first_;
    } __end_cap_;
};

struct vector<std::__1::pair<NSObject *const, NSObject *>, std::__1::allocator<std::__1::pair<NSObject *const, NSObject *>>> {
    struct pair<NSObject *const, NSObject *> *_field1;
    struct pair<NSObject *const, NSObject *> *_field2;
    struct __compressed_pair<std::__1::pair<NSObject *const, NSObject *>*, std::__1::allocator<std::__1::pair<NSObject *const, NSObject *>>> {
        struct pair<NSObject *const, NSObject *> *_field1;
    } _field3;
};

struct vector<std::__1::pair<id<FBQueriedReactionStoryActionFieldsProtocol>, id<FBReactionActionAdapter>>, std::__1::allocator<std::__1::pair<id<FBQueriedReactionStoryActionFieldsProtocol>, id<FBReactionActionAdapter>>>> {
    struct pair<id<FBQueriedReactionStoryActionFieldsProtocol>, id<FBReactionActionAdapter>> *__begin_;
    struct pair<id<FBQueriedReactionStoryActionFieldsProtocol>, id<FBReactionActionAdapter>> *__end_;
    struct __compressed_pair<std::__1::pair<id<FBQueriedReactionStoryActionFieldsProtocol>, id<FBReactionActionAdapter>>*, std::__1::allocator<std::__1::pair<id<FBQueriedReactionStoryActionFieldsProtocol>, id<FBReactionActionAdapter>>>> {
        struct pair<id<FBQueriedReactionStoryActionFieldsProtocol>, id<FBReactionActionAdapter>> *__first_;
    } __end_cap_;
};

struct vector<std::__1::pair<id<FBQueriedReactionStoryActionFieldsProtocol>, id<FBReactionSettingsItemAdapter>>, std::__1::allocator<std::__1::pair<id<FBQueriedReactionStoryActionFieldsProtocol>, id<FBReactionSettingsItemAdapter>>>> {
    struct pair<id<FBQueriedReactionStoryActionFieldsProtocol>, id<FBReactionSettingsItemAdapter>> *__begin_;
    struct pair<id<FBQueriedReactionStoryActionFieldsProtocol>, id<FBReactionSettingsItemAdapter>> *__end_;
    struct __compressed_pair<std::__1::pair<id<FBQueriedReactionStoryActionFieldsProtocol>, id<FBReactionSettingsItemAdapter>>*, std::__1::allocator<std::__1::pair<id<FBQueriedReactionStoryActionFieldsProtocol>, id<FBReactionSettingsItemAdapter>>>> {
        struct pair<id<FBQueriedReactionStoryActionFieldsProtocol>, id<FBReactionSettingsItemAdapter>> *__first_;
    } __end_cap_;
};

struct vector<std::__1::shared_ptr<std::__1::basic_string<char>>, std::__1::allocator<std::__1::shared_ptr<std::__1::basic_string<char>>>>;

struct vector<std::__1::unique_ptr<const FB::DiskStorage::Configuration, std::__1::default_delete<const FB::DiskStorage::Configuration>>, std::__1::allocator<std::__1::unique_ptr<const FB::DiskStorage::Configuration, std::__1::default_delete<const FB::DiskStorage::Configuration>>>> {
    unique_ptr_0a28a064 *_field1;
    unique_ptr_0a28a064 *_field2;
    struct __compressed_pair<std::__1::unique_ptr<const FB::DiskStorage::Configuration, std::__1::default_delete<const FB::DiskStorage::Configuration>>*, std::__1::allocator<std::__1::unique_ptr<const FB::DiskStorage::Configuration, std::__1::default_delete<const FB::DiskStorage::Configuration>>>> {
        unique_ptr_0a28a064 *_field1;
    } _field3;
};

struct vector<std::__1::vector<TagDescriptor, std::__1::allocator<TagDescriptor>>, std::__1::allocator<std::__1::vector<TagDescriptor, std::__1::allocator<TagDescriptor>>>> {
    struct vector<TagDescriptor, std::__1::allocator<TagDescriptor>> *_field1;
    struct vector<TagDescriptor, std::__1::allocator<TagDescriptor>> *_field2;
    struct __compressed_pair<std::__1::vector<TagDescriptor, std::__1::allocator<TagDescriptor>>*, std::__1::allocator<std::__1::vector<TagDescriptor, std::__1::allocator<TagDescriptor>>>> {
        struct vector<TagDescriptor, std::__1::allocator<TagDescriptor>> *_field1;
    } _field3;
};

struct vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> {
    struct vector<int, std::__1::allocator<int>> *_field1;
    struct vector<int, std::__1::allocator<int>> *_field2;
    struct __compressed_pair<std::__1::vector<int, std::__1::allocator<int>>*, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> {
        struct vector<int, std::__1::allocator<int>> *_field1;
    } _field3;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__first_;
    } __end_cap_;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__first_;
    } __end_cap_;
};

struct vector<void *, std::__1::allocator<void *>> {
    void **_field1;
    void **_field2;
    struct __compressed_pair<void **, std::__1::allocator<void *>> {
        void **_field1;
    } _field3;
};

struct wfs;

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned int total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned int total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned int adler;
    unsigned int reserved;
};

#if 0
// Names with conflicting types:
typedef struct {
    struct Sections _field1;
    struct Items {
        struct map<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>>> _field1;
        struct map<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>>> _field2;
        struct map<int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::map<int, id<NSObject>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, id<NSObject>>>>>>> _field3;
    } _field2;
} Changeset_0af5e60f;

typedef struct {
    struct Sections _field1;
    struct Items {
        struct vector<CK::ArrayController::Output::Change, std::__1::allocator<CK::ArrayController::Output::Change>> _field1;
        struct vector<CK::ArrayController::Output::Change, std::__1::allocator<CK::ArrayController::Output::Change>> _field2;
        struct vector<CK::ArrayController::Output::Change, std::__1::allocator<CK::ArrayController::Output::Change>> _field3;
    } _field2;
} Changeset_00864c32;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    NSString *sharingOptionOnIconName;
    NSString *sharingOptionOffIconName;
    NSString *inviteFriendsIconName;
    NSString *bugReportIconName;
    NSString *locationSettingsIconName;
    NSString *notificationSettingsIconName;
} CDStruct_f5d655e5;

typedef struct {
    NSString *ttiEventName;
    NSString *createPromotionEventName;
    NSString *editPromotionEventName;
    NSString *budgetRecommendationsRequestEventName;
    NSString *customBudgetReachEstimatesRequestEventName;
} CDStruct_ecc6c365;

typedef struct {
    unsigned int initial;
    unsigned int headWithAutomaticRefresh;
    unsigned int headWithManualRefresh;
    unsigned int headWithUndefinedRefresh;
    unsigned int tail;
    unsigned int neck;
    unsigned int invalid;
} CDStruct_fbe7cffb;

typedef struct {
    unsigned int transform;
    unsigned int texture;
    unsigned int invBlockSize;
    unsigned int alpha;
} CDStruct_4d491bc7;

typedef struct {
    unsigned int color;
    float location;
} CDStruct_04a5cf84;

typedef struct {
    unsigned int timeToDisplayCompletedPublication;
} CDStruct_d897c74e;

typedef struct {
    unsigned long _field1;
    id *_field2;
    unsigned long *_field3;
    unsigned long _field4[5];
} CDStruct_11f37819;

typedef struct {
    unsigned long long bytesSent;
    unsigned long long bytesReceived;
} CDStruct_a508bfa1;

typedef struct {
    unsigned short low;
    unsigned short normal;
    unsigned short immediate;
} CDStruct_b4e26eed;

typedef struct {
    unsigned short _field1;
    int _field2;
    int _field3;
    int _field4;
} CDStruct_b94a852e;

typedef struct {
    char _field1;
    unsigned char _field2;
    char _field3;
    unsigned long long _field4;
} CDStruct_c6e275e6;

typedef struct {
    char _field1;
    float _field2;
} CDStruct_909d47cc;

typedef struct {
    double byteRate;
    unsigned int atomByteSize;
} CDStruct_facbd6cb;

typedef struct {
    double timeout;
    double maximumAge;
    double accuracy;
} CDStruct_c7f5a1bf;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
} CDStruct_0d450d55;

typedef struct {
    float sx;
    float sy;
    float tx;
    float ty;
} CDStruct_225388b8;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
} CDStruct_869f9c67;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct {
    int _field1;
    unsigned int _field2;
} CDStruct_f1d50d6b;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    char _field4;
} CDStruct_411e341e;

typedef struct {
    int sendHardTimeoutMsec;
    int sendCheckTimeoutMsec;
    int queueCapacityInBytes;
    double queueVideoCapacityInSeconds;
    int percentageOfCapacityToDrop;
    int connectionRetryCount;
    int connectionRetryDelay;
} CDStruct_61cba922;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
} CDStruct_a734b2e2;

typedef struct {
    int memory;
    int disk;
    int misses;
} CDStruct_f47ad830;

typedef struct {
    int location;
    int length;
} CDStruct_dff5684f;

typedef struct {
    long long _field1;
    char _field2;
} CDStruct_0e679c6d;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
} CDStruct_7c32120d;

typedef struct CDStruct_183601bc;

typedef struct {
    unsigned int _field1;
    struct msgpack_object_kv *_field2;
} CDStruct_4802516e;

typedef struct {
    struct CGColor *_field1;
    struct CGColor *_field2;
    struct CGColor *_field3;
    struct CGColor *_field4;
} CDStruct_a5ac02f4;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    CDStruct_facbd6cb _field4;
    char _field5;
    char _field6;
    char _field7;
} CDStruct_bccf9d01;

typedef struct {
    float bounciness;
    float speed;
    struct CGPoint velocity;
} CDStruct_29228278;

typedef struct {
    float margin;
    float spacing;
    struct CGSize cell_size;
    int layout_mode;
    int header_mode;
    _Bool paged;
    _Bool vertical;
} CDStruct_48c94c23;

typedef struct {
    CDStruct_2c43369c center;
    CDStruct_951efa70 span;
} CDStruct_feeb6407;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct AudioStreamBasicDescription _field1;
    struct OpaqueAudioQueue *_field2;
    struct AudioQueueBuffer *_field3[3];
    long long _field4;
} CDStruct_e8adcc84;

typedef struct {
    struct CGPoint _field1;
    struct CGSize _field2;
    struct CGPoint _field3;
    double _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
} CDStruct_c3a80961;

typedef struct {
    struct CGSize fullBodySize;
    struct CGSize constrainedSize;
    float bodyCollapsedHeight;
    float bodyWithoutGradientHeight;
    struct UIEdgeInsets insidePadding;
    char isValid;
    char textLabelNeedsUpdate;
} CDStruct_984feb9a;

typedef struct {
    struct FBAudioStreamingConfig audioConfig;
    struct FBVideoStreamingConfig videoConfig;
    CDStruct_61cba922 networkConfig;
    struct {
        double exponentialAverageDecayConstant;
    } throughputMonitorConfig;
} CDStruct_07301454;

typedef struct {
    char useCustomTranscoding;
    CDStruct_e83c9415 timeRange;
    int maxNumberOfVideoSegments;
    int maxVideoSegmentDurationInSeconds;
    FBVideoExportConfig *videoExportConfig;
} CDStruct_0d2b8a16;

// Ambiguous groups
typedef struct {
    unsigned int _field1;
    unsigned int _field2;
} CDStruct_c0454aff;

typedef struct {
    unsigned int minumumDelayForRetryingFirstHeadLoad;
    unsigned int exponentialBackoffFactorForEachSubsequentRetriedHeadLoad;
} CDStruct_68e987e7;

typedef struct {
    unsigned int transform;
    unsigned int texture;
} CDStruct_f1931e0c;

typedef struct {
    unsigned int shouldStartNavigationRequest:1;
    unsigned int didStartNavigationRequest:1;
    unsigned int didFailNavigationRequest:1;
    unsigned int didFinishNavigationRequest:1;
    unsigned int progressChanged:1;
} CDStruct_84e82bf7;

typedef struct {
    char _field1;
    char _field2;
} CDStruct_7ddbbeae;

typedef struct {
    char isPadFeedRedesignEnabled;
    char isCardlessUIEnabled;
} CDStruct_1180ccb7;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    double latitude;
    double longitude;
} CDStruct_2c43369c;

typedef struct {
    double latitudeDelta;
    double longitudeDelta;
} CDStruct_951efa70;

typedef struct Matrix<double, 3, 3, 1, 3, 3> {
    struct DenseStorage<double, 9, 3, 3, 1> _field1;
} Matrix_8a748f46;

typedef struct Pipe<FB::LoggingContext<FBDependencyManager *>, FB::LoggingContext<FBDependencyManager *>> {
    CDUnknownBlockType _field1;
} Pipe_1e244a60;

typedef struct Ref<zxing::BinaryBitmap> {
    struct BinaryBitmap *_field1;
} Ref_62e6a0fd;

typedef struct Ref<zxing::Result> {
    struct Result *_field1;
} Ref_1fcf4400;

typedef struct Ref<zxing::ResultPointCallback> {
    struct ResultPointCallback *_field1;
} Ref_f3b3a220;

typedef struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
} SpringSolver_fe820e75;

typedef struct deque<FBFLVFrame, std::__1::allocator<FBFLVFrame>> {
    struct __split_buffer<FBFLVFrame *, std::__1::allocator<FBFLVFrame *>> {
        struct FBFLVFrame **__first_;
        struct FBFLVFrame **__begin_;
        struct FBFLVFrame **__end_;
        struct __compressed_pair<FBFLVFrame **, std::__1::allocator<FBFLVFrame *>> {
            struct FBFLVFrame **__first_;
        } __end_cap_;
    } __map_;
    unsigned int __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<FBFLVFrame>> {
        unsigned long __first_;
    } __size_;
} deque_873eb9f0;

typedef struct function<std::__1::shared_ptr<facebook::mobile::graphstore::GraphStore>()> {
    struct type _field1;
    struct __base<std::__1::shared_ptr<facebook::mobile::graphstore::GraphStore>()> *_field2;
} function_90aee20f;

typedef struct future<std::__1::unique_ptr<FB::DiskStorage::PersistentKeyValueStore::FetchResult, std::__1::default_delete<FB::DiskStorage::PersistentKeyValueStore::FetchResult>>> {
    struct __assoc_state<std::__1::unique_ptr<FB::DiskStorage::PersistentKeyValueStore::FetchResult, std::__1::default_delete<FB::DiskStorage::PersistentKeyValueStore::FetchResult>>> *_field1;
} future_3a11c0c7;

typedef struct future<void> {
    struct __assoc_sub_state *_field1;
} future_da72c1f3;

typedef struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
        struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> *__prev_;
        struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long __first_;
    } __size_alloc_;
} list_2b9a5494;

typedef struct map<FBMemModelObject *, FBMemModelObject *, std::__1::less<FBMemModelObject *>, std::__1::allocator<std::__1::pair<FBMemModelObject *const, FBMemModelObject *>>> {
    struct __tree<std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, std::__1::__map_value_compare<FBMemModelObject *, std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, std::__1::less<FBMemModelObject *>, true>, std::__1::allocator<std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>>> {
        struct __tree_node<std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<FBMemModelObject *, std::__1::__value_type<FBMemModelObject *, FBMemModelObject *>, std::__1::less<FBMemModelObject *>, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
} map_8b7895f5;

typedef struct map<id, id, FBOrderedDictionaryDynamicKeyComparator, std::__1::allocator<std::__1::pair<const id, id>>> {
    struct __tree<std::__1::__value_type<id, id>, std::__1::__map_value_compare<id, std::__1::__value_type<id, id>, FBOrderedDictionaryDynamicKeyComparator, false>, std::__1::allocator<std::__1::__value_type<id, id>>> {
        struct __tree_node<std::__1::__value_type<id, id>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<id, id>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<id, std::__1::__value_type<id, id>, FBOrderedDictionaryDynamicKeyComparator, false>> {
            unsigned long __first_;
            struct __map_value_compare<id, std::__1::__value_type<id, id>, FBOrderedDictionaryDynamicKeyComparator, false> {
                struct FBOrderedDictionaryDynamicKeyComparator comp;
            } __second_;
        } __pair3_;
    } __tree_;
} map_29e207ab;

typedef struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long _field1;
        } _field3;
    } _field1;
} map_5a58ff85;

typedef struct map<unsigned int, NSIndexPath *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, NSIndexPath *>>> {
    struct __tree<std::__1::__value_type<unsigned int, NSIndexPath *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, NSIndexPath *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, NSIndexPath *>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, NSIndexPath *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, NSIndexPath *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, NSIndexPath *>, std::__1::less<unsigned int>, true>> {
            unsigned long _field1;
        } _field3;
    } _field1;
} map_08af5835;

typedef struct map<xy, FBImageDescriptorState, facebook::image_processing::ComparePoints, std::__1::allocator<std::__1::pair<const xy, FBImageDescriptorState>>> {
    struct __tree<std::__1::__value_type<xy, FBImageDescriptorState>, std::__1::__map_value_compare<xy, std::__1::__value_type<xy, FBImageDescriptorState>, facebook::image_processing::ComparePoints, true>, std::__1::allocator<std::__1::__value_type<xy, FBImageDescriptorState>>> {
        struct __tree_node<std::__1::__value_type<xy, FBImageDescriptorState>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<xy, FBImageDescriptorState>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<xy, std::__1::__value_type<xy, FBImageDescriptorState>, facebook::image_processing::ComparePoints, true>> {
            unsigned long _field1;
        } _field3;
    } _field1;
} map_7ac08a62;

typedef struct pair<FBVideoChannelPlaylistItem *, NSIndexPath *> {
    id _field1;
    id _field2;
} pair_cb6e1bb1;

typedef struct pair<id<NSObject>, NSIndexPath *> {
    id _field1;
    id _field2;
} pair_2db5cf6c;

typedef struct set<const FBGraphQLFieldSet *, std::__1::less<const FBGraphQLFieldSet *>, std::__1::allocator<const FBGraphQLFieldSet *>> {
    struct __tree<const FBGraphQLFieldSet *, std::__1::less<const FBGraphQLFieldSet *>, std::__1::allocator<const FBGraphQLFieldSet *>> {
        struct __tree_node<const FBGraphQLFieldSet *, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<const FBGraphQLFieldSet *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<const FBGraphQLFieldSet *>> {
            unsigned long _field1;
        } _field3;
    } _field1;
} set_e2b71e5c;

typedef struct shared_ptr<FB::DiskStorage::DiskCache> {
    struct DiskCache *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_ce6ebb6e;

typedef struct shared_ptr<FB::DiskStorage::DiskCacheItem::ExtendedMetadata> {
    struct ExtendedMetadata *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_16ddcdcf;

typedef struct shared_ptr<FB::DiskStorage::PersistentKeyValueStore> {
    struct PersistentKeyValueStore *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_2e5f48ea;

typedef struct shared_ptr<FB::DiskStorage::Store> {
    struct Store *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_dcdb5892;

typedef struct shared_ptr<FB::DiskStorage::StoreManager> {
    struct StoreManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_de0869db;

typedef struct shared_ptr<FB::DiskStorage::StoreManagerFactory> {
    struct StoreManagerFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_ce6b01bf;

typedef struct shared_ptr<FB::Promise<AuthenticationCompletedInformation>> {
    struct Promise<AuthenticationCompletedInformation> *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_1a4817e6;

typedef struct shared_ptr<FB::Promise<SessionBeganInformation>> {
    struct Promise<SessionBeganInformation> *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_035b12b0;

typedef struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1553c9f8;

typedef struct shared_ptr<const facebook::mobile::graphstore::NodeSource> {
    struct NodeSource *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_4b749c87;

typedef struct shared_ptr<const facebook::mobile::graphstore::Record> {
    struct Record *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_d8dd3219;

typedef struct shared_ptr<const facebook::mobile::graphstore::generated::RepFriendsConnection> {
    struct RepFriendsConnection *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_cc47918f;

typedef struct shared_ptr<const facebook::mobile::graphstore::generated::RepFriendsEdge> {
    struct RepFriendsEdge *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_3befa074;

typedef struct shared_ptr<const facebook::mobile::graphstore::generated::RepPage> {
    struct RepPage *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_fbf82d30;

typedef struct shared_ptr<const facebook::mobile::graphstore::generated::RepPerson> {
    struct RepPerson *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_095192eb;

typedef struct shared_ptr<const facebook::mobile::graphstore::generated::RepPhone> {
    struct RepPhone *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_bd5197be;

typedef struct shared_ptr<const facebook::mobile::graphstore::generated::RepPhoneNumber> {
    struct RepPhoneNumber *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_42456cb2;

typedef struct shared_ptr<const facebook::mobile::graphstore::generated::RepPhoto> {
    struct RepPhoto *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_08780f02;

typedef struct shared_ptr<const facebook::mobile::graphstore::generated::RepStreetAddress> {
    struct RepStreetAddress *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_5da358bb;

typedef struct shared_ptr<const std::__1::vector<CKComponentLayoutChild, std::__1::allocator<CKComponentLayoutChild>>> {
    vector_7ae51a63 *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_6a94d7a4;

typedef struct shared_ptr<facebook::image_processing::ImageMetadata> {
    struct ImageMetadata *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_e28a8fc9;

typedef struct shared_ptr<facebook::mobile::graphstore::GraphStore> {
    struct GraphStore *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_e5341621;

typedef struct shared_ptr<facebook::mobile::xplat::session::UserSession> {
    struct UserSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_bb825c7b;

typedef struct shared_ptr<std::__1::vector<FBDroppedFrame, std::__1::allocator<FBDroppedFrame>>> {
    struct vector<FBDroppedFrame, std::__1::allocator<FBDroppedFrame>> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_896bc00e;

typedef struct shared_ptr<std::__1::vector<std::__1::shared_ptr<std::__1::basic_string<char>>, std::__1::allocator<std::__1::shared_ptr<std::__1::basic_string<char>>>>> {
    struct vector<std::__1::shared_ptr<std::__1::basic_string<char>>, std::__1::allocator<std::__1::shared_ptr<std::__1::basic_string<char>>>> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_cc299ba8;

typedef struct tmat4x4<float> {
    struct tvec4<float> _field1[4];
} tmat4x4_24ae66b5;

typedef struct tvec3<float> {
    union {
        CDStruct_869f9c67 _field1;
        CDStruct_869f9c67 _field2;
        CDStruct_869f9c67 _field3;
    } _field1;
} tvec3_440bf033;

typedef struct unique_ptr<const FB::DiskStorage::Configuration, std::__1::default_delete<const FB::DiskStorage::Configuration>> {
    struct __compressed_pair<const FB::DiskStorage::Configuration *, std::__1::default_delete<const FB::DiskStorage::Configuration>> {
        struct Configuration *_field1;
    } _field1;
} unique_ptr_0a28a064;

typedef struct unique_ptr<const facebook::mobile::graphstore::parser::TypeHelper, std::__1::default_delete<const facebook::mobile::graphstore::parser::TypeHelper>> {
    struct __compressed_pair<const facebook::mobile::graphstore::parser::TypeHelper *, std::__1::default_delete<const facebook::mobile::graphstore::parser::TypeHelper>> {
        struct TypeHelper *_field1;
    } _field1;
} unique_ptr_28ee081f;

typedef struct unique_ptr<facebook::mobile::FBMemModel::detail::BuilderImpl, std::__1::default_delete<facebook::mobile::FBMemModel::detail::BuilderImpl>> {
    struct __compressed_pair<facebook::mobile::FBMemModel::detail::BuilderImpl *, std::__1::default_delete<facebook::mobile::FBMemModel::detail::BuilderImpl>> {
        struct BuilderImpl *__first_;
    } __ptr_;
} unique_ptr_3d817fac;

typedef struct unique_ptr<facebook::mobile::FBMemModel::detail::CLCImpl, std::__1::default_delete<facebook::mobile::FBMemModel::detail::CLCImpl>> {
    struct __compressed_pair<facebook::mobile::FBMemModel::detail::CLCImpl *, std::__1::default_delete<facebook::mobile::FBMemModel::detail::CLCImpl>> {
        struct CLCImpl *__first_;
    } __ptr_;
} unique_ptr_926cbde0;

typedef struct unique_ptr<facebook::mobile::graphstore::GraphStore::SubscriptionHandle, std::__1::default_delete<facebook::mobile::graphstore::GraphStore::SubscriptionHandle>> {
    struct __compressed_pair<facebook::mobile::graphstore::GraphStore::SubscriptionHandle *, std::__1::default_delete<facebook::mobile::graphstore::GraphStore::SubscriptionHandle>> {
        struct SubscriptionHandle *__first_;
    } __ptr_;
} unique_ptr_eeb42c0f;

typedef struct unique_ptr<proxygen::MQTTMessage, std::__1::default_delete<proxygen::MQTTMessage>> {
    struct __compressed_pair<proxygen::MQTTMessage *, std::__1::default_delete<proxygen::MQTTMessage>> {
        struct MQTTMessage *_field1;
    } _field1;
} unique_ptr_065b03e5;

typedef struct unique_ptr<proxygen::httpclient::HTTPRequest, std::__1::default_delete<proxygen::httpclient::HTTPRequest>> {
    struct __compressed_pair<proxygen::httpclient::HTTPRequest *, std::__1::default_delete<proxygen::httpclient::HTTPRequest>> {
        struct HTTPRequest *_field1;
    } _field1;
} unique_ptr_3d2dd75c;

typedef struct unique_ptr<proxygen::httpclient::monitor::BandwidthMonitor, std::__1::default_delete<proxygen::httpclient::monitor::BandwidthMonitor>> {
    struct __compressed_pair<proxygen::httpclient::monitor::BandwidthMonitor *, std::__1::default_delete<proxygen::httpclient::monitor::BandwidthMonitor>> {
        struct BandwidthMonitor *__first_;
    } __ptr_;
} unique_ptr_eed73377;

typedef struct unique_ptr<proxygen::httpclient::monitor::DefaultBandwidthMonitor, std::__1::default_delete<proxygen::httpclient::monitor::DefaultBandwidthMonitor>> {
    struct __compressed_pair<proxygen::httpclient::monitor::DefaultBandwidthMonitor *, std::__1::default_delete<proxygen::httpclient::monitor::DefaultBandwidthMonitor>> {
        struct DefaultBandwidthMonitor *_field1;
    } _field1;
} unique_ptr_e3177ddc;

typedef struct unique_ptr<proxygen::mqttclient::MQTTClientSettings, std::__1::default_delete<proxygen::mqttclient::MQTTClientSettings>> {
    struct __compressed_pair<proxygen::mqttclient::MQTTClientSettings *, std::__1::default_delete<proxygen::mqttclient::MQTTClientSettings>> {
        struct MQTTClientSettings *_field1;
    } _field1;
} unique_ptr_9d94c847;

typedef struct unordered_map<CKComponentViewAttribute, id, std::__1::hash<CKComponentViewAttribute>, std::__1::equal_to<CKComponentViewAttribute>, std::__1::allocator<std::__1::pair<const CKComponentViewAttribute, id>>> {
    struct __hash_table<std::__1::__hash_value_type<CKComponentViewAttribute, id>, std::__1::__unordered_map_hasher<CKComponentViewAttribute, std::__1::__hash_value_type<CKComponentViewAttribute, id>, std::__1::hash<CKComponentViewAttribute>, true>, std::__1::__unordered_map_equal<CKComponentViewAttribute, std::__1::__hash_value_type<CKComponentViewAttribute, id>, std::__1::equal_to<CKComponentViewAttribute>, true>, std::__1::allocator<std::__1::__hash_value_type<CKComponentViewAttribute, id>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<CKComponentViewAttribute, id>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<CKComponentViewAttribute, std::__1::__hash_value_type<CKComponentViewAttribute, id>, std::__1::hash<CKComponentViewAttribute>, true>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<CKComponentViewAttribute, std::__1::__hash_value_type<CKComponentViewAttribute, id>, std::__1::equal_to<CKComponentViewAttribute>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_f50c1a1f;

typedef struct unordered_map<const char *, const char *, FB::CStringHasher, FB::CStringComparer, std::__1::allocator<std::__1::pair<const char *const, const char *>>> {
    struct __hash_table<std::__1::__hash_value_type<const char *, const char *>, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, const char *>, FB::CStringHasher, true>, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, const char *>, FB::CStringComparer, true>, std::__1::allocator<std::__1::__hash_value_type<const char *, const char *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, const char *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<const char *, const char *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, const char *>, FB::CStringHasher, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, const char *>, FB::CStringComparer, true>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_map_a1506d7e;

typedef struct unordered_map<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, std::__1::hash<int>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>>>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_map_4560de9f;

typedef struct unordered_map<unsigned int, NSString *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, NSString *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, NSString *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned int, NSString *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::hash<unsigned int>, true>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, NSString *>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_11435f86;

typedef struct unordered_map<unsigned int, UIColor *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, UIColor *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, UIColor *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, UIColor *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, UIColor *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, UIColor *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned int, UIColor *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, UIColor *>, std::__1::hash<unsigned int>, true>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, UIColor *>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_d0fb2f79;

typedef struct unordered_map<unsigned int, UIImage *, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, UIImage *>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, UIImage *>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, UIImage *>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, UIImage *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, UIImage *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned int, UIImage *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, UIImage *>, std::__1::hash<unsigned int>, true>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, UIImage *>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_f26381cc;

typedef struct unordered_map<unsigned long long, SimpleSearchEntityMetadata, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SimpleSearchEntityMetadata>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, std::__1::hash<unsigned long long>, true>> {
            unsigned long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, SimpleSearchEntityMetadata>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_099fe960;

typedef struct unordered_multimap<int, id (^)(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id (^)(id)>>> {
    struct __hash_table<std::__1::__hash_value_type<int, id (^)(id)>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, id (^)(id)>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, id (^)(id)>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, id (^)(id)>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, id (^)(id)>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, id (^)(id)>, std::__1::hash<int>, true>> {
            unsigned long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, id (^)(id)>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_multimap_0bf43592;

typedef struct vector<CGPoint, std::__1::allocator<CGPoint>> {
    struct CGPoint *__begin_;
    struct CGPoint *__end_;
    struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint>> {
        struct CGPoint *__first_;
    } __end_cap_;
} vector_fa824bf3;

typedef struct vector<CK::ArrayController::Input::Items, std::__1::allocator<CK::ArrayController::Input::Items>> {
    struct Items *__begin_;
    struct Items *__end_;
    struct __compressed_pair<CK::ArrayController::Input::Items *, std::__1::allocator<CK::ArrayController::Input::Items>> {
        struct Items *__first_;
    } __end_cap_;
} vector_a4d14ec1;

typedef struct vector<CKComponent *, std::__1::allocator<CKComponent *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<CKComponent *__strong *, std::__1::allocator<CKComponent *>> {
        id *__first_;
    } __end_cap_;
} vector_4cad59d0;

typedef struct vector<CKComponent<FBHScrollImpressionLogging>*, std::__1::allocator<CKComponent<FBHScrollImpressionLogging>*>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<CKComponent<FBHScrollImpressionLogging>*__strong *, std::__1::allocator<CKComponent<FBHScrollImpressionLogging>*>> {
        id *__first_;
    } __end_cap_;
} vector_be416fb1;

typedef struct vector<CKComponentAnimation, std::__1::allocator<CKComponentAnimation>> {
    struct CKComponentAnimation *_field1;
    struct CKComponentAnimation *_field2;
    struct __compressed_pair<CKComponentAnimation *, std::__1::allocator<CKComponentAnimation>> {
        struct CKComponentAnimation *_field1;
    } _field3;
} vector_035bbd4a;

typedef struct vector<CKComponentLayoutChild, std::__1::allocator<CKComponentLayoutChild>> {
    struct CKComponentLayoutChild *_field1;
    struct CKComponentLayoutChild *_field2;
    struct __compressed_pair<CKComponentLayoutChild *, std::__1::allocator<CKComponentLayoutChild>> {
        struct CKComponentLayoutChild *_field1;
    } _field3;
} vector_7ae51a63;

typedef struct vector<CKStackLayoutComponentChild, std::__1::allocator<CKStackLayoutComponentChild>> {
    struct CKStackLayoutComponentChild *__begin_;
    struct CKStackLayoutComponentChild *__end_;
    struct __compressed_pair<CKStackLayoutComponentChild *, std::__1::allocator<CKStackLayoutComponentChild>> {
        struct CKStackLayoutComponentChild *__first_;
    } __end_cap_;
} vector_89ce9f02;

typedef struct vector<CKStaticLayoutComponentChild, std::__1::allocator<CKStaticLayoutComponentChild>> {
    struct CKStaticLayoutComponentChild *__begin_;
    struct CKStaticLayoutComponentChild *__end_;
    struct __compressed_pair<CKStaticLayoutComponentChild *, std::__1::allocator<CKStaticLayoutComponentChild>> {
        struct CKStaticLayoutComponentChild *__first_;
    } __end_cap_;
} vector_286522d3;

typedef struct vector<FBActionListItem, std::__1::allocator<FBActionListItem>> {
    struct FBActionListItem *_field1;
    struct FBActionListItem *_field2;
    struct __compressed_pair<FBActionListItem *, std::__1::allocator<FBActionListItem>> {
        struct FBActionListItem *_field1;
    } _field3;
} vector_b219b0f9;

typedef struct vector<FBAdInterfacesActionButtonConfiguration, std::__1::allocator<FBAdInterfacesActionButtonConfiguration>> {
    struct FBAdInterfacesActionButtonConfiguration *_field1;
    struct FBAdInterfacesActionButtonConfiguration *_field2;
    struct __compressed_pair<FBAdInterfacesActionButtonConfiguration *, std::__1::allocator<FBAdInterfacesActionButtonConfiguration>> {
        struct FBAdInterfacesActionButtonConfiguration *_field1;
    } _field3;
} vector_95fcc004;

typedef struct vector<FBAdInterfacesActiveCampaignStatData, std::__1::allocator<FBAdInterfacesActiveCampaignStatData>> {
    struct FBAdInterfacesActiveCampaignStatData *_field1;
    struct FBAdInterfacesActiveCampaignStatData *_field2;
    struct __compressed_pair<FBAdInterfacesActiveCampaignStatData *, std::__1::allocator<FBAdInterfacesActiveCampaignStatData>> {
        struct FBAdInterfacesActiveCampaignStatData *_field1;
    } _field3;
} vector_fd5548b2;

typedef struct vector<FBAdInterfacesInsightsBarSectionConfiguration, std::__1::allocator<FBAdInterfacesInsightsBarSectionConfiguration>> {
    struct FBAdInterfacesInsightsBarSectionConfiguration *_field1;
    struct FBAdInterfacesInsightsBarSectionConfiguration *_field2;
    struct __compressed_pair<FBAdInterfacesInsightsBarSectionConfiguration *, std::__1::allocator<FBAdInterfacesInsightsBarSectionConfiguration>> {
        struct FBAdInterfacesInsightsBarSectionConfiguration *_field1;
    } _field3;
} vector_0461997d;

typedef struct vector<FBAdInterfacesInsightsDescriptionSectionConfiguration, std::__1::allocator<FBAdInterfacesInsightsDescriptionSectionConfiguration>> {
    struct FBAdInterfacesInsightsDescriptionSectionConfiguration *_field1;
    struct FBAdInterfacesInsightsDescriptionSectionConfiguration *_field2;
    struct __compressed_pair<FBAdInterfacesInsightsDescriptionSectionConfiguration *, std::__1::allocator<FBAdInterfacesInsightsDescriptionSectionConfiguration>> {
        struct FBAdInterfacesInsightsDescriptionSectionConfiguration *_field1;
    } _field3;
} vector_3f6a2b61;

typedef struct vector<FBAdInterfacesScheduleSuggestion, std::__1::allocator<FBAdInterfacesScheduleSuggestion>> {
    struct FBAdInterfacesScheduleSuggestion *_field1;
    struct FBAdInterfacesScheduleSuggestion *_field2;
    struct __compressed_pair<FBAdInterfacesScheduleSuggestion *, std::__1::allocator<FBAdInterfacesScheduleSuggestion>> {
        struct FBAdInterfacesScheduleSuggestion *_field1;
    } _field3;
} vector_b37de375;

typedef struct vector<FBAutoFillButtonBarComponentButton, std::__1::allocator<FBAutoFillButtonBarComponentButton>> {
    struct FBAutoFillButtonBarComponentButton *_field1;
    struct FBAutoFillButtonBarComponentButton *_field2;
    struct __compressed_pair<FBAutoFillButtonBarComponentButton *, std::__1::allocator<FBAutoFillButtonBarComponentButton>> {
        struct FBAutoFillButtonBarComponentButton *_field1;
    } _field3;
} vector_dc0d52d4;

typedef struct vector<FBCollageLayoutComponentChild, std::__1::allocator<FBCollageLayoutComponentChild>> {
    struct FBCollageLayoutComponentChild *__begin_;
    struct FBCollageLayoutComponentChild *__end_;
    struct __compressed_pair<FBCollageLayoutComponentChild *, std::__1::allocator<FBCollageLayoutComponentChild>> {
        struct FBCollageLayoutComponentChild *__first_;
    } __end_cap_;
} vector_bf507950;

typedef struct vector<FBEventPermalinkStencilCellType, std::__1::allocator<FBEventPermalinkStencilCellType>> {
    unsigned int *_field1;
    unsigned int *_field2;
    struct __compressed_pair<FBEventPermalinkStencilCellType *, std::__1::allocator<FBEventPermalinkStencilCellType>> {
        unsigned int *_field1;
    } _field3;
} vector_f227b80b;

typedef struct vector<FBFeedAccessibilityComponentAction, std::__1::allocator<FBFeedAccessibilityComponentAction>> {
    struct FBFeedAccessibilityComponentAction *_field1;
    struct FBFeedAccessibilityComponentAction *_field2;
    struct __compressed_pair<FBFeedAccessibilityComponentAction *, std::__1::allocator<FBFeedAccessibilityComponentAction>> {
        struct FBFeedAccessibilityComponentAction *_field1;
    } _field3;
} vector_dcd2f98b;

typedef struct vector<FBFeedInfiniteHScrollEdge, std::__1::allocator<FBFeedInfiniteHScrollEdge>> {
    struct FBFeedInfiniteHScrollEdge *__begin_;
    struct FBFeedInfiniteHScrollEdge *__end_;
    struct __compressed_pair<FBFeedInfiniteHScrollEdge *, std::__1::allocator<FBFeedInfiniteHScrollEdge>> {
        struct FBFeedInfiniteHScrollEdge *__first_;
    } __end_cap_;
} vector_fd5cb2a1;

typedef struct vector<FBFlattenedArrayControllerChange, std::__1::allocator<FBFlattenedArrayControllerChange>> {
    struct FBFlattenedArrayControllerChange *_field1;
    struct FBFlattenedArrayControllerChange *_field2;
    struct __compressed_pair<FBFlattenedArrayControllerChange *, std::__1::allocator<FBFlattenedArrayControllerChange>> {
        struct FBFlattenedArrayControllerChange *_field1;
    } _field3;
} vector_fd37e7c2;

typedef struct vector<FBFlexibleButtonCandidate, std::__1::allocator<FBFlexibleButtonCandidate>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<FBFlexibleButtonCandidate *, std::__1::allocator<FBFlexibleButtonCandidate>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
} vector_fb101752;

typedef struct vector<FBHScrollComponentChild, std::__1::allocator<FBHScrollComponentChild>> {
    struct FBHScrollComponentChild *__begin_;
    struct FBHScrollComponentChild *__end_;
    struct __compressed_pair<FBHScrollComponentChild *, std::__1::allocator<FBHScrollComponentChild>> {
        struct FBHScrollComponentChild *__first_;
    } __end_cap_;
} vector_b11e7b84;

typedef struct vector<FBHorizontalLineItem, std::__1::allocator<FBHorizontalLineItem>> {
    struct FBHorizontalLineItem *__begin_;
    struct FBHorizontalLineItem *__end_;
    struct __compressed_pair<FBHorizontalLineItem *, std::__1::allocator<FBHorizontalLineItem>> {
        struct FBHorizontalLineItem *__first_;
    } __end_cap_;
} vector_3907e73a;

typedef struct vector<FBPYMLFeedUnitPagePhotoContentChildComponent *, std::__1::allocator<FBPYMLFeedUnitPagePhotoContentChildComponent *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<FBPYMLFeedUnitPagePhotoContentChildComponent *__strong *, std::__1::allocator<FBPYMLFeedUnitPagePhotoContentChildComponent *>> {
        id *__first_;
    } __end_cap_;
} vector_1d9eaa07;

typedef struct vector<FBStoryPromotionFooterInsightsDescriptionSectionConfiguration, std::__1::allocator<FBStoryPromotionFooterInsightsDescriptionSectionConfiguration>> {
    struct FBStoryPromotionFooterInsightsDescriptionSectionConfiguration *_field1;
    struct FBStoryPromotionFooterInsightsDescriptionSectionConfiguration *_field2;
    struct __compressed_pair<FBStoryPromotionFooterInsightsDescriptionSectionConfiguration *, std::__1::allocator<FBStoryPromotionFooterInsightsDescriptionSectionConfiguration>> {
        struct FBStoryPromotionFooterInsightsDescriptionSectionConfiguration *_field1;
    } _field3;
} vector_c6531907;

typedef struct vector<FBUFIButtonRowItem, std::__1::allocator<FBUFIButtonRowItem>> {
    struct FBUFIButtonRowItem *_field1;
    struct FBUFIButtonRowItem *_field2;
    struct __compressed_pair<FBUFIButtonRowItem *, std::__1::allocator<FBUFIButtonRowItem>> {
        struct FBUFIButtonRowItem *_field1;
    } _field3;
} vector_e555e192;

typedef struct vector<NSString *, std::__1::allocator<NSString *>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<NSString *__strong *, std::__1::allocator<NSString *>> {
        id *_field1;
    } _field3;
} vector_0c920a62;

typedef struct vector<SEL *, std::__1::allocator<SEL *>> {
    SEL *__begin_;
    SEL *__end_;
    struct __compressed_pair<SEL **, std::__1::allocator<SEL *>> {
        SEL *__first_;
    } __end_cap_;
} vector_a6ab289d;

typedef struct vector<SubPageInfo, std::__1::allocator<SubPageInfo>> {
    struct SubPageInfo *__begin_;
    struct SubPageInfo *__end_;
    struct __compressed_pair<SubPageInfo *, std::__1::allocator<SubPageInfo>> {
        struct SubPageInfo *__first_;
    } __end_cap_;
} vector_bf8be327;

typedef struct vector<__unsafe_unretained Class, std::__1::allocator<__unsafe_unretained Class>> {
    Class *_field1;
    Class *_field2;
    struct __compressed_pair<__unsafe_unretained Class *, std::__1::allocator<__unsafe_unretained Class>> {
        Class *_field1;
    } _field3;
} vector_e25fc222;

typedef struct vector<const FBConsistentFieldDescription *, std::__1::allocator<const FBConsistentFieldDescription *>> {
    struct FBConsistentFieldDescription **_field1;
    struct FBConsistentFieldDescription **_field2;
    struct __compressed_pair<const FBConsistentFieldDescription **, std::__1::allocator<const FBConsistentFieldDescription *>> {
        struct FBConsistentFieldDescription **_field1;
    } _field3;
} vector_70fe7ab3;

typedef struct vector<const FBGraphQLField *, std::__1::allocator<const FBGraphQLField *>> {
    struct FBGraphQLField **_field1;
    struct FBGraphQLField **_field2;
    struct __compressed_pair<const FBGraphQLField **, std::__1::allocator<const FBGraphQLField *>> {
        struct FBGraphQLField **_field1;
    } _field3;
} vector_14182239;

typedef struct vector<facebook::image_processing::BriefDescriptor, std::__1::allocator<facebook::image_processing::BriefDescriptor>> {
    struct BriefDescriptor *__begin_;
    struct BriefDescriptor *__end_;
    struct __compressed_pair<facebook::image_processing::BriefDescriptor *, std::__1::allocator<facebook::image_processing::BriefDescriptor>> {
        struct BriefDescriptor *__first_;
    } __end_cap_;
} vector_b604d65c;

typedef struct vector<proxygen::TraceEvent, std::__1::allocator<proxygen::TraceEvent>> {
    struct TraceEvent *_field1;
    struct TraceEvent *_field2;
    struct __compressed_pair<proxygen::TraceEvent *, std::__1::allocator<proxygen::TraceEvent>> {
        struct TraceEvent *_field1;
    } _field3;
} vector_31c84f95;

typedef struct vector<std::__1::function<NSString *()>, std::__1::allocator<std::__1::function<NSString *()>>> {
    struct function<NSString *()> *__begin_;
    struct function<NSString *()> *__end_;
    struct __compressed_pair<std::__1::function<NSString *()>*, std::__1::allocator<std::__1::function<NSString *()>>> {
        struct function<NSString *()> *__first_;
    } __end_cap_;
} vector_d3982b75;

typedef struct vector<std::__1::pair<NSAttributedString *, UIView *>, std::__1::allocator<std::__1::pair<NSAttributedString *, UIView *>>> {
    struct pair<NSAttributedString *, UIView *> *__begin_;
    struct pair<NSAttributedString *, UIView *> *__end_;
    struct __compressed_pair<std::__1::pair<NSAttributedString *, UIView *>*, std::__1::allocator<std::__1::pair<NSAttributedString *, UIView *>>> {
        struct pair<NSAttributedString *, UIView *> *__first_;
    } __end_cap_;
} vector_dd87cfe8;

typedef struct vector<std::__1::pair<NSObject *const, NSObject *>, std::__1::allocator<std::__1::pair<NSObject *const, NSObject *>>> {
    struct pair<NSObject *const, NSObject *> *_field1;
    struct pair<NSObject *const, NSObject *> *_field2;
    struct __compressed_pair<std::__1::pair<NSObject *const, NSObject *>*, std::__1::allocator<std::__1::pair<NSObject *const, NSObject *>>> {
        struct pair<NSObject *const, NSObject *> *_field1;
    } _field3;
} vector_e8ae1183;

typedef struct vector<std::__1::unique_ptr<const FB::DiskStorage::Configuration, std::__1::default_delete<const FB::DiskStorage::Configuration>>, std::__1::allocator<std::__1::unique_ptr<const FB::DiskStorage::Configuration, std::__1::default_delete<const FB::DiskStorage::Configuration>>>> {
    unique_ptr_0a28a064 *_field1;
    unique_ptr_0a28a064 *_field2;
    struct __compressed_pair<std::__1::unique_ptr<const FB::DiskStorage::Configuration, std::__1::default_delete<const FB::DiskStorage::Configuration>>*, std::__1::allocator<std::__1::unique_ptr<const FB::DiskStorage::Configuration, std::__1::default_delete<const FB::DiskStorage::Configuration>>>> {
        unique_ptr_0a28a064 *_field1;
    } _field3;
} vector_18b5165f;

typedef struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__first_;
    } __end_cap_;
} vector_a3426c4e;


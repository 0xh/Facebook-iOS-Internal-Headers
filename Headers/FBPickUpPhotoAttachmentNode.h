//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 12 2015 14:15:46).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "FBPickUpMediaAttachmentNode.h"

#import "ASMultiplexImageNodeDataSource-Protocol.h"
#import "ASMultiplexImageNodeDelegate-Protocol.h"

@class FBAlbumPhotoInfoNode, FBInteractivePhotoNode, FBKVOController, FBPhotoModel, FBUserSession, NSString;
@protocol FBPickUpPhotoAttachmentNodeDelegate;

@interface FBPickUpPhotoAttachmentNode : FBPickUpMediaAttachmentNode <ASMultiplexImageNodeDelegate, ASMultiplexImageNodeDataSource>
{
    FBUserSession *_session;
    FBInteractivePhotoNode *_interactivePhotoNode;
    unsigned int _lowResolutionImageFlag;
    unsigned int _highResolutionImageFlag;
    BOOL _loadHighResolutionImageWhileClosed;
    FBKVOController *_photoObserver;
    BOOL _shouldShowAlbumInfoGradient;
    FBAlbumPhotoInfoNode *_albumPhotoInfoNode;
    struct CGPoint _initialDismissalCenterOffset;
    BOOL _activePageInPagingNode;
    BOOL _preemptivelyDownloadsHighResolutionImage;
    BOOL _canShowAlbumInfo;
}

@property(nonatomic) BOOL canShowAlbumInfo; // @synthesize canShowAlbumInfo=_canShowAlbumInfo;
@property(readonly, nonatomic) FBInteractivePhotoNode *interactivePhotoNode; // @synthesize interactivePhotoNode=_interactivePhotoNode;
@property(nonatomic) BOOL preemptivelyDownloadsHighResolutionImage; // @synthesize preemptivelyDownloadsHighResolutionImage=_preemptivelyDownloadsHighResolutionImage;
@property(readonly, nonatomic) BOOL isActivePage; // @synthesize isActivePage=_activePageInPagingNode;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)_eligibleImageIdentifiers;
- (void)_downloadHighResolutionImage;
- (BOOL)_canDownloadHighResolutionImage;
- (void)_imageUpdated;
- (void)_updateOverlayForOrientation:(int)arg1;
@property(readonly, nonatomic) struct CGSize fullscreenOpenedHostSize;
- (struct CGSize)_fullScreenSizeForOrientation:(int)arg1;
- (struct CGSize)_imageSize;
- (void)didSettleAsInactivePage;
- (void)didSettleAsActivePage;
- (void)maySettleAsActivePage;
- (void)didBeginMoving;
- (void)didExitPagingRange;
- (void)didEnterPagingRange;
- (void)updateForViewStateConfiguration:(id)arg1;
- (id)viewStateConfiguration;
- (void)cleanUpAfterPaging;
- (void)prepareForPagingInContext:(unsigned int)arg1 inOrientation:(int)arg2 withPagingGestureRecognizer:(id)arg3;
- (void)setMinimorphFactor:(struct _FBMinimorphFactor)arg1;
- (void)setShouldCrop:(BOOL)arg1;
- (void)_updateAlbumInfoVisibleAnimated:(BOOL)arg1;
- (BOOL)_effectiveCanShowAlbumInfo;
- (void)willBeginRotationToOrientation:(int)arg1 fromOrientation:(int)arg2;
- (void)didClose;
- (void)didOpen;
- (void)willOpen;
- (void)willClose;
- (void)mayClose;
- (struct CGPoint)initialDismissalCenterOffset;
- (void)mayOpen;
@property(retain, nonatomic) FBPhotoModel *photoModel; // @dynamic photoModel;
- (void)cleanUpAfterClosing;
- (void)setOpenedOverlayNode:(id)arg1;
- (BOOL)shouldBeginGesture:(id)arg1;
- (BOOL)shouldBeginPagingGesture:(id)arg1 inDirection:(int)arg2;
- (BOOL)gestureRecognizerShouldIntervene:(id)arg1;
- (struct CGSize)rotatedSizeForOrientation:(int)arg1;
- (struct CGSize)openedSizeForOrientation:(int)arg1;
- (struct CGSize)calculateMaxSizeThatFits:(struct CGSize)arg1;
- (struct CGSize)calculateMiniSizeThatFits:(struct CGSize)arg1;
- (struct CGSize)calculateSizeThatFits:(struct CGSize)arg1;
- (struct CGRect)mediaContentFrame;
- (void)layout;
- (BOOL)isPageable;
- (BOOL)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)initWithPhotoModel:(id)arg1 lowResolutionImageFlag:(unsigned int)arg2 highResolutionImageFlag:(unsigned int)arg3 loadHighResolutionImageWhileClosed:(BOOL)arg4 session:(id)arg5;
- (id)initWithPhotoModel:(id)arg1 lowResolutionImageFlag:(unsigned int)arg2 highResolutionImageFlag:(unsigned int)arg3 session:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) __weak id <FBPickUpPhotoAttachmentNodeDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end


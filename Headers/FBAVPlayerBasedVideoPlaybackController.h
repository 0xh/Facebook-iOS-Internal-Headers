//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 12 2015 14:15:46).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "FBClientProxyThrottlingDelegate-Protocol.h"
#import "FBSimpleVideoPlaybackController-Protocol.h"
#import "FBVideoPlaybackController-Protocol.h"

@class AVPlayer, AVPlayerLayer, FBAVPlayerItemLoader, FBAVPlayerVolumeRamp, FBClientProxy, FBKVOController, FBPlaybackWaterfallCounter, FBQueuePerformer, FBUserSession, FBVideoBitrate, FBVideoInitializationTracker, FBVideoPlaybackContainerView, FBVideoPlaybackEventListenerAnnouncer, FBVideoPlaybackItem, FBVideoPlaybackStateMachine, FBVideoPlayerThrottlerDataProvider, NSString, UIView;
@protocol FBAudioSessionClientProvider, FBPerforming, FBVideoPlaybackLoggingDataProvider, FBVideoPlayerAudioSessionClientProtocol, OS_dispatch_group, OS_dispatch_queue;

@interface FBAVPlayerBasedVideoPlaybackController : NSObject <FBSimpleVideoPlaybackController, FBClientProxyThrottlingDelegate, FBVideoPlaybackController>
{
    FBVideoPlaybackEventListenerAnnouncer *_announcer;
    NSObject<OS_dispatch_queue> *_queue;
    FBQueuePerformer *_performer;
    id <FBPerforming> _playPerformer;
    AVPlayer *_player;
    AVPlayerLayer *_playerLayer;
    FBVideoPlaybackContainerView *_playerContainerView;
    FBAVPlayerItemLoader *_playerItemLoader;
    FBClientProxy *_clientProxy;
    id _periodicTimeObserver;
    double _currentVideoTime;
    double _videoTimeLoaded;
    FBKVOController *_observation;
    FBKVOController *_playerLayerObservation;
    FBVideoPlaybackStateMachine *_stateMachine;
    FBPlaybackWaterfallCounter *_playbackWaterfallCounter;
    id <FBVideoPlaybackLoggingDataProvider> _loggingProvider;
    FBUserSession *_session;
    FBVideoBitrate *_videoBitrate;
    int _currentVideoPlaybackQuality;
    id <FBVideoPlayerAudioSessionClientProtocol> _audioSessionManagerClient;
    FBVideoPlayerThrottlerDataProvider *_throttlerDataProvider;
    BOOL _playerIsStalled;
    BOOL _scrubIsInProgress;
    BOOL _wasPlayingBeforeScrubbing;
    BOOL _disablePreviewImage;
    int _playerProgressState;
    double _pendingSeek;
    double _seekSourceTimePosition;
    double _startedPlayingTimeThreshold;
    FBAVPlayerVolumeRamp *_pendingVolumeRamp;
    NSString *_videoGravity;
    FBVideoInitializationTracker *_videoInitializationTracker;
    NSObject<OS_dispatch_group> *_createPlayerGroup;
    BOOL _wasHDBeforeQualityChange;
    BOOL _mustCreatePlayer;
    BOOL _useAVPlayerBackgroundDealloc;
    BOOL _mute;
    BOOL _showsVideoPreviewImage;
    BOOL _isAtEndOfVideo;
    BOOL _showShadow;
    BOOL _showPreviewImageAfterVideoEnds;
    id <FBAudioSessionClientProvider> _audioSessionClientProvider;
    double _duration;
}

@property(nonatomic) __weak id <FBAudioSessionClientProvider> audioSessionClientProvider; // @synthesize audioSessionClientProvider=_audioSessionClientProvider;
@property(nonatomic) BOOL showPreviewImageAfterVideoEnds; // @synthesize showPreviewImageAfterVideoEnds=_showPreviewImageAfterVideoEnds;
@property(nonatomic) BOOL showShadow; // @synthesize showShadow=_showShadow;
@property(readonly, nonatomic) BOOL isAtEndOfVideo; // @synthesize isAtEndOfVideo=_isAtEndOfVideo;
@property(readonly, nonatomic) FBVideoInitializationTracker *videoInitializationTracker; // @synthesize videoInitializationTracker=_videoInitializationTracker;
@property(retain, nonatomic) id <FBVideoPlaybackLoggingDataProvider> loggingProvider; // @synthesize loggingProvider=_loggingProvider;
@property(readonly, nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) BOOL showsVideoPreviewImage; // @synthesize showsVideoPreviewImage=_showsVideoPreviewImage;
@property(nonatomic) BOOL mute; // @synthesize mute=_mute;
- (void).cxx_destruct;
- (id)_playerDispatchGroup;
- (id)_getPlayer;
- (void)_setVideoLoader:(id)arg1;
- (void)_setPlayPerformer:(id)arg1;
- (void)_setPlayer:(id)arg1;
- (id)getPreviewImageView;
- (BOOL)isCurrentlyPlaying;
- (BOOL)_shouldReloadFromPlaybackItem:(id)arg1;
- (void)_setNewItemOnPlayerAndCancelLoadingCurrent:(id)arg1 player:(id)arg2;
- (void)_resetForError:(id)arg1;
- (id)_getCurrentScreenshot;
- (void)_updateStallState;
- (void)_refreshVideoPreviewImage;
- (void)_refreshImagePlaceHolderURL;
- (void)_makePlayerLayer;
- (void)_ensurePlayer;
- (void)_createPlayer;
- (void)_throttle;
- (void)_playerLayerIsReadyForDisplay:(id)arg1;
- (void)_teardownPeriodicTimeObserverForPlayer:(id)arg1;
- (void)_setupPeriodicTimeObserverForPlayer:(id)arg1;
- (void)_clearExistingState;
- (void)_playerStatusChanged:(id)arg1;
- (void)_playerItemChanged:(id)arg1;
- (void)_resumePlaybackFromStallIfNeeded;
- (void)_loadedTimeRangeChanged:(id)arg1;
- (void)_itemDidAddAccessLogEvent;
- (void)_itemDidAddErrorLogEvent;
- (void)_playbackStalled;
- (void)_itemDidPlayToEndTime;
- (void)_reevaluatePlayerState:(float)arg1;
- (double)_getSanitizedTimePosition:(double)arg1;
- (BOOL)_playerIsStalledBasedOnTimeLoaded;
- (void)_updateLoggingForStartedPlaying;
- (void)_transitionToStartedPlaying;
- (int)_fetchAtomSize;
- (int)_fetchBitRate;
- (CDStruct_7c32120d)_fetchVideoMetadataForClientProxyAnalysis;
- (void)_doObservePlayerItem:(id)arg1;
- (id)deepCopy;
- (id)playbackWaterfallCounter;
- (id)playerItemLoader;
@property(readonly, nonatomic) BOOL invalidated;
@property(copy, nonatomic) NSString *videoGravity;
@property(readonly, nonatomic) struct CGSize bestEffortVideoSize;
@property(readonly, nonatomic) BOOL isVisuallyStalled;
@property(readonly, nonatomic) double videoTimeLoaded;
@property(readonly, nonatomic) double currentVideoTime;
@property(readonly, nonatomic) int state;
- (id)playerLayer;
- (void)_createPlayerContainerView;
@property(readonly, nonatomic) UIView *view;
@property(readonly, nonatomic) FBVideoPlaybackItem *currentVideoPlaybackItem;
- (void)_refreshAudioSession;
- (void)fadeAudioOutWithDuration:(float)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fadeAudioInWithDuration:(float)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_rampFromVolume:(float)arg1 toVolume:(float)arg2 duration:(float)arg3 completion:(CDUnknownBlockType)arg4;
- (void)setVolume:(float)arg1;
- (void)getVolume:(CDUnknownBlockType)arg1;
- (BOOL)isScrubbingSupported;
- (BOOL)isEligibleForDefinition:(int)arg1;
- (int)playableClientProxyDefinition;
- (id)playableURL;
- (void)finishScrubbing;
- (void)scrubToPlaybackTime:(double)arg1;
- (void)beginScrubbing;
- (void)invalidateWithCompletion:(CDUnknownBlockType)arg1;
- (void)_cancelThePreparationRequest;
- (void)_cancelRequestedPlayingIfNecessaryWithNetworkCancel:(BOOL)arg1;
- (void)stopBuffering;
- (BOOL)_isRequestInProgress;
- (void)_pauseWithNetworkCancel:(BOOL)arg1;
- (void)pause;
- (void)play;
- (void)prepareToPlay;
- (void)_resetPlayerItemLoader;
- (void)_unloadVideoRecreatePlayerAndLoaderWithRate:(float)arg1;
@property(nonatomic) int playbackQuality;
- (void)replaceVideoPlaybackItem:(id)arg1 videoQuality:(int)arg2 completion:(CDUnknownBlockType)arg3;
- (void)replaceVideoPlaybackItem:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)removeVideoPlaybackEventListener:(id)arg1;
- (void)addVideoPlaybackEventListener:(id)arg1;
- (CDStruct_facbd6cb)calculateVideoBasicData;
- (CDStruct_bccf9d01)calculateThrottlingData;
- (void)dealloc;
@property(readonly, copy) NSString *description;
- (id)initWithSession:(id)arg1 queue:(id)arg2;
- (id)initWithSession:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

